/**
 * @file can1_recv_entries.h
 * @brief Header file for describing CAN message queues.
 *
 * @details
 * This file defines macros for handling CAN message queues, specifying message ID,
 * buffer size, and whether the queue is circular. It is auto-generated by dbc-to-c.py,
 * and any modifications should be made in the DBC file to ensure consistency.
 *
 * Macros defined in this file follow the format:
 *
 *   CAN_RECV_ENTRY(message_id, buffer_size, circular)
 *
 * Where:
 * - message_id: The identifier for the CAN message.
 * - buffer_size: The size of the receive buffer.
 * - circular: Indicates if the buffer operates in a circular manner.
 *
 * For more details, refer to the BSP CAN header files.
 */

CAN_RECV_ENTRY(0x2, 10, false) // BPS_Trip
CAN_RECV_ENTRY(0x102, 10, false) // BPS_Contactor_State
CAN_RECV_ENTRY(0x10c, 10, false) // Charging_Enable
CAN_RECV_ENTRY(0x101, 10, false) // BPS_All_Clear
CAN_RECV_ENTRY(0x107, 10, false) // WDog_Triggered
CAN_RECV_ENTRY(0x104, 10, false) // BPS_Voltage_Array
CAN_RECV_ENTRY(0x105, 10, false) // BPS_Temperature_Array
CAN_RECV_ENTRY(0x106, 10, false) // BPS_SOC
CAN_RECV_ENTRY(0x10d, 10, false) // BPS_Voltage_Summary
CAN_RECV_ENTRY(0x108, 10, false) // BPS_Temperature_Summary
CAN_RECV_ENTRY(0x10b, 10, false) // Supplemental_Voltage
