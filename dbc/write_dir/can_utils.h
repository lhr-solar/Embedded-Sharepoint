/**
 * @file can_utils.h
 * @brief Header file for CAN message utilities.
 *
 * @details
 * This file provides macros and enumerations to assist in parsing and interpreting
 * CAN messages. It is auto-generated by dbc-to-c.py, and any modifications should
 * be made in the DBC file to ensure consistency.
 *
 * The following macros and enumerations are available:
 */

/**
 * @def CANUTILS_[message_name]
 * @brief Message Macros
 * 
 * Maps CAN message names to their corresponding frame IDs.
 *
 * Example usage:
 * @code
 * #define CANUTILS_Heartbeat 0x650
 * @endcode
 */

/**
 * @def CANUTIL_GET_VALUE_[signal_name]
 * @brief Signal Extraction Macros
 * 
 * Extracts the signal value from an 8-byte CAN message. Requires a pointer
 * to the data array for the message.
 * 
 * Example usage:
 * @code
 * uint8_t can_message_arr[8];
 * int boost_enable = CANUTIL_GET_VALUE_BoostEnable(can_message_arr);
 * @endcode
 */

/**
 * @typedef canutil_[signal_name]_values
 * @brief Signal Value Enums
 * 
 * Defines enumerations that represent possible values for specific signals.
 *
 * Example:
 * @code
 * typedef enum {
 *     OFF = 0,
 *     ON = 1
 * } canutil_UI_Mode_vals;
 * @endcode
 */

 #define CANUTIL_ID00CUI_status 0xc

#define CANUTIL_GET_VALUE_UI_touchActive(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UI_audioActive(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_UI_bluetoothActive(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_UI_cellActive(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_UI_displayReady(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_UI_displayOn(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_UI_wifiActive(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_UI_wifiConnected(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_UI_systemActive(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_UI_readyForDrive(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_UI_cellConnected(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_UI_vpnActive(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_UI_autopilotTrial(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  NONE = 0,
  START = 1,
  STOP = 2,
  ACTIVE = 3
 } canutil_UI_autopilotTrial_vals;

#define CANUTIL_GET_VALUE_UI_factoryReset(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  NONE_SNA = 0,
  DEVELOPER = 1,
  DIAGNOSTIC = 2,
  CUSTOMER = 3
 } canutil_UI_factoryReset_vals;

#define CANUTIL_GET_VALUE_UI_gpsActive(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)
#define CANUTIL_GET_VALUE_UI_screenshotActive(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)
#define CANUTIL_GET_VALUE_UI_radioActive(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)
#define CANUTIL_GET_VALUE_UI_cellNetworkTechnology(d) ((*( (uint64_t *) d ) & 0x1e00000000000) >> 45)

typedef enum { 
  CELL_NETWORK_NONE = 0,
  CELL_NETWORK_GPRS = 1,
  CELL_NETWORK_EDGE = 2,
  CELL_NETWORK_UMTS = 3,
  CELL_NETWORK_HSDPA = 4,
  CELL_NETWORK_HSUPA = 5,
  CELL_NETWORK_HSPA = 6,
  CELL_NETWORK_LTE = 7,
  CELL_NETWORK_GSM = 8,
  CELL_NETWORK_CDMA = 9,
  CELL_NETWORK_WCDMA = 10,
  CELL_NETWORK_SNA = 15
 } canutil_UI_cellNetworkTechnology_vals;

#define CANUTIL_GET_VALUE_UI_cellReceiverPower(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_UI_falseTouchCounter(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_UI_developmentCar(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_UI_cameraActive(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_UI_cellSignalBars(d) ((*( (uint64_t *) d ) & 0x1c00000) >> 22)

typedef enum { 
  ZERO = 0,
  ONE = 1,
  TWO = 2,
  THREE = 3,
  FOUR = 4,
  FIVE = 5,
  SNA = 7
 } canutil_UI_cellSignalBars_vals;

#define CANUTIL_GET_VALUE_UI_pcbTemperature(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_UI_cpuTemperature(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID353UI_status 0x353

#define CANUTIL_GET_VALUE_UI_touchActive(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UI_audioActive(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_UI_bluetoothActive(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_UI_cellActive(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_UI_displayReady(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_UI_displayOn(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_UI_wifiActive(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_UI_wifiConnected(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_UI_systemActive(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_UI_readyForDrive(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_UI_cellConnected(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_UI_vpnActive(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_UI_autopilotTrial(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)
#define CANUTIL_GET_VALUE_UI_factoryReset(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)
#define CANUTIL_GET_VALUE_UI_gpsActive(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)
#define CANUTIL_GET_VALUE_UI_screenshotActive(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)
#define CANUTIL_GET_VALUE_UI_radioActive(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)
#define CANUTIL_GET_VALUE_UI_cellNetworkTechnology(d) ((*( (uint64_t *) d ) & 0x1e00000000000) >> 45)
#define CANUTIL_GET_VALUE_UI_cellReceiverPower(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_UI_falseTouchCounter(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_UI_developmentCar(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_UI_cameraActive(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_UI_cellSignalBars(d) ((*( (uint64_t *) d ) & 0x1c00000) >> 22)
#define CANUTIL_GET_VALUE_UI_pcbTemperature(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_UI_cpuTemperature(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID016DI_bmsRequest 0x16

#define CANUTIL_GET_VALUE_DI_bmsRequestInterfaceVersion(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)
#define CANUTIL_GET_VALUE_DI_bmsOpenContactorsRequest(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_ID082UI_tripPlanning 0x82

#define CANUTIL_GET_VALUE_UI_tripPlanningActive(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UI_navToSupercharger(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_UI_requestActiveBatteryHeating(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_UI_predictedEnergy(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)

typedef enum { 
  TRIP_TOO_LONG = 32767,
  SNA = 32768
 } canutil_UI_predictedEnergy_vals;

#define CANUTIL_GET_VALUE_UI_hindsightEnergy(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)

typedef enum { 
  TRIP_TOO_LONG = 32767,
  SNA = 32768
 } canutil_UI_hindsightEnergy_vals;

#define CANUTIL_GET_VALUE_UI_energyAtDestination(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)

typedef enum { 
  TRIP_TOO_LONG = 32767,
  SNA = 32768
 } canutil_UI_energyAtDestination_vals;

#define CANUTIL_ID101RCM_inertial1 0x101

#define CANUTIL_GET_VALUE_RCM_yawRate(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)

typedef enum { 
  SNA = 32768
 } canutil_RCM_yawRate_vals;

#define CANUTIL_GET_VALUE_RCM_pitchRate(d) ((*( (uint64_t *) d ) & 0x7fff000000000000) >> 48)

typedef enum { 
  SNA = 16384
 } canutil_RCM_pitchRate_vals;

#define CANUTIL_GET_VALUE_RCM_rollRate(d) ((*( (uint64_t *) d ) & 0xfffe00000000) >> 33)

typedef enum { 
  SNA = 16384
 } canutil_RCM_rollRate_vals;

#define CANUTIL_GET_VALUE_RCM_rollRateQF(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  INIT = 0,
  VALID = 1,
  TEMP_INVALID = 2,
  FAULTED = 3
 } canutil_RCM_rollRateQF_vals;

#define CANUTIL_GET_VALUE_RCM_yawRateQF(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)

typedef enum { 
  FAULTED = 0,
  NOT_FAULTED = 1
 } canutil_RCM_yawRateQF_vals;

#define CANUTIL_GET_VALUE_RCM_pitchRateQF(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  INIT = 0,
  VALID = 1,
  TEMP_INVALID = 2,
  FAULTED = 3
 } canutil_RCM_pitchRateQF_vals;

#define CANUTIL_GET_VALUE_RCM_inertial1Counter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_RCM_inertial1Checksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID111RCM_inertial2 0x111

#define CANUTIL_GET_VALUE_RCM_longitudinalAccel(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)

typedef enum { 
  SNA = 32768
 } canutil_RCM_longitudinalAccel_vals;

#define CANUTIL_GET_VALUE_RCM_lateralAccel(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)

typedef enum { 
  SNA = 32768
 } canutil_RCM_lateralAccel_vals;

#define CANUTIL_GET_VALUE_RCM_verticalAccel(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)

typedef enum { 
  SNA = 32768
 } canutil_RCM_verticalAccel_vals;

#define CANUTIL_GET_VALUE_RCM_longitudinalAccelQF(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)

typedef enum { 
  FAULTED = 0,
  NOT_FAULTED = 1
 } canutil_RCM_longitudinalAccelQF_vals;

#define CANUTIL_GET_VALUE_RCM_lateralAccelQF(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)

typedef enum { 
  FAULTED = 0,
  NOT_FAULTED = 1
 } canutil_RCM_lateralAccelQF_vals;

#define CANUTIL_GET_VALUE_RCM_verticalAccelQF(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)

typedef enum { 
  FAULTED = 0,
  NOT_FAULTED = 1
 } canutil_RCM_verticalAccelQF_vals;

#define CANUTIL_GET_VALUE_RCM_inertial2Counter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_RCM_inertial2Checksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_RCM_inertial2New 0x116

#define CANUTIL_GET_VALUE_RCM_longitudinalAccel(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_RCM_lateralAccel(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_RCM_verticalAccel(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_RCM_longitudinalAccelQF(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_RCM_lateralAccelQF(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_RCM_verticalAccelQF(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_RCM_inertial2Counter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_RCM_inertial2Checksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID102VCLEFT_doorStatus 0x102

#define CANUTIL_GET_VALUE_VCLEFT_frontLatchStatus(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)

typedef enum { 
  LATCH_SNA = 0,
  LATCH_OPENED = 1,
  LATCH_CLOSED = 2,
  LATCH_CLOSING = 3,
  LATCH_OPENING = 4,
  LATCH_AJAR = 5,
  LATCH_TIMEOUT = 6,
  LATCH_DEFAULT = 7,
  LATCH_FAULT = 8
 } canutil_VCLEFT_frontLatchStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearLatchStatus(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)

typedef enum { 
  LATCH_SNA = 0,
  LATCH_OPENED = 1,
  LATCH_CLOSED = 2,
  LATCH_CLOSING = 3,
  LATCH_OPENING = 4,
  LATCH_AJAR = 5,
  LATCH_TIMEOUT = 6,
  LATCH_DEFAULT = 7,
  LATCH_FAULT = 8
 } canutil_VCLEFT_rearLatchStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontLatchSwitch(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCLEFT_rearLatchSwitch(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCLEFT_frontHandlePulled(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCLEFT_rearHandlePulled(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCLEFT_frontRelActuatorSwitch(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCLEFT_rearRelActuatorSwitch(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCLEFT_frontHandlePWM(d) ((*( (uint64_t *) d ) & 0x7f000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCLEFT_rearHandlePWM(d) ((*( (uint64_t *) d ) & 0x7f0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCLEFT_frontIntSwitchPressed(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_VCLEFT_rearIntSwitchPressed(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_VCLEFT_mirrorTiltXPosition(d) ((*( (uint64_t *) d ) & 0x7f80000000) >> 31)
#define CANUTIL_GET_VALUE_VCLEFT_mirrorTiltYPosition(d) ((*( (uint64_t *) d ) & 0x7f800000) >> 23)
#define CANUTIL_GET_VALUE_VCLEFT_mirrorState(d) ((*( (uint64_t *) d ) & 0x38000) >> 15)

typedef enum { 
  MIRROR_STATE_IDLE = 0,
  MIRROR_STATE_TILT_X = 1,
  MIRROR_STATE_TILT_Y = 2,
  MIRROR_STATE_FOLD_UNFOLD = 3,
  MIRROR_STATE_RECALL = 4
 } canutil_VCLEFT_mirrorState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_mirrorFoldState(d) ((*( (uint64_t *) d ) & 0x7000) >> 12)

typedef enum { 
  MIRROR_FOLD_STATE_UNKNOWN = 0,
  MIRROR_FOLD_STATE_FOLDED = 1,
  MIRROR_FOLD_STATE_UNFOLDED = 2,
  MIRROR_FOLD_STATE_FOLDING = 3,
  MIRROR_FOLD_STATE_UNFOLDING = 4
 } canutil_VCLEFT_mirrorFoldState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_mirrorRecallState(d) ((*( (uint64_t *) d ) & 0xe00) >> 9)

typedef enum { 
  MIRROR_RECALL_STATE_INIT = 0,
  MIRROR_RECALL_STATE_RECALLING_AXIS_1 = 1,
  MIRROR_RECALL_STATE_RECALLING_AXIS_2 = 2,
  MIRROR_RECALL_STATE_RECALLING_COMPLETE = 3,
  MIRROR_RECALL_STATE_RECALLING_FAILED = 4,
  MIRROR_RECALL_STATE_RECALLING_STOPPED = 5
 } canutil_VCLEFT_mirrorRecallState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_mirrorHeatState(d) ((*( (uint64_t *) d ) & 0x1c0) >> 6)

typedef enum { 
  HEATER_STATE_SNA = 0,
  HEATER_STATE_ON = 1,
  HEATER_STATE_OFF = 2,
  HEATER_STATE_OFF_UNAVAILABLE = 3,
  HEATER_STATE_FAULT = 4
 } canutil_VCLEFT_mirrorHeatState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_mirrorDipped(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCLEFT_frontHandlePulledPersist(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_ID103VCRIGHT_doorStatus 0x103

#define CANUTIL_GET_VALUE_VCRIGHT_frontLatchStatus(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)

typedef enum { 
  LATCH_SNA = 0,
  LATCH_OPENED = 1,
  LATCH_CLOSED = 2,
  LATCH_CLOSING = 3,
  LATCH_OPENING = 4,
  LATCH_AJAR = 5,
  LATCH_TIMEOUT = 6,
  LATCH_DEFAULT = 7,
  LATCH_FAULT = 8
 } canutil_VCRIGHT_frontLatchStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_rearLatchStatus(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)

typedef enum { 
  LATCH_SNA = 0,
  LATCH_OPENED = 1,
  LATCH_CLOSED = 2,
  LATCH_CLOSING = 3,
  LATCH_OPENING = 4,
  LATCH_AJAR = 5,
  LATCH_TIMEOUT = 6,
  LATCH_DEFAULT = 7,
  LATCH_FAULT = 8
 } canutil_VCRIGHT_rearLatchStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontLatchSwitch(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCRIGHT_rearLatchSwitch(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCRIGHT_frontHandlePulled(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCRIGHT_rearHandlePulled(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCRIGHT_frontRelActuatorSwitch(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCRIGHT_rearRelActuatorSwitch(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCRIGHT_frontHandlePWM(d) ((*( (uint64_t *) d ) & 0x1fc000000000000) >> 50)
#define CANUTIL_GET_VALUE_VCRIGHT_rearHandlePWM(d) ((*( (uint64_t *) d ) & 0x3f80000000000) >> 43)
#define CANUTIL_GET_VALUE_VCRIGHT_reservedForBackCompat(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)
#define CANUTIL_GET_VALUE_VCRIGHT_frontHandlePulledPersist(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_VCRIGHT_frontIntSwitchPressed(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_VCRIGHT_rearIntSwitchPressed(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_VCRIGHT_mirrorTiltXPosition(d) ((*( (uint64_t *) d ) & 0x7f80000000) >> 31)
#define CANUTIL_GET_VALUE_VCRIGHT_mirrorTiltYPosition(d) ((*( (uint64_t *) d ) & 0x7f800000) >> 23)
#define CANUTIL_GET_VALUE_VCRIGHT_mirrorState(d) ((*( (uint64_t *) d ) & 0x38000) >> 15)

typedef enum { 
  MIRROR_STATE_IDLE = 0,
  MIRROR_STATE_TILT_X = 1,
  MIRROR_STATE_TILT_Y = 2,
  MIRROR_STATE_FOLD_UNFOLD = 3,
  MIRROR_STATE_RECALL = 4
 } canutil_VCRIGHT_mirrorState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_mirrorFoldState(d) ((*( (uint64_t *) d ) & 0x7000) >> 12)

typedef enum { 
  MIRROR_FOLD_STATE_UNKNOWN = 0,
  MIRROR_FOLD_STATE_FOLDED = 1,
  MIRROR_FOLD_STATE_UNFOLDED = 2,
  MIRROR_FOLD_STATE_FOLDING = 3,
  MIRROR_FOLD_STATE_UNFOLDING = 4
 } canutil_VCRIGHT_mirrorFoldState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_trunkLatchStatus(d) ((*( (uint64_t *) d ) & 0xf00) >> 8)

typedef enum { 
  LATCH_SNA = 0,
  LATCH_OPENED = 1,
  LATCH_CLOSED = 2,
  LATCH_CLOSING = 3,
  LATCH_OPENING = 4,
  LATCH_AJAR = 5,
  LATCH_TIMEOUT = 6,
  LATCH_DEFAULT = 7,
  LATCH_FAULT = 8
 } canutil_VCRIGHT_trunkLatchStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_mirrorRecallState(d) ((*( (uint64_t *) d ) & 0x70) >> 4)

typedef enum { 
  MIRROR_RECALL_STATE_INIT = 0,
  MIRROR_RECALL_STATE_RECALLING_AXIS_1 = 1,
  MIRROR_RECALL_STATE_RECALLING_AXIS_2 = 2,
  MIRROR_RECALL_STATE_RECALLING_COMPLETE = 3,
  MIRROR_RECALL_STATE_RECALLING_FAILED = 4,
  MIRROR_RECALL_STATE_RECALLING_STOPPED = 5
 } canutil_VCRIGHT_mirrorRecallState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_mirrorDipped(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID113GTW_bmpDebug 0x113

#define CANUTIL_GET_VALUE_GTW_bmpState(d) ((*( (uint64_t *) d ) & 0x1fe00) >> 9)

typedef enum { 
  BMP_STATE_OFF = 0,
  BMP_STATE_ON = 1,
  BMP_STATE_ASLEEP = 2,
  BMP_STATE_MIA = 3,
  BMP_STATE_RESET = 4,
  BMP_STATE_POWER_CYCLE = 5,
  DUMMY = 255
 } canutil_GTW_bmpState_vals;

#define CANUTIL_GET_VALUE_GTW_BMP_AWAKE_PIN(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_GTW_BMP_PGOOD_PIN(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_GTW_BMP_PERIPH_nRST_3V3_PIN(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_GTW_BMP_GTW_PMIC_THERMTRIP(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_GTW_BMP_GTW_SOC_PWROK(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_GTW_BMP_GTW_PMIC_ERROR(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_GTW_BMP_GTW_nSUSPWR(d) ((*( (uint64_t *) d ) & 0x400) >> 10)
#define CANUTIL_GET_VALUE_GTW_BMP_PMIC_PWR_ON(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_GTW_BMP_GTW_PMIC_ON(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_ID119VCSEC_windowRequests 0x119

#define CANUTIL_GET_VALUE_VCSEC_windowRequestLF(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_VCSEC_windowRequestLR(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_VCSEC_windowRequestRF(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_VCSEC_windowRequestRR(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_VCSEC_windowRequestType(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  WINDOW_REQUEST_IDLE = 0,
  WINDOW_REQUEST_GOTO_PERCENT = 1,
  WINDOW_REQUEST_GOTO_CRACKED = 2,
  WINDOW_REQUEST_GOTO_CLOSED = 3
 } canutil_VCSEC_windowRequestType_vals;

#define CANUTIL_GET_VALUE_VCSEC_windowRequestPercent(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)

typedef enum { 
  SNA = 127
 } canutil_VCSEC_windowRequestPercent_vals;

#define CANUTIL_GET_VALUE_VCSEC_hvacRunScreenProtectOnly(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID122VCLEFT_doorStatus2 0x122

#define CANUTIL_GET_VALUE_VCLEFT_frontLatchRelDuty(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_VCLEFT_rearLatchRelDuty(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCLEFT_vehicleInMotion(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_VCLEFT_frontDoorState(d) ((*( (uint64_t *) d ) & 0x380000000) >> 31)

typedef enum { 
  DOOR_STATE_UNKNOWN = 0,
  DOOR_STATE_CLOSED = 1,
  DOOR_STATE_WAIT_FOR_SHORT_DROP = 2,
  DOOR_STATE_RELEASING_LATCH = 3,
  DOOR_STATE_OPEN_OR_AJAR = 4
 } canutil_VCLEFT_frontDoorState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearDoorState(d) ((*( (uint64_t *) d ) & 0x70000000) >> 28)

typedef enum { 
  DOOR_STATE_UNKNOWN = 0,
  DOOR_STATE_CLOSED = 1,
  DOOR_STATE_WAIT_FOR_SHORT_DROP = 2,
  DOOR_STATE_RELEASING_LATCH = 3,
  DOOR_STATE_OPEN_OR_AJAR = 4
 } canutil_VCLEFT_rearDoorState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontHandleRawStatus(d) ((*( (uint64_t *) d ) & 0x7000000) >> 24)

typedef enum { 
  EXTERIOR_HANDLE_STATUS_SNA = 0,
  EXTERIOR_HANDLE_STATUS_INDETERMINATE = 1,
  EXTERIOR_HANDLE_STATUS_NOT_ACTIVE = 2,
  EXTERIOR_HANDLE_STATUS_ACTIVE = 3,
  EXTERIOR_HANDLE_STATUS_DISCONNECTED = 4,
  EXTERIOR_HANDLE_STATUS_FAULT = 5
 } canutil_VCLEFT_frontHandleRawStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearHandleRawStatus(d) ((*( (uint64_t *) d ) & 0xe00000) >> 21)

typedef enum { 
  EXTERIOR_HANDLE_STATUS_SNA = 0,
  EXTERIOR_HANDLE_STATUS_INDETERMINATE = 1,
  EXTERIOR_HANDLE_STATUS_NOT_ACTIVE = 2,
  EXTERIOR_HANDLE_STATUS_ACTIVE = 3,
  EXTERIOR_HANDLE_STATUS_DISCONNECTED = 4,
  EXTERIOR_HANDLE_STATUS_FAULT = 5
 } canutil_VCLEFT_rearHandleRawStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontHandleDebounceStatus(d) ((*( (uint64_t *) d ) & 0x70000) >> 16)

typedef enum { 
  EXTERIOR_HANDLE_STATUS_SNA = 0,
  EXTERIOR_HANDLE_STATUS_INDETERMINATE = 1,
  EXTERIOR_HANDLE_STATUS_NOT_ACTIVE = 2,
  EXTERIOR_HANDLE_STATUS_ACTIVE = 3,
  EXTERIOR_HANDLE_STATUS_DISCONNECTED = 4,
  EXTERIOR_HANDLE_STATUS_FAULT = 5
 } canutil_VCLEFT_frontHandleDebounceStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearHandleDebounceStatus(d) ((*( (uint64_t *) d ) & 0xe000) >> 13)

typedef enum { 
  EXTERIOR_HANDLE_STATUS_SNA = 0,
  EXTERIOR_HANDLE_STATUS_INDETERMINATE = 1,
  EXTERIOR_HANDLE_STATUS_NOT_ACTIVE = 2,
  EXTERIOR_HANDLE_STATUS_ACTIVE = 3,
  EXTERIOR_HANDLE_STATUS_DISCONNECTED = 4,
  EXTERIOR_HANDLE_STATUS_FAULT = 5
 } canutil_VCLEFT_rearHandleDebounceStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontHandle5vEnable(d) ((*( (uint64_t *) d ) & 0x400) >> 10)
#define CANUTIL_GET_VALUE_VCLEFT_rearHandle5vEnable(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_VCLEFT_mirrorFoldMaxCurrent(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)
#define CANUTIL_ID123UI_alertMatrix1 0x123

#define CANUTIL_GET_VALUE_UI_a001_DriverDoorOpen(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UI_a002_DoorOpen(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_UI_a003_TrunkOpen(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_UI_a004_FrunkOpen(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_UI_a005_HeadlightsOnDoorOpen(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_UI_a006_RemoteServiceAlert(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_UI_a007_SoftPackConfigMismatch(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_UI_a008_TouchScreenError(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_UI_a009_SquashfsError(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_UI_a010_MapsMissing(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_UI_a011_IncorrectMap(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_UI_a012_NotOnPrivateProperty(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_UI_a013_TPMSHardWarning(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_UI_a014_TPMSSoftWarning(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_UI_a015_TPMSOverPressureWarning(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)
#define CANUTIL_GET_VALUE_UI_a016_TPMSTemperatureWarning(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_UI_a017_TPMSSystemFault(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)
#define CANUTIL_GET_VALUE_UI_a018_SlipStartOn(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)
#define CANUTIL_GET_VALUE_UI_a019_ParkBrakeFault(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)
#define CANUTIL_GET_VALUE_UI_a020_SteeringReduced(d) ((*( (uint64_t *) d ) & 0x200000000000) >> 45)
#define CANUTIL_GET_VALUE_UI_a021_RearSeatbeltUnbuckled(d) ((*( (uint64_t *) d ) & 0x100000000000) >> 44)
#define CANUTIL_GET_VALUE_UI_a022_ApeFusesEtc(d) ((*( (uint64_t *) d ) & 0x80000000000) >> 43)
#define CANUTIL_GET_VALUE_UI_a023_CellInternetCheckFailed(d) ((*( (uint64_t *) d ) & 0x40000000000) >> 42)
#define CANUTIL_GET_VALUE_UI_a024_WifiInternetCheckFailed(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)
#define CANUTIL_GET_VALUE_UI_a025_WifiOnlineCheckFailed(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_UI_a026_ModemResetLoopDetected(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_UI_a027_AutoSteerMIA(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_UI_a028_FrontTrunkPopupClosed(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_UI_a029_ModemMIA(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_UI_a030_ModemVMCrash(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_UI_a031_BrakeFluidLow(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_UI_a032_CellModemRecoveryResets(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_UI_a033_ApTrialExpired(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_UI_a034_WakeupProblem(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)
#define CANUTIL_GET_VALUE_UI_a035_AudioWatchdogKernelError(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)
#define CANUTIL_GET_VALUE_UI_a036_AudioWatchdogHfpError(d) ((*( (uint64_t *) d ) & 0x20000000) >> 29)
#define CANUTIL_GET_VALUE_UI_a037_AudioWatchdogXrunStormEr(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_UI_a038_AudioWatchdogA2bI2cLocku(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_UI_a039_AudioA2bNeedRediscovery(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_UI_a040_HomelinkTransmit(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_UI_a041_AudioDmesgXrun(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_UI_a042_AudioDmesgRtThrottling(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_UI_a043_InvalidMapDataOverride(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_UI_a044_AudioDmesgDspException(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_UI_a045_ECallNeedsService(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_UI_a046_BackupCameraStreamError(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_UI_a047_CellRoamingDisallowed(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_UI_a048_AudioPremiumAmpCheckFail(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_UI_a049_BrakeShiftRequired(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_UI_a050_BackupCameraIPUTimeout(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_UI_a051_BackupCameraFrameTimeout(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_UI_a052_KernelPanicReported(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_UI_a053_QtCarExitError(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_UI_a054_AudioBoostPowerBad(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_UI_a055_ManualECallDisabled(d) ((*( (uint64_t *) d ) & 0x400) >> 10)
#define CANUTIL_GET_VALUE_UI_a056_ManualECallButtonDisconn(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_UI_a057_CellAntennaDisconnected(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_UI_a058_GPSAntennaDisconnected(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_UI_a059_ECallSpeakerDisconnected(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_GET_VALUE_UI_a060_ECallMicDisconnected(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_GET_VALUE_UI_a061_SIMTestFailed(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_UI_a062_ENSTestFailed(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_UI_a063_CellularTestFailed(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_UI_a064_ModemFirmwareTestFailed(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID142VCLEFT_liftgateStatus 0x142

#define CANUTIL_GET_VALUE_VCLEFT_liftgateStatusIndex(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  LIFTGATE_STATUS_INDEX_0 = 0,
  LIFTGATE_STATUS_INDEX_1 = 1,
  LIFTGATE_STATUS_INDEX_INVALID = 2
 } canutil_VCLEFT_liftgateStatusIndex_vals;

#define CANUTIL_GET_VALUE_VCLEFT_liftgateState(d) ((*( (uint64_t *) d ) & 0x1e) >> 1)

typedef enum { 
  PLG_STATE_INIT = 0,
  PLG_STATE_OFF = 1,
  PLG_STATE_BACKOFF = 2,
  PLG_STATE_OPENING = 3,
  PLG_STATE_CLOSING = 4,
  PLG_STATE_CLOSED = 5,
  PLG_STATE_LATCH_OPENING = 6,
  PLG_STATE_LATCH_CLOSING = 7,
  PLG_STATE_NOT_INSTALLED = 8,
  PLG_STATE_UNKNOWN = 9,
  PLG_STATE_LATCH_EXIT = 10,
  PLG_STATE_END_OF_TRAVEL = 11,
  PLG_STATE_LATCH_ENTRY = 12
 } canutil_VCLEFT_liftgateState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_liftgateStrutDutyCycle(d) ((*( (uint64_t *) d ) & 0x1fe0) >> 5)
#define CANUTIL_GET_VALUE_VCLEFT_liftgateRequestSource(d) ((*( (uint64_t *) d ) & 0xe00000000000000) >> 57)

typedef enum { 
  PLG_REQUEST_SOURCE_NONE = 0,
  PLG_REQUEST_SOURCE_MCU_SWITCH = 1,
  PLG_REQUEST_SOURCE_EXTERIOR = 2,
  PLG_REQUEST_SOURCE_SHUTFACE = 3,
  PLG_REQUEST_SOURCE_KEY_TRUNK_BUTTON = 4,
  PLG_REQUEST_SOURCE_CLOSE_ALL = 5,
  PLG_REQUEST_SOURCE_MCU_CLOSE = 6,
  PLG_REQUEST_SOURCE_UDS = 7
 } canutil_VCLEFT_liftgateRequestSource_vals;

#define CANUTIL_GET_VALUE_VCLEFT_liftgateStoppingCondition(d) ((*( (uint64_t *) d ) & 0x3c0000000000000) >> 54)

typedef enum { 
  PLG_STOPPING_CONDITION_NONE = 0,
  PLG_STOPPING_CONDITION_PINCH = 1,
  PLG_STOPPING_CONDITION_OBSTACLE_STALL = 2,
  PLG_STOPPING_CONDITION_LOW_12V = 3,
  PLG_STOPPING_CONDITION_STATE_TIMEOUT = 4,
  PLG_STOPPING_CONDITION_VEHICLE_AT_SPEED = 5,
  PLG_STOPPING_CONDITION_OBSTACLE_CURRENT = 6,
  PLG_STOPPING_CONDITION_OBSTACLE_TRAJ_POS = 7,
  PLG_STOPPING_CONDITION_OBSTACLE_TRAJ_VEL = 8,
  PLG_STOPPING_CONDITION_UNCALIBRATED = 9,
  PLG_STOPPING_CONDITION_LATCH_FAULT = 10,
  PLG_STOPPING_CONDITION_COUNT = 11
 } canutil_VCLEFT_liftgateStoppingCondition_vals;

#define CANUTIL_GET_VALUE_VCLEFT_liftgateStrutCurrent(d) ((*( (uint64_t *) d ) & 0x7fe0000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCLEFT_liftgateMvmntNotAllowedCo(d) ((*( (uint64_t *) d ) & 0x1c000000000000) >> 50)

typedef enum { 
  PLG_MVMT_NOT_ALLOWED_NONE = 0,
  PLG_MVMT_NOT_ALLOWED_LOW_12V = 1,
  PLG_MVMT_NOT_ALLOWED_VEHICLE_AT_SPEED = 2,
  PLG_MVMT_NOT_ALLOWED_UNCALIBRATED = 3,
  PLG_MVMT_NOT_ALLOWED_EXTERIOR_PRESS_AT_MAX_OPEN = 4,
  PLG_MVMT_NOT_ALLOWED_LOCKED = 5
 } canutil_VCLEFT_liftgateMvmntNotAllowedCo_vals;

#define CANUTIL_GET_VALUE_VCLEFT_liftgatePositionCalibrate(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)
#define CANUTIL_GET_VALUE_VCLEFT_liftgateUIChimeRequest(d) ((*( (uint64_t *) d ) & 0x1c00000000000) >> 46)

typedef enum { 
  LIFTGATE_CHIME_REQUEST_NONE = 0,
  LIFTGATE_CHIME_REQUEST_ONE_SHORT = 1,
  LIFTGATE_CHIME_REQUEST_TWO_SHORT = 2,
  LIFTGATE_CHIME_REQUEST_THREE_SHORT = 3,
  LIFTGATE_CHIME_REQUEST_ONE_LONG = 4
 } canutil_VCLEFT_liftgateUIChimeRequest_vals;

#define CANUTIL_GET_VALUE_VCLEFT_liftgatePhysicalChimeRequ(d) ((*( (uint64_t *) d ) & 0x380000000000) >> 43)

typedef enum { 
  LIFTGATE_CHIME_REQUEST_NONE = 0,
  LIFTGATE_CHIME_REQUEST_ONE_SHORT = 1,
  LIFTGATE_CHIME_REQUEST_TWO_SHORT = 2,
  LIFTGATE_CHIME_REQUEST_THREE_SHORT = 3,
  LIFTGATE_CHIME_REQUEST_ONE_LONG = 4
 } canutil_VCLEFT_liftgatePhysicalChimeRequ_vals;

#define CANUTIL_GET_VALUE_VCLEFT_liftgatePosition(d) ((*( (uint64_t *) d ) & 0x3f80000000000) >> 43)
#define CANUTIL_GET_VALUE_VCLEFT_liftgateSpeed(d) ((*( (uint64_t *) d ) & 0x3ff000000000) >> 36)
#define CANUTIL_GET_VALUE_VCLEFT_liftgateLatchRequest(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  LATCH_REQUEST_NONE = 0,
  LATCH_REQUEST_CINCH = 1,
  LATCH_REQUEST_RELEASE = 2,
  LATCH_REQUEST_FORCE_RELEASE = 3,
  LATCH_REQUEST_RESET = 4
 } canutil_VCLEFT_liftgateLatchRequest_vals;

#define CANUTIL_ID145ESP_status 0x145

#define CANUTIL_GET_VALUE_ESP_statusChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_ESP_statusCounter(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_ESP_espModeActive(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  ESP_MODE_00_NORMAL = 0,
  ESP_MODE_01 = 1,
  ESP_MODE_02 = 2,
  ESP_MODE_03 = 3
 } canutil_ESP_espModeActive_vals;

#define CANUTIL_GET_VALUE_ESP_stabilityControlSts2(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  INIT = 0,
  ON = 1,
  ENGAGED = 2,
  FAULTED = 3
 } canutil_ESP_stabilityControlSts2_vals;

#define CANUTIL_GET_VALUE_ESP_ebdFaultLamp(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)

typedef enum { 
  EBD_FAULT_LAMP_OFF = 0,
  EBD_FAULT_LAMP_ON = 1
 } canutil_ESP_ebdFaultLamp_vals;

#define CANUTIL_GET_VALUE_ESP_absFaultLamp(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)

typedef enum { 
  ABS_FAULT_LAMP_OFF = 0,
  ABS_FAULT_LAMP_ON = 1
 } canutil_ESP_absFaultLamp_vals;

#define CANUTIL_GET_VALUE_ESP_espFaultLamp(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)

typedef enum { 
  ESP_FAULT_LAMP_OFF = 0,
  ESP_FAULT_LAMP_ON = 1
 } canutil_ESP_espFaultLamp_vals;

#define CANUTIL_GET_VALUE_ESP_hydraulicBoostEnabled(d) ((*( (uint64_t *) d ) & 0x200000000000) >> 45)
#define CANUTIL_GET_VALUE_ESP_espLampFlash(d) ((*( (uint64_t *) d ) & 0x100000000000) >> 44)

typedef enum { 
  ESP_LAMP_OFF = 0,
  ESP_LAMP_FLASH = 1
 } canutil_ESP_espLampFlash_vals;

#define CANUTIL_GET_VALUE_ESP_brakeLamp(d) ((*( (uint64_t *) d ) & 0x80000000000) >> 43)

typedef enum { 
  LAMP_OFF = 0,
  LAMP_ON = 1
 } canutil_ESP_brakeLamp_vals;

#define CANUTIL_GET_VALUE_ESP_absBrakeEvent2(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  ABS_EVENT_NOT_ACTIVE = 0,
  ABS_EVENT_ACTIVE_FRONT_REAR = 1,
  ABS_EVENT_ACTIVE_FRONT = 2,
  ABS_EVENT_ACTIVE_REAR = 3
 } canutil_ESP_absBrakeEvent2_vals;

#define CANUTIL_GET_VALUE_ESP_longitudinalAccelQF(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)

typedef enum { 
  UNDEFINABLE_ACCURACY = 0,
  IN_SPEC = 1
 } canutil_ESP_longitudinalAccelQF_vals;

#define CANUTIL_GET_VALUE_ESP_lateralAccelQF(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)

typedef enum { 
  UNDEFINABLE_ACCURACY = 0,
  IN_SPEC = 1
 } canutil_ESP_lateralAccelQF_vals;

#define CANUTIL_GET_VALUE_ESP_yawRateQF(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)

typedef enum { 
  UNDEFINABLE_ACCURACY = 0,
  IN_SPEC = 1
 } canutil_ESP_yawRateQF_vals;

#define CANUTIL_GET_VALUE_ESP_steeringAngleQF(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)

typedef enum { 
  UNDEFINABLE_ACCURACY = 0,
  IN_SPEC = 1
 } canutil_ESP_steeringAngleQF_vals;

#define CANUTIL_GET_VALUE_ESP_brakeDiscWipingActive(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)

typedef enum { 
  BDW_INACTIVE = 0,
  BDW_ACTIVE = 1
 } canutil_ESP_brakeDiscWipingActive_vals;

#define CANUTIL_GET_VALUE_ESP_driverBrakeApply(d) ((*( (uint64_t *) d ) & 0x1800000000) >> 35)

typedef enum { 
  NotInit_orOff = 0,
  Not_Applied = 1,
  Driver_applying_brakes = 2,
  Faulty_SNA = 3
 } canutil_ESP_driverBrakeApply_vals;

#define CANUTIL_GET_VALUE_ESP_brakeApply(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)

typedef enum { 
  BLS_INACTIVE = 0,
  BLS_ACTIVE = 1
 } canutil_ESP_brakeApply_vals;

#define CANUTIL_GET_VALUE_ESP_cdpStatus(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  CDP_IS_NOT_AVAILABLE = 0,
  CDP_IS_AVAILABLE = 1,
  ACTUATING_EPB_CDP = 2,
  CDP_COMMAND_INVALID = 3
 } canutil_ESP_cdpStatus_vals;

#define CANUTIL_GET_VALUE_ESP_ptcTargetState(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  FAULT = 0,
  BACKUP = 1,
  ON = 2,
  SNA = 3
 } canutil_ESP_ptcTargetState_vals;

#define CANUTIL_GET_VALUE_ESP_btcTargetState(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  OFF = 0,
  BACKUP = 1,
  ON = 2,
  SNA = 3
 } canutil_ESP_btcTargetState_vals;

#define CANUTIL_GET_VALUE_ESP_ebrStandstillSkid(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)

typedef enum { 
  NO_STANDSTILL_SKID = 0,
  STANDSTILL_SKID_DETECTED = 1
 } canutil_ESP_ebrStandstillSkid_vals;

#define CANUTIL_GET_VALUE_ESP_ebrStatus(d) ((*( (uint64_t *) d ) & 0x18000) >> 15)

typedef enum { 
  EBR_IS_NOT_AVAILABLE = 0,
  EBR_IS_AVAILABLE = 1,
  ACTUATING_DI_EBR = 2,
  EBR_COMMAND_INVALID = 3
 } canutil_ESP_ebrStatus_vals;

#define CANUTIL_GET_VALUE_ESP_brakeTorqueTarget(d) ((*( (uint64_t *) d ) & 0x3ffe000) >> 13)

typedef enum { 
  SNA = 8191
 } canutil_ESP_brakeTorqueTarget_vals;

#define CANUTIL_ID1D6DI_limits 0x1d6

#define CANUTIL_GET_VALUE_DI_limitPCBTemp(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_DI_limitInverterTemp(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_DI_limitStatorTemp(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_DI_limitPoleTemp(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_DI_limitLimpMode(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_DI_limitDeltaFluidTemp(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_DI_limitDischargePower(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_DI_limitRegenPower(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_DI_limitMotorCurrent(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_DI_limitMotorVoltage(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)
#define CANUTIL_GET_VALUE_DI_limitDriveTorque(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)
#define CANUTIL_GET_VALUE_DI_limitRegenTorque(d) ((*( (uint64_t *) d ) & 0x20000000) >> 29)
#define CANUTIL_GET_VALUE_DI_limitTCDrive(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_DI_limitTCRegen(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_DI_limitShift(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_DI_limitBaseSpeed(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_DI_limitIBat(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_DI_limitDcCapTemp(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_DI_limitVBatLow(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_DI_limitVBatHigh(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_DI_limitMotorSpeed(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_DI_limitVehicleSpeed(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_DI_limitDiff(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_DI_limitGracefulPowerOff(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_DI_limitIGBTJunctTemp(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_DI_limitShockTorque(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_DI_limitOilPumpFluidTemp(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_DI_limitStatorFrequency(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_DI_limitClutch(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_DI_limitObstacleDetection(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_DI_limitphaseOutBusbarTemp(d) ((*( (uint64_t *) d ) & 0x400) >> 10)
#define CANUTIL_GET_VALUE_DI_limitphaseOutBusBarWeldTemp(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_DI_limitphaseOutLugTemp(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_DI_limitdcLinkCapTemp(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_DI_limitnegDcBusbarTemp(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_GET_VALUE_DI_limitposDcBusbarTemp(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_GET_VALUE_DI_limitRotorTemp(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_DI_limithvDcCableTemp(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_ID20AHVP_contactorState 0x20a

#define CANUTIL_GET_VALUE_HVP_packContNegativeState(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  CONTACTOR_STATE_SNA = 0,
  CONTACTOR_STATE_OPEN = 1,
  CONTACTOR_STATE_PRECHARGE = 2,
  CONTACTOR_STATE_BLOCKED = 3,
  CONTACTOR_STATE_PULLED_IN = 4,
  CONTACTOR_STATE_OPENING = 5,
  CONTACTOR_STATE_ECONOMIZED = 6,
  CONTACTOR_STATE_WELDED = 7
 } canutil_HVP_packContNegativeState_vals;

#define CANUTIL_GET_VALUE_HVP_packContPositiveState(d) ((*( (uint64_t *) d ) & 0xe00000000000) >> 45)

typedef enum { 
  CONTACTOR_STATE_SNA = 0,
  CONTACTOR_STATE_OPEN = 1,
  CONTACTOR_STATE_PRECHARGE = 2,
  CONTACTOR_STATE_BLOCKED = 3,
  CONTACTOR_STATE_PULLED_IN = 4,
  CONTACTOR_STATE_OPENING = 5,
  CONTACTOR_STATE_ECONOMIZED = 6,
  CONTACTOR_STATE_WELDED = 7
 } canutil_HVP_packContPositiveState_vals;

#define CANUTIL_GET_VALUE_HVP_fcContPositiveAuxOpen(d) ((*( (uint64_t *) d ) & 0x40000000000) >> 42)
#define CANUTIL_GET_VALUE_HVP_fcContNegativeAuxOpen(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)
#define CANUTIL_GET_VALUE_HVP_packContactorSetState(d) ((*( (uint64_t *) d ) & 0xf0000000000) >> 40)

typedef enum { 
  CONTACTOR_SET_STATE_SNA = 0,
  CONTACTOR_SET_STATE_OPEN = 1,
  CONTACTOR_SET_STATE_CLOSING = 2,
  CONTACTOR_SET_STATE_BLOCKED = 3,
  CONTACTOR_SET_STATE_OPENING = 4,
  CONTACTOR_SET_STATE_CLOSED = 5,
  CONTACTOR_SET_STATE_PARTIAL_WELD = 6,
  CONTACTOR_SET_STATE_WELDED = 7,
  CONTACTOR_SET_STATE_POSITIVE_CLOSED = 8,
  CONTACTOR_SET_STATE_NEGATIVE_CLOSED = 9
 } canutil_HVP_packContactorSetState_vals;

#define CANUTIL_GET_VALUE_HVP_fcContNegativeState(d) ((*( (uint64_t *) d ) & 0x7000000000) >> 36)

typedef enum { 
  CONTACTOR_STATE_SNA = 0,
  CONTACTOR_STATE_OPEN = 1,
  CONTACTOR_STATE_PRECHARGE = 2,
  CONTACTOR_STATE_BLOCKED = 3,
  CONTACTOR_STATE_PULLED_IN = 4,
  CONTACTOR_STATE_OPENING = 5,
  CONTACTOR_STATE_ECONOMIZED = 6,
  CONTACTOR_STATE_WELDED = 7
 } canutil_HVP_fcContNegativeState_vals;

#define CANUTIL_GET_VALUE_HVP_fcContPositiveState(d) ((*( (uint64_t *) d ) & 0x700000000) >> 32)

typedef enum { 
  CONTACTOR_STATE_SNA = 0,
  CONTACTOR_STATE_OPEN = 1,
  CONTACTOR_STATE_PRECHARGE = 2,
  CONTACTOR_STATE_BLOCKED = 3,
  CONTACTOR_STATE_PULLED_IN = 4,
  CONTACTOR_STATE_OPENING = 5,
  CONTACTOR_STATE_ECONOMIZED = 6,
  CONTACTOR_STATE_WELDED = 7
 } canutil_HVP_fcContPositiveState_vals;

#define CANUTIL_GET_VALUE_HVP_fcContactorSetState(d) ((*( (uint64_t *) d ) & 0x1e0000000) >> 29)

typedef enum { 
  CONTACTOR_SET_STATE_SNA = 0,
  CONTACTOR_SET_STATE_OPEN = 1,
  CONTACTOR_SET_STATE_CLOSING = 2,
  CONTACTOR_SET_STATE_BLOCKED = 3,
  CONTACTOR_SET_STATE_OPENING = 4,
  CONTACTOR_SET_STATE_CLOSED = 5,
  CONTACTOR_SET_STATE_PARTIAL_WELD = 6,
  CONTACTOR_SET_STATE_WELDED = 7,
  CONTACTOR_SET_STATE_POSITIVE_CLOSED = 8,
  CONTACTOR_SET_STATE_NEGATIVE_CLOSED = 9
 } canutil_HVP_fcContactorSetState_vals;

#define CANUTIL_GET_VALUE_HVP_fcCtrsRequestStatus(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  REQUEST_NOT_ACTIVE = 0,
  REQUEST_ACTIVE = 1,
  REQUEST_COMPLETED = 2
 } canutil_HVP_fcCtrsRequestStatus_vals;

#define CANUTIL_GET_VALUE_HVP_fcCtrsResetRequestRequired(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_HVP_fcCtrsOpenNowRequested(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_HVP_fcCtrsOpenRequested(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_HVP_fcCtrsClosingAllowed(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_HVP_packCtrsRequestStatus(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  REQUEST_NOT_ACTIVE = 0,
  REQUEST_ACTIVE = 1,
  REQUEST_COMPLETED = 2
 } canutil_HVP_packCtrsRequestStatus_vals;

#define CANUTIL_GET_VALUE_HVP_packCtrsResetRequestRequired(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_HVP_packCtrsOpenNowRequested(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_HVP_packCtrsOpenRequested(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_HVP_packCtrsClosingAllowed(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_HVP_dcLinkAllowedToEnergize(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_HVP_pyroTestInProgress(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_HVP_hvilStatus(d) ((*( (uint64_t *) d ) & 0xf00) >> 8)

typedef enum { 
  UNKNOWN = 0,
  STATUS_OK = 1,
  CURRENT_SOURCE_FAULT = 2,
  INTERNAL_OPEN_FAULT = 3,
  VEHICLE_OPEN_FAULT = 4,
  PENTHOUSE_LID_OPEN_FAULT = 5,
  UNKNOWN_LOCATION_OPEN_FAULT = 6,
  VEHICLE_NODE_FAULT = 7,
  NO_12V_SUPPLY = 8,
  VEHICLE_OR_PENTHOUSE_LID_OPEN_FAULT = 9
 } canutil_HVP_hvilStatus_vals;

#define CANUTIL_GET_VALUE_HVP_fcLinkAllowedToEnergize(d) ((*( (uint64_t *) d ) & 0x30) >> 4)

typedef enum { 
  FC_LINK_ENERGY_NONE = 0,
  FC_LINK_ENERGY_AC = 1,
  FC_LINK_ENERGY_DC = 2
 } canutil_HVP_fcLinkAllowedToEnergize_vals;

#define CANUTIL_ID20EPARK_sdiFront 0x20e

#define CANUTIL_GET_VALUE_PARK_sdiSensor1RawDistData(d) ((*( (uint64_t *) d ) & 0x3fe00) >> 9)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor1RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor2RawDistData(d) ((*( (uint64_t *) d ) & 0xff80000000000000) >> 55)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor2RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor3RawDistData(d) ((*( (uint64_t *) d ) & 0x7fc00000000000) >> 46)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor3RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor4RawDistData(d) ((*( (uint64_t *) d ) & 0x3fe000000000) >> 37)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor4RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor5RawDistData(d) ((*( (uint64_t *) d ) & 0x1ff0000000) >> 28)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor5RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor6RawDistData(d) ((*( (uint64_t *) d ) & 0xff80000) >> 19)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor6RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiFrontCounter(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)
#define CANUTIL_GET_VALUE_PARK_sdiFrontChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID219VCSEC_TPMSData 0x219

#define CANUTIL_GET_VALUE_VCSEC_TPMSDataIndex(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  TPMS_DATA_SENSOR_0 = 0,
  TPMS_DATA_SENSOR_1 = 1,
  TPMS_DATA_SENSOR_2 = 2,
  TPMS_DATA_SENSOR_3 = 3
 } canutil_VCSEC_TPMSDataIndex_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSPressure0(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSPressure0_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSPressure1(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSPressure1_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSPressure2(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSPressure2_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSPressure3(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSPressure3_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSTemperature0(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSTemperature0_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSTemperature1(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSTemperature1_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSTemperature2(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSTemperature2_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSTemperature3(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSTemperature3_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSBatVoltage0(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSBatVoltage0_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSBatVoltage1(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSBatVoltage1_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSBatVoltage2(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSBatVoltage2_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSBatVoltage3(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 255
 } canutil_VCSEC_TPMSBatVoltage3_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSLocation0(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  LOCATION_FL = 0,
  LOCATION_FR = 1,
  LOCATION_RL = 2,
  LOCATION_RR = 3,
  LOCATION_UNKNOWN = 4
 } canutil_VCSEC_TPMSLocation0_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSLocation1(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  LOCATION_FL = 0,
  LOCATION_FR = 1,
  LOCATION_RL = 2,
  LOCATION_RR = 3,
  LOCATION_UNKNOWN = 4
 } canutil_VCSEC_TPMSLocation1_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSLocation2(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  LOCATION_FL = 0,
  LOCATION_FR = 1,
  LOCATION_RL = 2,
  LOCATION_RR = 3,
  LOCATION_UNKNOWN = 4
 } canutil_VCSEC_TPMSLocation2_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSLocation3(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  LOCATION_FL = 0,
  LOCATION_FR = 1,
  LOCATION_RL = 2,
  LOCATION_RR = 3,
  LOCATION_UNKNOWN = 4
 } canutil_VCSEC_TPMSLocation3_vals;

#define CANUTIL_ID204PCS_chgStatus 0x204

#define CANUTIL_GET_VALUE_PCS_chgMainState(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)

typedef enum { 
  PCS_CHG_STATE_INIT = 0,
  PCS_CHG_STATE_IDLE = 1,
  PCS_CHG_STATE_STARTUP = 2,
  PCS_CHG_STATE_WAIT_FOR_LINE_VOLTAGE = 3,
  PCS_CHG_STATE_QUALIFY_LINE_CONFIG = 4,
  PCS_CHG_STATE_SYSTEM_CONFIG = 5,
  PCS_CHG_STATE_ENABLE = 6,
  PCS_CHG_STATE_SHUTDOWN = 7,
  PCS_CHG_STATE_FAULTED = 8,
  PCS_CHG_STATE_CLEAR_FAULTS = 9
 } canutil_PCS_chgMainState_vals;

#define CANUTIL_GET_VALUE_PCS_hvChargeStatus(d) ((*( (uint64_t *) d ) & 0x3000000000000000) >> 60)

typedef enum { 
  PCS_CHARGE_STANDBY = 0,
  PCS_CHARGE_BLOCKED = 1,
  PCS_CHARGE_ENABLED = 2,
  PCS_CHARGE_FAULTED = 3
 } canutil_PCS_hvChargeStatus_vals;

#define CANUTIL_GET_VALUE_PCS_gridConfig(d) ((*( (uint64_t *) d ) & 0xc00000000000000) >> 58)

typedef enum { 
  GRID_CONFIG_SNA = 0,
  GRID_CONFIG_SINGLE_PHASE = 1,
  GRID_CONFIG_THREE_PHASE = 2,
  GRID_CONFIG_THREE_PHASE_DELTA = 3
 } canutil_PCS_gridConfig_vals;

#define CANUTIL_GET_VALUE_PCS_chgPHAEnable(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_PCS_chgPHBEnable(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_PCS_chgPHCEnable(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_PCS_chgInstantAcPowerAvailable(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_PCS_chgMaxAcPowerAvailable(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_PCS_chgPHALineCurrentRequest(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_PCS_chgPHBLineCurrentRequest(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_PCS_chgPHCLineCurrentRequest(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_PCS_chgPwmEnableLine(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_PCS_chargeShutdownRequest(d) ((*( (uint64_t *) d ) & 0x180) >> 7)

typedef enum { 
  NO_SHUTDOWN_REQUESTED = 0,
  GRACEFUL_SHUTDOWN_REQUESTED = 1,
  EMERGENCY_SHUTDOWN_REQUESTED = 2
 } canutil_PCS_chargeShutdownRequest_vals;

#define CANUTIL_GET_VALUE_PCS_hwVariantType(d) ((*( (uint64_t *) d ) & 0x60) >> 5)

typedef enum { 
  PCS_48A_SINGLE_PHASE_VARIANT = 0,
  PCS_32A_SINGLE_PHASE_VARIANT = 1,
  PCS_THREE_PHASES_VARIANT = 2,
  PCS_HW_VARIANT_TYPE_SNA = 3
 } canutil_PCS_hwVariantType_vals;

#define CANUTIL_ID22AHVP_pcsControl 0x22a

#define CANUTIL_GET_VALUE_HVP_dcLinkVoltageRequest(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_HVP_pcsControlRequest(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  SHUTDOWN = 0,
  SUPPORT = 1,
  PRECHARGE = 2,
  DISCHARGE = 3
 } canutil_HVP_pcsControlRequest_vals;

#define CANUTIL_GET_VALUE_HVP_pcsChargeHwEnabled(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_HVP_pcsDcdcHwEnabled(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_HVP_dcLinkVoltageFiltered(d) ((*( (uint64_t *) d ) & 0x7ff000) >> 12)

typedef enum { 
  SNA = 550
 } canutil_HVP_dcLinkVoltageFiltered_vals;

#define CANUTIL_ID232BMS_contactorRequest 0x232

#define CANUTIL_GET_VALUE_BMS_fcContactorRequest(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  SET_REQUEST_SNA = 0,
  SET_REQUEST_CLOSE = 1,
  SET_REQUEST_OPEN = 2,
  SET_REQUEST_OPEN_IMMEDIATELY = 3,
  SET_REQUEST_CLOSE_NEGATIVE_ONLY = 4,
  SET_REQUEST_CLOSE_POSITIVE_ONLY = 5
 } canutil_BMS_fcContactorRequest_vals;

#define CANUTIL_GET_VALUE_BMS_packContactorRequest(d) ((*( (uint64_t *) d ) & 0xe000000000000000) >> 61)

typedef enum { 
  SET_REQUEST_SNA = 0,
  SET_REQUEST_CLOSE = 1,
  SET_REQUEST_OPEN = 2,
  SET_REQUEST_OPEN_IMMEDIATELY = 3,
  SET_REQUEST_CLOSE_NEGATIVE_ONLY = 4,
  SET_REQUEST_CLOSE_POSITIVE_ONLY = 5
 } canutil_BMS_packContactorRequest_vals;

#define CANUTIL_GET_VALUE_BMS_gpoHasCompleted(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_BMS_ensShouldBeActiveForDrive(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_BMS_pcsPwmDisable(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_BMS_internalHvilSenseV(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)

typedef enum { 
  SNA = 65535
 } canutil_BMS_internalHvilSenseV_vals;

#define CANUTIL_GET_VALUE_BMS_fcLinkOkToEnergizeRequest(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  FC_LINK_ENERGY_NONE = 0,
  FC_LINK_ENERGY_AC = 1,
  FC_LINK_ENERGY_DC = 2
 } canutil_BMS_fcLinkOkToEnergizeRequest_vals;

#define CANUTIL_ID273UI_vehicleControl 0x273

#define CANUTIL_GET_VALUE_UI_accessoryPowerRequest(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UI_frontFogSwitch(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_UI_summonActive(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_UI_frunkRequest(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_UI_wiperMode(d) ((*( (uint64_t *) d ) & 0xc00000000000000) >> 58)

typedef enum { 
  WIPER_MODE_SNA = 0,
  WIPER_MODE_SERVICE = 1,
  WIPER_MODE_NORMAL = 2,
  WIPER_MODE_PARK = 3
 } canutil_UI_wiperMode_vals;

#define CANUTIL_GET_VALUE_UI_steeringBacklightEnabled(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)

typedef enum { 
  STEERING_BACKLIGHT_DISABLED = 0,
  STEERING_BACKLIGHT_ENABLED = 1
 } canutil_UI_steeringBacklightEnabled_vals;

#define CANUTIL_GET_VALUE_UI_steeringButtonMode(d) ((*( (uint64_t *) d ) & 0x380000000000000) >> 55)

typedef enum { 
  STEERING_BUTTON_MODE_OFF = 0,
  STEERING_BUTTON_MODE_STEERING_COLUMN_ADJ = 1,
  STEERING_BUTTON_MODE_MIRROR_LEFT = 2,
  STEERING_BUTTON_MODE_MIRROR_RIGHT = 3,
  STEERING_BUTTON_MODE_HEADLIGHT_LEFT = 4,
  STEERING_BUTTON_MODE_HEADLIGHT_RIGHT = 5
 } canutil_UI_steeringButtonMode_vals;

#define CANUTIL_GET_VALUE_UI_walkUpUnlock(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_UI_walkAwayLock(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_UI_unlockOnPark(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)
#define CANUTIL_GET_VALUE_UI_globalUnlockOn(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_UI_childDoorLockOn(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)
#define CANUTIL_GET_VALUE_UI_lockRequest(d) ((*( (uint64_t *) d ) & 0x3800000000000) >> 47)

typedef enum { 
  UI_LOCK_REQUEST_IDLE = 0,
  UI_LOCK_REQUEST_LOCK = 1,
  UI_LOCK_REQUEST_UNLOCK = 2,
  UI_LOCK_REQUEST_REMOTE_UNLOCK = 3,
  UI_LOCK_REQUEST_REMOTE_LOCK = 4,
  UI_LOCK_REQUEST_SNA = 7
 } canutil_UI_lockRequest_vals;

#define CANUTIL_GET_VALUE_UI_alarmEnabled(d) ((*( (uint64_t *) d ) & 0x100000000000) >> 44)
#define CANUTIL_GET_VALUE_UI_intrusionSensorOn(d) ((*( (uint64_t *) d ) & 0x80000000000) >> 43)
#define CANUTIL_GET_VALUE_UI_stop12vSupport(d) ((*( (uint64_t *) d ) & 0x40000000000) >> 42)
#define CANUTIL_GET_VALUE_UI_rearFogSwitch(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)
#define CANUTIL_GET_VALUE_UI_mirrorFoldRequest(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  MIRROR_FOLD_REQUEST_IDLE = 0,
  MIRROR_FOLD_REQUEST_RETRACT = 1,
  MIRROR_FOLD_REQUEST_PRESENT = 2,
  MIRROR_FOLD_REQUEST_SNA = 3
 } canutil_UI_mirrorFoldRequest_vals;

#define CANUTIL_GET_VALUE_UI_mirrorHeatRequest(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_UI_remoteStartRequest(d) ((*( (uint64_t *) d ) & 0xe000000000) >> 37)

typedef enum { 
  UI_REMOTE_START_REQUEST_IDLE = 0,
  UI_REMOTE_START_REQUEST_START = 1,
  UI_REMOTE_START_REQUEST_SNA = 4
 } canutil_UI_remoteStartRequest_vals;

#define CANUTIL_GET_VALUE_UI_seeYouHomeLightingOn(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_UI_powerOff(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_UI_displayBrightnessLevel(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_UI_displayBrightnessLevel_vals;

#define CANUTIL_GET_VALUE_UI_ambientLightingEnabled(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_UI_autoHighBeamEnabled(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_UI_frontLeftSeatHeatReq(d) ((*( (uint64_t *) d ) & 0xc00000) >> 22)

typedef enum { 
  HEATER_REQUEST_OFF = 0,
  HEATER_REQUEST_LEVEL1 = 1,
  HEATER_REQUEST_LEVEL2 = 2,
  HEATER_REQUEST_LEVEL3 = 3
 } canutil_UI_frontLeftSeatHeatReq_vals;

#define CANUTIL_GET_VALUE_UI_frontRightSeatHeatReq(d) ((*( (uint64_t *) d ) & 0x300000) >> 20)

typedef enum { 
  HEATER_REQUEST_OFF = 0,
  HEATER_REQUEST_LEVEL1 = 1,
  HEATER_REQUEST_LEVEL2 = 2,
  HEATER_REQUEST_LEVEL3 = 3
 } canutil_UI_frontRightSeatHeatReq_vals;

#define CANUTIL_GET_VALUE_UI_rearLeftSeatHeatReq(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  HEATER_REQUEST_OFF = 0,
  HEATER_REQUEST_LEVEL1 = 1,
  HEATER_REQUEST_LEVEL2 = 2,
  HEATER_REQUEST_LEVEL3 = 3
 } canutil_UI_rearLeftSeatHeatReq_vals;

#define CANUTIL_GET_VALUE_UI_rearCenterSeatHeatReq(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  HEATER_REQUEST_OFF = 0,
  HEATER_REQUEST_LEVEL1 = 1,
  HEATER_REQUEST_LEVEL2 = 2,
  HEATER_REQUEST_LEVEL3 = 3
 } canutil_UI_rearCenterSeatHeatReq_vals;

#define CANUTIL_GET_VALUE_UI_rearRightSeatHeatReq(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  HEATER_REQUEST_OFF = 0,
  HEATER_REQUEST_LEVEL1 = 1,
  HEATER_REQUEST_LEVEL2 = 2,
  HEATER_REQUEST_LEVEL3 = 3
 } canutil_UI_rearRightSeatHeatReq_vals;

#define CANUTIL_GET_VALUE_UI_autoFoldMirrorsOn(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_UI_mirrorDipOnReverse(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_UI_remoteClosureRequest(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  UI_REMOTE_CLOSURE_REQUEST_IDLE = 0,
  UI_REMOTE_CLOSURE_REQUEST_REAR_TRUNK_MOVE = 1,
  UI_REMOTE_CLOSURE_REQUEST_FRONT_TRUNK_MOVE = 2,
  UI_REMOTE_CLOSURE_REQUEST_SNA = 3
 } canutil_UI_remoteClosureRequest_vals;

#define CANUTIL_GET_VALUE_UI_wiperRequest(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  WIPER_REQUEST_SNA = 0,
  WIPER_REQUEST_OFF = 1,
  WIPER_REQUEST_AUTO = 2,
  WIPER_REQUEST_SLOW_INTERMITTENT = 3,
  WIPER_REQUEST_FAST_INTERMITTENT = 4,
  WIPER_REQUEST_SLOW_CONTINUOUS = 5,
  WIPER_REQUEST_FAST_CONTINUOUS = 6
 } canutil_UI_wiperRequest_vals;

#define CANUTIL_GET_VALUE_UI_domeLightSwitch(d) ((*( (uint64_t *) d ) & 0x60) >> 5)

typedef enum { 
  DOME_LIGHT_SWITCH_OFF = 0,
  DOME_LIGHT_SWITCH_ON = 1,
  DOME_LIGHT_SWITCH_AUTO = 2
 } canutil_UI_domeLightSwitch_vals;

#define CANUTIL_GET_VALUE_UI_honkHorn(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_UI_driveStateRequest(d) ((*( (uint64_t *) d ) & 0x4) >> 2)

typedef enum { 
  DRIVE_STATE_REQ_IDLE = 0,
  DRIVE_STATE_REQ_START = 1
 } canutil_UI_driveStateRequest_vals;

#define CANUTIL_GET_VALUE_UI_rearWindowLockout(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID27DCP_dcChargeLimits 0x27d

#define CANUTIL_GET_VALUE_CP_evseMaxDcCurrentLimit(d) ((*( (uint64_t *) d ) & 0x3ffe000) >> 13)
#define CANUTIL_GET_VALUE_CP_evseMinDcCurrentLimit(d) ((*( (uint64_t *) d ) & 0xfff8000000000000) >> 51)
#define CANUTIL_GET_VALUE_CP_evseMaxDcVoltageLimit(d) ((*( (uint64_t *) d ) & 0x7ffc000000000) >> 38)
#define CANUTIL_GET_VALUE_CP_evseMinDcVoltageLimit(d) ((*( (uint64_t *) d ) & 0x3ffe000000) >> 25)
#define CANUTIL_GET_VALUE_CP_evseInstantDcCurrentLimit(d) ((*( (uint64_t *) d ) & 0xfff000) >> 12)
#define CANUTIL_ID2BDCP_dcPowerLimits 0x2bd

#define CANUTIL_GET_VALUE_CP_evseInstantDcPowerLimit(d) ((*( (uint64_t *) d ) & 0x3ffe000) >> 13)
#define CANUTIL_GET_VALUE_CP_evseMaxDcPowerLimit(d) ((*( (uint64_t *) d ) & 0x1fff0000) >> 16)
#define CANUTIL_ID42AVCSEC_TPMSConnectionData 0x42a

#define CANUTIL_GET_VALUE_VCSEC_TPMSSensorState0(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  SENSOR_NOT_PAIRED = 0,
  SENSOR_WAIT_FOR_ADV = 1,
  SENSOR_WAIT_FOR_CONN = 2,
  SENSOR_CONNECTED = 3,
  SENSOR_DISCONNECTING = 4
 } canutil_VCSEC_TPMSSensorState0_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSRSSI0(d) ((*( (uint64_t *) d ) & 0x1fe0) >> 5)
#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeCurrent0(d) ((*( (uint64_t *) d ) & 0x60000000000000) >> 53)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeCurrent0_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeDesired0(d) ((*( (uint64_t *) d ) & 0x18000000000000) >> 51)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeDesired0_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSSensorState1(d) ((*( (uint64_t *) d ) & 0xe000000000000) >> 49)

typedef enum { 
  SENSOR_NOT_PAIRED = 0,
  SENSOR_WAIT_FOR_ADV = 1,
  SENSOR_WAIT_FOR_CONN = 2,
  SENSOR_CONNECTED = 3,
  SENSOR_DISCONNECTING = 4
 } canutil_VCSEC_TPMSSensorState1_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSRSSI1(d) ((*( (uint64_t *) d ) & 0x3fc00000000000) >> 46)
#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeCurrent1(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeCurrent1_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeDesired1(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeDesired1_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSSensorState2(d) ((*( (uint64_t *) d ) & 0x1c00000000) >> 34)

typedef enum { 
  SENSOR_NOT_PAIRED = 0,
  SENSOR_WAIT_FOR_ADV = 1,
  SENSOR_WAIT_FOR_CONN = 2,
  SENSOR_CONNECTED = 3,
  SENSOR_DISCONNECTING = 4
 } canutil_VCSEC_TPMSSensorState2_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSRSSI2(d) ((*( (uint64_t *) d ) & 0x7f80000000) >> 31)
#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeCurrent2(d) ((*( (uint64_t *) d ) & 0x1800000) >> 23)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeCurrent2_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeDesired2(d) ((*( (uint64_t *) d ) & 0x600000) >> 21)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeDesired2_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSSensorState3(d) ((*( (uint64_t *) d ) & 0x380000) >> 19)

typedef enum { 
  SENSOR_NOT_PAIRED = 0,
  SENSOR_WAIT_FOR_ADV = 1,
  SENSOR_WAIT_FOR_CONN = 2,
  SENSOR_CONNECTED = 3,
  SENSOR_DISCONNECTING = 4
 } canutil_VCSEC_TPMSSensorState3_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSRSSI3(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeCurrent3(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeCurrent3_vals;

#define CANUTIL_GET_VALUE_VCSEC_TPMSConnectionTypeDesired3(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  CONNECTIONTYPE_FAST = 0,
  CONNECTIONTYPE_SLOW = 1,
  CONNECTIONTYPE_UNKNOWN = 2
 } canutil_VCSEC_TPMSConnectionTypeDesired3_vals;

#define CANUTIL_ID22EPARK_sdiRear 0x22e

#define CANUTIL_GET_VALUE_PARK_sdiSensor7RawDistData(d) ((*( (uint64_t *) d ) & 0x3fe00) >> 9)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor7RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor8RawDistData(d) ((*( (uint64_t *) d ) & 0xff80000000000000) >> 55)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor8RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor9RawDistData(d) ((*( (uint64_t *) d ) & 0x7fc00000000000) >> 46)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor9RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor10RawDistData(d) ((*( (uint64_t *) d ) & 0x3fe000000000) >> 37)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor10RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor11RawDistData(d) ((*( (uint64_t *) d ) & 0x1ff0000000) >> 28)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor11RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiSensor12RawDistData(d) ((*( (uint64_t *) d ) & 0xff80000) >> 19)

typedef enum { 
  BLOCKED = 0,
  NEAR_DETECTION = 1,
  NO_OBJECT_DETECTED = 500,
  SNA = 511
 } canutil_PARK_sdiSensor12RawDistData_vals;

#define CANUTIL_GET_VALUE_PARK_sdiRearCounter(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)
#define CANUTIL_GET_VALUE_PARK_sdiRearChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID238UI_driverAssistMapData 0x238

#define CANUTIL_GET_VALUE_UI_mapSpeedLimitDependency(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  NONE = 0,
  SCHOOL = 1,
  RAIN = 2,
  SNOW = 3,
  TIME = 4,
  SEASON = 5,
  LANE = 6,
  SNA = 7
 } canutil_UI_mapSpeedLimitDependency_vals;

#define CANUTIL_GET_VALUE_UI_roadClass(d) ((*( (uint64_t *) d ) & 0xe000000000000000) >> 61)

typedef enum { 
  UNKNOWN_INVALID_SNA = 0,
  CLASS_1_MAJOR = 1,
  CLASS_2 = 2,
  CLASS_3 = 3,
  CLASS_4 = 4,
  CLASS_5 = 5,
  CLASS_6_MINOR = 6
 } canutil_UI_roadClass_vals;

#define CANUTIL_GET_VALUE_UI_inSuperchargerGeofence(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_UI_mapSpeedUnits(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)

typedef enum { 
  MPH = 0,
  KPH = 1
 } canutil_UI_mapSpeedUnits_vals;

#define CANUTIL_GET_VALUE_UI_mapSpeedLimit(d) ((*( (uint64_t *) d ) & 0x1f00000000000000) >> 56)

typedef enum { 
  UNKNOWN = 0,
  LESS_OR_EQ_5 = 1,
  LESS_OR_EQ_7 = 2,
  LESS_OR_EQ_10 = 3,
  LESS_OR_EQ_15 = 4,
  LESS_OR_EQ_20 = 5,
  LESS_OR_EQ_25 = 6,
  LESS_OR_EQ_30 = 7,
  LESS_OR_EQ_35 = 8,
  LESS_OR_EQ_40 = 9,
  LESS_OR_EQ_45 = 10,
  LESS_OR_EQ_50 = 11,
  LESS_OR_EQ_55 = 12,
  LESS_OR_EQ_60 = 13,
  LESS_OR_EQ_65 = 14,
  LESS_OR_EQ_70 = 15,
  LESS_OR_EQ_75 = 16,
  LESS_OR_EQ_80 = 17,
  LESS_OR_EQ_85 = 18,
  LESS_OR_EQ_90 = 19,
  LESS_OR_EQ_95 = 20,
  LESS_OR_EQ_100 = 21,
  LESS_OR_EQ_105 = 22,
  LESS_OR_EQ_110 = 23,
  LESS_OR_EQ_115 = 24,
  LESS_OR_EQ_120 = 25,
  LESS_OR_EQ_130 = 26,
  LESS_OR_EQ_140 = 27,
  LESS_OR_EQ_150 = 28,
  LESS_OR_EQ_160 = 29,
  UNLIMITED = 30,
  SNA = 31
 } canutil_UI_mapSpeedLimit_vals;

#define CANUTIL_GET_VALUE_UI_mapSpeedLimitType(d) ((*( (uint64_t *) d ) & 0x38000000000000) >> 51)

typedef enum { 
  REGULAR = 1,
  ADVISORY = 2,
  DEPENDENT = 3,
  BUMPS = 4,
  UNKNOWN_SNA = 7
 } canutil_UI_mapSpeedLimitType_vals;

#define CANUTIL_GET_VALUE_UI_countryCode(d) ((*( (uint64_t *) d ) & 0x3ff000000000000) >> 48)

typedef enum { 
  UNKNOWN = 0,
  SNA = 1023
 } canutil_UI_countryCode_vals;

#define CANUTIL_GET_VALUE_UI_streetCount(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)
#define CANUTIL_GET_VALUE_UI_gpsRoadMatch(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_UI_navRouteActive(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_UI_parallelAutoparkEnabled(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_UI_perpendicularAutoparkEnabled(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_UI_nextBranchDist(d) ((*( (uint64_t *) d ) & 0x1f00000000) >> 32)

typedef enum { 
  SNA = 31
 } canutil_UI_nextBranchDist_vals;

#define CANUTIL_GET_VALUE_UI_controlledAccess(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_UI_nextBranchLeftOffRamp(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_UI_nextBranchRightOffRamp(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_UI_rejectLeftLane(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_UI_rejectRightLane(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_UI_rejectHPP(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_UI_rejectNav(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_UI_rejectLeftFreeSpace(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_UI_rejectRightFreeSpace(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_UI_rejectAutosteer(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_UI_rejectHandsOn(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_UI_acceptBottsDots(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_UI_autosteerRestricted(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_UI_pmmEnabled(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_UI_scaEnabled(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_UI_mapDataCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_UI_mapDataChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID239DAS_lanes 0x239

#define CANUTIL_GET_VALUE_DAS_leftLaneExists(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_DAS_rightLaneExists(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_DAS_virtualLaneWidth(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)
#define CANUTIL_GET_VALUE_DAS_virtualLaneViewRange(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DAS_virtualLaneC0(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DAS_virtualLaneC1(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DAS_virtualLaneC2(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DAS_virtualLaneC3(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DAS_leftLineUsage(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  REJECTED_UNAVAILABLE = 0,
  AVAILABLE = 1,
  FUSED = 2,
  BLACKLISTED = 3
 } canutil_DAS_leftLineUsage_vals;

#define CANUTIL_GET_VALUE_DAS_rightLineUsage(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  REJECTED_UNAVAILABLE = 0,
  AVAILABLE = 1,
  FUSED = 2,
  BLACKLISTED = 3
 } canutil_DAS_rightLineUsage_vals;

#define CANUTIL_GET_VALUE_DAS_leftFork(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  LEFT_FORK_NONE = 0,
  LEFT_FORK_AVAILABLE = 1,
  LEFT_FORK_SELECTED = 2,
  LEFT_FORK_UNAVAILABLE = 3
 } canutil_DAS_leftFork_vals;

#define CANUTIL_GET_VALUE_DAS_rightFork(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  RIGHT_FORK_NONE = 0,
  RIGHT_FORK_AVAILABLE = 1,
  RIGHT_FORK_SELECTED = 2,
  RIGHT_FORK_UNAVAILABLE = 3
 } canutil_DAS_rightFork_vals;

#define CANUTIL_GET_VALUE_DAS_lanesCounter(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)
#define CANUTIL_ID24ADAS_visualDebug 0x24a

#define CANUTIL_GET_VALUE_DAS_autosteerVehiclesUsage(d) ((*( (uint64_t *) d ) & 0x3000000000000000) >> 60)

typedef enum { 
  REJECTED_UNAVAILABLE = 0,
  AVAILABLE = 1,
  FUSED = 2,
  BLACKLISTED = 3
 } canutil_DAS_autosteerVehiclesUsage_vals;

#define CANUTIL_GET_VALUE_DAS_autosteerHPPUsage(d) ((*( (uint64_t *) d ) & 0xc00000000000000) >> 58)

typedef enum { 
  REJECTED_UNAVAILABLE = 0,
  AVAILABLE = 1,
  FUSED = 2,
  BLACKLISTED = 3
 } canutil_DAS_autosteerHPPUsage_vals;

#define CANUTIL_GET_VALUE_DAS_autosteerNavigationUsage(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  REJECTED_UNAVAILABLE = 0,
  AVAILABLE = 1,
  FUSED = 2,
  BLACKLISTED = 3
 } canutil_DAS_autosteerNavigationUsage_vals;

#define CANUTIL_GET_VALUE_DAS_autosteerModelUsage(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  REJECTED_UNAVAILABLE = 0,
  AVAILABLE = 1,
  FUSED = 2,
  BLACKLISTED = 3
 } canutil_DAS_autosteerModelUsage_vals;

#define CANUTIL_GET_VALUE_DAS_autosteerBottsDotsUsage(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  REJECTED_UNAVAILABLE = 0,
  AVAILABLE = 1,
  FUSED = 2,
  BLACKLISTED = 3
 } canutil_DAS_autosteerBottsDotsUsage_vals;

#define CANUTIL_GET_VALUE_DAS_offsetSide(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  NO_OFFSET = 0,
  OFFSET_RIGHT_OBJECT = 1,
  OFFSET_LEFT_OBJECT = 2,
  OFFSET_BOTH_OBJECTS = 3
 } canutil_DAS_offsetSide_vals;

#define CANUTIL_GET_VALUE_DAS_roadSurfaceType(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  ROAD_SURFACE_SNA = 0,
  ROAD_SURFACE_NORMAL = 1,
  ROAD_SURFACE_ENHANCED = 2
 } canutil_DAS_roadSurfaceType_vals;

#define CANUTIL_GET_VALUE_DAS_autosteerHealthAnomalyLevel(d) ((*( (uint64_t *) d ) & 0x1c00000000000) >> 46)
#define CANUTIL_GET_VALUE_DAS_autosteerHealthState(d) ((*( (uint64_t *) d ) & 0x380000000000) >> 43)

typedef enum { 
  HEALTH_UNAVAILABLE = 0,
  HEALTH_NOMINAL = 1,
  HEALTH_DEGRADED = 2,
  HEALTH_SEVERELY_DEGRADED = 3,
  HEALTH_ABORTING = 4,
  HEALTH_FAULT = 5
 } canutil_DAS_autosteerHealthState_vals;

#define CANUTIL_GET_VALUE_DAS_lastLinePreferenceReason(d) ((*( (uint64_t *) d ) & 0xf0000000000) >> 40)

typedef enum { 
  OTHER_LANE_DISAGREES_WITH_MODEL = 0,
  AGREEMENT_WITH_NEIGHBOR_LANES = 1,
  NEIGHBOR_LANE_PROBABILIY = 2,
  NAVIGATION_BRANCH = 3,
  AVOID_ONCOMING_LANES = 4,
  COUNTRY_DRIVING_SIDE = 5,
  NONE = 15
 } canutil_DAS_lastLinePreferenceReason_vals;

#define CANUTIL_GET_VALUE_DAS_plannerState(d) ((*( (uint64_t *) d ) & 0xf000000000) >> 36)

typedef enum { 
  TP_EXTSTATE_DISABLED = 0,
  TP_EXTSTATE_VL = 1,
  TP_EXTSTATE_FOLLOW = 2,
  TP_EXTSTATE_LANECHANGE_REQUESTED = 3,
  TP_EXTSTATE_LANECHANGE_IN_PROGRESS = 4,
  TP_EXTSTATE_LANECHANGE_WAIT_FOR_SIDE_OBSTACLE = 5,
  TP_EXTSTATE_LANECHANGE_WAIT_FOR_FWD_OBSTACLE = 6,
  TP_EXTSTATE_LANECHANGE_ABORT = 7
 } canutil_DAS_plannerState_vals;

#define CANUTIL_GET_VALUE_DAS_lastAutosteerAbortReason(d) ((*( (uint64_t *) d ) & 0x3f00000000) >> 32)

typedef enum { 
  UI_ABORT_REASON_HM_LANE_VIEW_RANGE = 0,
  UI_ABORT_REASON_HM_VIRTUAL_LANE_NO_INPUTS = 1,
  UI_ABORT_REASON_HM_STEERING_ERROR = 2,
  UI_ABORT_REASON_APP_ME_STATE_NOT_VISION = 14,
  UI_ABORT_REASON_ME_MAIN_STATE_NOT_VISION = 15,
  UI_ABORT_REASON_CAM_MSG_MIA = 16,
  UI_ABORT_REASON_CAM_WATCHDOG = 17,
  UI_ABORT_REASON_TRAILER_MODE = 18,
  UI_ABORT_REASON_SIDE_COLLISION_IMMINENT = 19,
  UI_ABORT_REASON_EPAS_EAC_DENIED = 20,
  UI_ABORT_REASON_COMPONENT_MIA = 21,
  UI_ABORT_REASON_CRUISE_FAULT = 22,
  UI_ABORT_REASON_CID_SWITCH_DISABLED = 23,
  UI_ABORT_REASON_DRIVING_OFF_NAV = 24,
  UI_ABORT_REASON_VEHICLE_SPEED_ABOVE_MAX = 25,
  UI_ABORT_REASON_FOLLOWER_OUTPUT_INVALID = 26,
  UI_ABORT_REASON_PLANNER_OUTPUT_INVALID = 27,
  UI_ABORT_REASON_EPAS_ERROR_CODE = 28,
  UI_ABORT_REASON_ACC_CANCEL = 29,
  UI_ABORT_REASON_CAMERA_FAILSAFES = 30,
  UI_ABORT_REASON_NO_ABORT = 31,
  UI_ABORT_REASON_AEB = 32,
  UI_ABORT_REASON_SEATBELT_UNBUCKLED = 33,
  UI_ABORT_REASON_USER_OVERRIDE_STRIKEOUT = 34
 } canutil_DAS_lastAutosteerAbortReason_vals;

#define CANUTIL_GET_VALUE_DAS_devAppInterfaceEnabled(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_DAS_navAvailable(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)

typedef enum { 
  DAS_NAV_UNAVAILABLE = 0,
  DAS_NAV_AVAILABLE = 1
 } canutil_DAS_navAvailable_vals;

#define CANUTIL_GET_VALUE_DAS_navDistance(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DAS_accSmartSpeedActive(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_DAS_accSmartSpeedState(d) ((*( (uint64_t *) d ) & 0x38000) >> 15)

typedef enum { 
  NOT_ACTIVE = 0,
  ACTIVE_OFFRAMP = 1,
  ACTIVE_INTEGRATING = 2,
  ACTIVE_ONRAMP = 3,
  SET_SPEED_SET_REQUESTED = 4,
  OFFRAMP_DELAY = 5,
  SNA = 7
 } canutil_DAS_accSmartSpeedState_vals;

#define CANUTIL_GET_VALUE_DAS_ulcInProgress(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)

typedef enum { 
  ULC_INACTIVE = 0,
  ULC_ACTIVE = 1
 } canutil_DAS_ulcInProgress_vals;

#define CANUTIL_GET_VALUE_DAS_behaviorType(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  DAS_BEHAVIOR_INVALID = 0,
  DAS_BEHAVIOR_IN_LANE = 1,
  DAS_BEHAVIOR_LANE_CHANGE_LEFT = 2,
  DAS_BEHAVIOR_LANE_CHANGE_RIGHT = 3
 } canutil_DAS_behaviorType_vals;

#define CANUTIL_GET_VALUE_DAS_ulcType(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  ULC_TYPE_NONE = 0,
  ULC_TYPE_NAV = 1,
  ULC_TYPE_SPEED = 2
 } canutil_DAS_ulcType_vals;

#define CANUTIL_GET_VALUE_DAS_rearVehDetectedThisCycle(d) ((*( (uint64_t *) d ) & 0x10) >> 4)

typedef enum { 
  VEHICLE_NOT_DETECTED = 0,
  VEHICLE_DETECTED = 1
 } canutil_DAS_rearVehDetectedThisCycle_vals;

#define CANUTIL_GET_VALUE_DAS_rearLeftVehDetectedCurrent(d) ((*( (uint64_t *) d ) & 0x8) >> 3)

typedef enum { 
  VEHICLE_NOT_DETECTED = 0,
  VEHICLE_DETECTED = 1
 } canutil_DAS_rearLeftVehDetectedCurrent_vals;

#define CANUTIL_GET_VALUE_DAS_rearRightVehDetectedTrip(d) ((*( (uint64_t *) d ) & 0x4) >> 2)

typedef enum { 
  VEHICLE_NOT_DETECTED = 0,
  VEHICLE_DETECTED = 1
 } canutil_DAS_rearRightVehDetectedTrip_vals;

#define CANUTIL_GET_VALUE_DAS_rearLeftVehDetectedTrip(d) ((*( (uint64_t *) d ) & 0x2) >> 1)

typedef enum { 
  VEHICLE_NOT_DETECTED = 0,
  VEHICLE_DETECTED = 1
 } canutil_DAS_rearLeftVehDetectedTrip_vals;

#define CANUTIL_ID25BAPP_environment 0x25b

#define CANUTIL_GET_VALUE_APP_environmentRainy(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_APP_environmentSnowy(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_ID25DCP_status 0x25d

#define CANUTIL_GET_VALUE_CP_type(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  CP_TYPE_US_TESLA = 0,
  CP_TYPE_EURO_IEC = 1,
  CP_TYPE_GB = 2,
  CP_TYPE_IEC_CCS = 3
 } canutil_CP_type_vals;

#define CANUTIL_GET_VALUE_CP_insertEnableLine(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_CP_chargeCablePresent(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)

typedef enum { 
  CABLE_NOT_PRESENT = 0,
  CABLE_PRESENT = 1
 } canutil_CP_chargeCablePresent_vals;

#define CANUTIL_GET_VALUE_CP_chargeCableSecured(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_CP_latchState(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)

typedef enum { 
  CP_LATCH_SNA = 0,
  CP_LATCH_DISENGAGED = 1,
  CP_LATCH_ENGAGED = 2,
  CP_LATCH_BLOCKING = 3
 } canutil_CP_latchState_vals;

#define CANUTIL_GET_VALUE_CP_permanentPowerRequest(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_CP_latch2State(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  CP_LATCH_SNA = 0,
  CP_LATCH_DISENGAGED = 1,
  CP_LATCH_ENGAGED = 2,
  CP_LATCH_BLOCKING = 3
 } canutil_CP_latch2State_vals;

#define CANUTIL_GET_VALUE_CP_chargeDoorOpen(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_CP_doorControlState(d) ((*( (uint64_t *) d ) & 0xe0000000000000) >> 53)

typedef enum { 
  CP_doorInit = 0,
  CP_doorIdle = 1,
  CP_doorOpenRequested = 2,
  CP_doorOpening = 3,
  CP_doorSenseOpen = 4,
  CP_doorClosing = 5,
  CP_doorSenseClosed = 6
 } canutil_CP_doorControlState_vals;

#define CANUTIL_GET_VALUE_CP_chargeCableState(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  CHARGE_CABLE_UNKNOWN_SNA = 0,
  CHARGE_CABLE_NOT_CONNECTED = 1,
  CHARGE_CABLE_CONNECTED = 2
 } canutil_CP_chargeCableState_vals;

#define CANUTIL_GET_VALUE_CP_latchControlState(d) ((*( (uint64_t *) d ) & 0x7000000000000) >> 48)

typedef enum { 
  CP_latchInit = 0,
  CP_latchIdle = 1,
  CP_latchDisengageRequested = 2,
  CP_latchDisengaging = 3,
  CP_latchDisengaged = 4,
  CP_latchEngaging = 5
 } canutil_CP_latchControlState_vals;

#define CANUTIL_GET_VALUE_CP_latch2ControlState(d) ((*( (uint64_t *) d ) & 0xe00000000000) >> 45)

typedef enum { 
  CP_latchInit = 0,
  CP_latchIdle = 1,
  CP_latchDisengageRequested = 2,
  CP_latchDisengaging = 3,
  CP_latchDisengaged = 4,
  CP_latchEngaging = 5
 } canutil_CP_latch2ControlState_vals;

#define CANUTIL_GET_VALUE_CP_apsVoltage(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_doorButtonPressed(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_CP_ledColor(d) ((*( (uint64_t *) d ) & 0x780000000) >> 31)

typedef enum { 
  CP_LEDS_OFF = 0,
  CP_LEDS_RED = 1,
  CP_LEDS_GREEN = 2,
  CP_LEDS_BLUE = 3,
  CP_LEDS_WHITE = 4,
  CP_LEDS_FLASHING_GREEN = 5,
  CP_LEDS_FLASHING_AMBER = 6,
  CP_LEDS_AMBER = 7,
  CP_LEDS_RAVE = 8,
  CP_LEDS_DEBUG = 9,
  CP_LEDS_FLASHING_BLUE = 10
 } canutil_CP_ledColor_vals;

#define CANUTIL_GET_VALUE_CP_swcanRelayClosed(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_CP_UHF_controlState(d) ((*( (uint64_t *) d ) & 0x3c000000) >> 26)

typedef enum { 
  CP_UHF_INIT = 0,
  CP_UHF_CONFIG = 1,
  CP_UHF_IDLE = 2,
  CP_UHF_CALIBRATE = 3,
  CP_UHF_PREPARE_RX = 4,
  CP_UHF_RX = 5,
  CP_UHF_CHECK_RX = 6,
  CP_UHF_READ_RXFIFO = 7,
  CP_UHF_HANDLE_FOUND = 8,
  CP_UHF_SLEEP = 9,
  CP_UHF_FAULT = 10
 } canutil_CP_UHF_controlState_vals;

#define CANUTIL_GET_VALUE_CP_UHF_handleFound(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_CP_doorOpenRequested(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_CP_faultLineSensed(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)

typedef enum { 
  FAULT_LINE_CLEARED = 0,
  FAULT_LINE_SET = 1
 } canutil_CP_faultLineSensed_vals;

#define CANUTIL_GET_VALUE_CP_inductiveDoorState(d) ((*( (uint64_t *) d ) & 0x380000) >> 19)

typedef enum { 
  CP_INDUCTIVE_DOOR_INIT = 0,
  CP_INDUCTIVE_DOOR_INIT_FROM_CHARGE = 1,
  CP_INDUCTIVE_DOOR_INIT_FROM_DRIVE = 2,
  CP_INDUCTIVE_DOOR_PRESENT = 3,
  CP_INDUCTIVE_DOOR_NOT_PRESENT = 4,
  CP_INDUCTIVE_DOOR_OFF_DRIVE = 5,
  CP_INDUCTIVE_DOOR_OFF_CHARGE = 6,
  CP_INDUCTIVE_DOOR_FAULT = 7
 } canutil_CP_inductiveDoorState_vals;

#define CANUTIL_GET_VALUE_CP_inductiveSensorState(d) ((*( (uint64_t *) d ) & 0x70000) >> 16)

typedef enum { 
  CP_INDUCTIVE_SENSOR_INIT = 0,
  CP_INDUCTIVE_SENSOR_POLL = 1,
  CP_INDUCTIVE_SENSOR_SHUTDOWN = 2,
  CP_INDUCTIVE_SENSOR_PAUSE = 3,
  CP_INDUCTIVE_SENSOR_WAIT_FOR_INIT = 4,
  CP_INDUCTIVE_SENSOR_FAULT = 5,
  CP_INDUCTIVE_SENSOR_RESET = 6,
  CP_INDUCTIVE_SENSOR_CONFIG = 7
 } canutil_CP_inductiveSensorState_vals;

#define CANUTIL_GET_VALUE_CP_chargeDoorOpenUI(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_CP_vehicleUnlockRequest(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_CP_numAlertsSet(d) ((*( (uint64_t *) d ) & 0x3f800) >> 11)
#define CANUTIL_GET_VALUE_CP_coldWeatherMode(d) ((*( (uint64_t *) d ) & 0x10) >> 4)

typedef enum { 
  CP_COLD_WEATHER_NONE = 0,
  CP_COLD_WEATHER_LATCH_MITIGATION = 1
 } canutil_CP_coldWeatherMode_vals;

#define CANUTIL_GET_VALUE_CP_hvInletExposed(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_CP_latchEngaged(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_CP_coverClosed(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID29DCP_dcChargeStatus 0x29d

#define CANUTIL_GET_VALUE_CP_evseOutputDcCurrent(d) ((*( (uint64_t *) d ) & 0x3fff8000) >> 15)
#define CANUTIL_GET_VALUE_CP_evseOutputDcVoltage(d) ((*( (uint64_t *) d ) & 0x1fff0000) >> 16)
#define CANUTIL_GET_VALUE_CP_evseOutputDcCurrentStale(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_ID2B4PCS_dcdcRailStatus 0x2b4

#define CANUTIL_GET_VALUE_PCS_dcdcLvBusVolt(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_PCS_dcdcHvBusVolt(d) ((*( (uint64_t *) d ) & 0x3ffc) >> 2)
#define CANUTIL_GET_VALUE_PCS_dcdcLvOutputCurrent(d) ((*( (uint64_t *) d ) & 0xfff0000) >> 16)
#define CANUTIL_ID2B9DAS_control 0x2b9

#define CANUTIL_GET_VALUE_DAS_setSpeed(d) ((*( (uint64_t *) d ) & 0xfff000) >> 12)

typedef enum { 
  SNA = 4095
 } canutil_DAS_setSpeed_vals;

#define CANUTIL_GET_VALUE_DAS_accState(d) ((*( (uint64_t *) d ) & 0xf0000000000000) >> 52)

typedef enum { 
  ACC_CANCEL_GENERIC = 0,
  ACC_CANCEL_CAMERA_BLIND = 1,
  ACC_CANCEL_RADAR_BLIND = 2,
  ACC_HOLD = 3,
  ACC_ON = 4,
  APC_BACKWARD = 5,
  APC_FORWARD = 6,
  APC_COMPLETE = 7,
  APC_ABORT = 8,
  APC_PAUSE = 9,
  APC_UNPARK_COMPLETE = 10,
  APC_SELFPARK_START = 11,
  ACC_CANCEL_PATH_NOT_CLEAR = 12,
  ACC_CANCEL_GENERIC_SILENT = 13,
  ACC_CANCEL_OUT_OF_CALIBRATION = 14,
  FAULT_SNA = 15
 } canutil_DAS_accState_vals;

#define CANUTIL_GET_VALUE_DAS_aebEvent(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  AEB_NOT_ACTIVE = 0,
  AEB_ACTIVE = 1,
  AEB_FAULT = 2,
  AEB_SNA = 3
 } canutil_DAS_aebEvent_vals;

#define CANUTIL_GET_VALUE_DAS_jerkMin(d) ((*( (uint64_t *) d ) & 0x7fc00000000000) >> 46)

typedef enum { 
  SNA = 511
 } canutil_DAS_jerkMin_vals;

#define CANUTIL_GET_VALUE_DAS_jerkMax(d) ((*( (uint64_t *) d ) & 0x1fe000000000) >> 37)

typedef enum { 
  SNA = 255
 } canutil_DAS_jerkMax_vals;

#define CANUTIL_GET_VALUE_DAS_accelMin(d) ((*( (uint64_t *) d ) & 0x3fe0000000) >> 29)

typedef enum { 
  SNA = 511
 } canutil_DAS_accelMin_vals;

#define CANUTIL_GET_VALUE_DAS_accelMax(d) ((*( (uint64_t *) d ) & 0x1ff00000) >> 20)

typedef enum { 
  SNA = 511
 } canutil_DAS_accelMax_vals;

#define CANUTIL_GET_VALUE_DAS_controlCounter(d) ((*( (uint64_t *) d ) & 0x3800) >> 11)
#define CANUTIL_GET_VALUE_DAS_controlChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID2D3UI_solarData 0x2d3

#define CANUTIL_GET_VALUE_UI_solarAzimuthAngle(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)

typedef enum { 
  SNA = 32768
 } canutil_UI_solarAzimuthAngle_vals;

#define CANUTIL_GET_VALUE_UI_solarAzimuthAngleCarRef(d) ((*( (uint64_t *) d ) & 0x1ff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_UI_solarAzimuthAngleCarRef_vals;

#define CANUTIL_GET_VALUE_UI_isSunUp(d) ((*( (uint64_t *) d ) & 0x18000000000) >> 39)

typedef enum { 
  SUN_DOWN = 0,
  SUN_UP = 1,
  SUN_SNA = 3
 } canutil_UI_isSunUp_vals;

#define CANUTIL_GET_VALUE_UI_solarElevationAngle(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 127
 } canutil_UI_solarElevationAngle_vals;

#define CANUTIL_GET_VALUE_UI_screenPCBTemperature(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_UI_minsToSunset(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_UI_minsToSunrise(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID309DAS_object 0x309

#define CANUTIL_GET_VALUE_DAS_objectId(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  LEAD_VEHICLES = 0,
  LEFT_VEHICLES = 1,
  RIGHT_VEHICLES = 2,
  CUTIN_VEHICLE = 3,
  ROAD_SIGN = 4,
  VEHICLE_HEADINGS = 5
 } canutil_DAS_objectId_vals;

#define CANUTIL_GET_VALUE_DAS_cutinVehType(d) ((*( (uint64_t *) d ) & 0xe000000000000000) >> 61)

typedef enum { 
  UNKNOWN = 0,
  TRUCK = 1,
  CAR = 2,
  MOTORCYCLE = 3,
  BICYCLE = 4,
  PEDESTRIAN = 5
 } canutil_DAS_cutinVehType_vals;

#define CANUTIL_GET_VALUE_DAS_leadVehType(d) ((*( (uint64_t *) d ) & 0xe000000000000000) >> 61)

typedef enum { 
  UNKNOWN = 0,
  TRUCK = 1,
  CAR = 2,
  MOTORCYCLE = 3,
  BICYCLE = 4,
  PEDESTRIAN = 5,
  IPSO = 6
 } canutil_DAS_leadVehType_vals;

#define CANUTIL_GET_VALUE_DAS_leftVehType(d) ((*( (uint64_t *) d ) & 0xe000000000000000) >> 61)

typedef enum { 
  UNKNOWN = 0,
  TRUCK = 1,
  CAR = 2,
  MOTORCYCLE = 3,
  BICYCLE = 4,
  PEDESTRIAN = 5
 } canutil_DAS_leftVehType_vals;

#define CANUTIL_GET_VALUE_DAS_rightVehType(d) ((*( (uint64_t *) d ) & 0xe000000000000000) >> 61)

typedef enum { 
  UNKNOWN = 0,
  TRUCK = 1,
  CAR = 2,
  MOTORCYCLE = 3,
  BICYCLE = 4,
  PEDESTRIAN = 5
 } canutil_DAS_rightVehType_vals;

#define CANUTIL_GET_VALUE_DAS_roadSignColor(d) ((*( (uint64_t *) d ) & 0xe000000000000000) >> 61)

typedef enum { 
  NONE = 0,
  RED = 1,
  YELLOW = 2,
  GREEN = 3,
  RED_YELLOW = 4
 } canutil_DAS_roadSignColor_vals;

#define CANUTIL_GET_VALUE_DAS_roadSignId(d) ((*( (uint64_t *) d ) & 0x3fc) >> 2)

typedef enum { 
  STOP_SIGN = 0,
  TRAFFIC_LIGHT = 1,
  SNA = 255
 } canutil_DAS_roadSignId_vals;

#define CANUTIL_GET_VALUE_DAS_cutinVehRelevantForControl(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_DAS_leadVehRelevantForControl(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_DAS_leftVehRelevantForControl(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_DAS_rightVehRelevantForControl(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_DAS_cutinVehDx(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 255
 } canutil_DAS_cutinVehDx_vals;

#define CANUTIL_GET_VALUE_DAS_leadVehDx(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 255
 } canutil_DAS_leadVehDx_vals;

#define CANUTIL_GET_VALUE_DAS_leadVehHeading(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 255
 } canutil_DAS_leadVehHeading_vals;

#define CANUTIL_GET_VALUE_DAS_leftVehDx(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 255
 } canutil_DAS_leftVehDx_vals;

#define CANUTIL_GET_VALUE_DAS_rightVehDx(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 255
 } canutil_DAS_rightVehDx_vals;

#define CANUTIL_GET_VALUE_DAS_roadSignStopLineDist(d) ((*( (uint64_t *) d ) & 0xffc000000000000) >> 50)

typedef enum { 
  SNA = 1023
 } canutil_DAS_roadSignStopLineDist_vals;

#define CANUTIL_GET_VALUE_DAS_cutinVehVxRel(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  SNA = 15
 } canutil_DAS_cutinVehVxRel_vals;

#define CANUTIL_GET_VALUE_DAS_leadVeh2Heading(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_DAS_leadVeh2Heading_vals;

#define CANUTIL_GET_VALUE_DAS_leadVehVxRel(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  SNA = 15
 } canutil_DAS_leadVehVxRel_vals;

#define CANUTIL_GET_VALUE_DAS_leftVehVxRel(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  SNA = 15
 } canutil_DAS_leftVehVxRel_vals;

#define CANUTIL_GET_VALUE_DAS_rightVehVxRel(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  SNA = 15
 } canutil_DAS_rightVehVxRel_vals;

#define CANUTIL_GET_VALUE_DAS_cutinVehDy(d) ((*( (uint64_t *) d ) & 0x7f00000000000) >> 44)
#define CANUTIL_GET_VALUE_DAS_leadVehDy(d) ((*( (uint64_t *) d ) & 0x7f00000000000) >> 44)
#define CANUTIL_GET_VALUE_DAS_leftVehDy(d) ((*( (uint64_t *) d ) & 0x7f00000000000) >> 44)
#define CANUTIL_GET_VALUE_DAS_rightVehDy(d) ((*( (uint64_t *) d ) & 0x7f00000000000) >> 44)
#define CANUTIL_GET_VALUE_DAS_leftVehHeading(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 255
 } canutil_DAS_leftVehHeading_vals;

#define CANUTIL_GET_VALUE_DAS_roadSignControlActive(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_DAS_roadSignSource(d) ((*( (uint64_t *) d ) & 0x18000000000) >> 39)

typedef enum { 
  NONE = 0,
  NAV = 1,
  VISION = 2
 } canutil_DAS_roadSignSource_vals;

#define CANUTIL_GET_VALUE_DAS_cutinVehId(d) ((*( (uint64_t *) d ) & 0xfe000000000) >> 37)

typedef enum { 
  SNA = 127
 } canutil_DAS_cutinVehId_vals;

#define CANUTIL_GET_VALUE_DAS_leadVehId(d) ((*( (uint64_t *) d ) & 0xfe000000000) >> 37)

typedef enum { 
  SNA = 127
 } canutil_DAS_leadVehId_vals;

#define CANUTIL_GET_VALUE_DAS_leftVehId(d) ((*( (uint64_t *) d ) & 0xfe000000000) >> 37)

typedef enum { 
  SNA = 127
 } canutil_DAS_leftVehId_vals;

#define CANUTIL_GET_VALUE_DAS_rightVehId(d) ((*( (uint64_t *) d ) & 0xfe000000000) >> 37)

typedef enum { 
  SNA = 127
 } canutil_DAS_rightVehId_vals;

#define CANUTIL_GET_VALUE_DAS_roadSignArrow(d) ((*( (uint64_t *) d ) & 0xe000000000) >> 37)

typedef enum { 
  CIRCLE = 0,
  LEFT = 1,
  RIGHT = 2,
  STRAIGHT = 3,
  UNKNOWN = 4
 } canutil_DAS_roadSignArrow_vals;

#define CANUTIL_GET_VALUE_DAS_roadSignOrientation(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  UNKNOWN = 0,
  VERTICAL_3_LIGHT = 1,
  HORIZONTAL_3_LIGHT = 2
 } canutil_DAS_roadSignOrientation_vals;

#define CANUTIL_GET_VALUE_DAS_leftVeh2Heading(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_DAS_leftVeh2Heading_vals;

#define CANUTIL_GET_VALUE_DAS_leadVeh2Type(d) ((*( (uint64_t *) d ) & 0x1c0000000) >> 30)

typedef enum { 
  UNKNOWN = 0,
  TRUCK = 1,
  CAR = 2,
  MOTORCYCLE = 3,
  BICYCLE = 4,
  PEDESTRIAN = 5
 } canutil_DAS_leadVeh2Type_vals;

#define CANUTIL_GET_VALUE_DAS_leftVeh2Type(d) ((*( (uint64_t *) d ) & 0x1c0000000) >> 30)

typedef enum { 
  UNKNOWN = 0,
  TRUCK = 1,
  CAR = 2,
  MOTORCYCLE = 3,
  BICYCLE = 4,
  PEDESTRIAN = 5
 } canutil_DAS_leftVeh2Type_vals;

#define CANUTIL_GET_VALUE_DAS_rightVeh2Type(d) ((*( (uint64_t *) d ) & 0x1c0000000) >> 30)

typedef enum { 
  UNKNOWN = 0,
  TRUCK = 1,
  CAR = 2,
  MOTORCYCLE = 3,
  BICYCLE = 4,
  PEDESTRIAN = 5
 } canutil_DAS_rightVeh2Type_vals;

#define CANUTIL_GET_VALUE_DAS_leadVeh2RelevantForControl(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_DAS_leftVeh2RelevantForControl(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_DAS_rightVeh2RelevantForControl(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_DAS_leadVeh2Dx(d) ((*( (uint64_t *) d ) & 0x1fe000000) >> 25)

typedef enum { 
  SNA = 255
 } canutil_DAS_leadVeh2Dx_vals;

#define CANUTIL_GET_VALUE_DAS_leftVeh2Dx(d) ((*( (uint64_t *) d ) & 0x1fe000000) >> 25)

typedef enum { 
  SNA = 255
 } canutil_DAS_leftVeh2Dx_vals;

#define CANUTIL_GET_VALUE_DAS_rightVeh2Dx(d) ((*( (uint64_t *) d ) & 0x1fe000000) >> 25)

typedef enum { 
  SNA = 255
 } canutil_DAS_rightVeh2Dx_vals;

#define CANUTIL_GET_VALUE_DAS_rightVehHeading(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_DAS_rightVehHeading_vals;

#define CANUTIL_GET_VALUE_DAS_leadVeh2VxRel(d) ((*( (uint64_t *) d ) & 0x1e0000) >> 17)

typedef enum { 
  SNA = 15
 } canutil_DAS_leadVeh2VxRel_vals;

#define CANUTIL_GET_VALUE_DAS_leftVeh2VxRel(d) ((*( (uint64_t *) d ) & 0x1e0000) >> 17)

typedef enum { 
  SNA = 15
 } canutil_DAS_leftVeh2VxRel_vals;

#define CANUTIL_GET_VALUE_DAS_rightVeh2VxRel(d) ((*( (uint64_t *) d ) & 0x1e0000) >> 17)

typedef enum { 
  SNA = 15
 } canutil_DAS_rightVeh2VxRel_vals;

#define CANUTIL_GET_VALUE_DAS_rightVeh2Heading(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 255
 } canutil_DAS_rightVeh2Heading_vals;

#define CANUTIL_GET_VALUE_DAS_leadVeh2Dy(d) ((*( (uint64_t *) d ) & 0xfe000) >> 13)
#define CANUTIL_GET_VALUE_DAS_leftVeh2Dy(d) ((*( (uint64_t *) d ) & 0xfe000) >> 13)
#define CANUTIL_GET_VALUE_DAS_rightVeh2Dy(d) ((*( (uint64_t *) d ) & 0xfe000) >> 13)
#define CANUTIL_GET_VALUE_DAS_cutinVehHeading(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  SNA = 255
 } canutil_DAS_cutinVehHeading_vals;

#define CANUTIL_GET_VALUE_DAS_leadVeh2Id(d) ((*( (uint64_t *) d ) & 0xfc0) >> 6)

typedef enum { 
  SNA = 0
 } canutil_DAS_leadVeh2Id_vals;

#define CANUTIL_GET_VALUE_DAS_leftVeh2Id(d) ((*( (uint64_t *) d ) & 0xfc0) >> 6)

typedef enum { 
  SNA = 0
 } canutil_DAS_leftVeh2Id_vals;

#define CANUTIL_GET_VALUE_DAS_rightVeh2Id(d) ((*( (uint64_t *) d ) & 0xfc0) >> 6)

typedef enum { 
  SNA = 0
 } canutil_DAS_rightVeh2Id_vals;

#define CANUTIL_ID389DAS_status2 0x389

#define CANUTIL_GET_VALUE_DAS_accSpeedLimit(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)

typedef enum { 
  NONE = 0,
  SNA = 1023
 } canutil_DAS_accSpeedLimit_vals;

#define CANUTIL_GET_VALUE_DAS_pmmObstacleSeverity(d) ((*( (uint64_t *) d ) & 0x1c0000000000000) >> 54)

typedef enum { 
  PMM_NONE = 0,
  PMM_IMMINENT_REAR = 1,
  PMM_IMMINENT_FRONT = 2,
  PMM_BRAKE_REQUEST = 3,
  PMM_CRASH_REAR = 4,
  PMM_CRASH_FRONT = 5,
  PMM_ACCEL_LIMIT = 6,
  PMM_SNA = 7
 } canutil_DAS_pmmObstacleSeverity_vals;

#define CANUTIL_GET_VALUE_DAS_pmmLoggingRequest(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)

typedef enum { 
  FALSE = 0,
  TRUE = 1
 } canutil_DAS_pmmLoggingRequest_vals;

#define CANUTIL_GET_VALUE_DAS_activationFailureStatus(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  LC_ACTIVATION_IDLE = 0,
  LC_ACTIVATION_FAILED_1 = 1,
  LC_ACTIVATION_FAILED_2 = 2
 } canutil_DAS_activationFailureStatus_vals;

#define CANUTIL_GET_VALUE_DAS_pmmUltrasonicsFaultReason(d) ((*( (uint64_t *) d ) & 0x7000000000000) >> 48)

typedef enum { 
  PMM_ULTRASONICS_NO_FAULT = 0,
  PMM_ULTRASONICS_BLOCKED_FRONT = 1,
  PMM_ULTRASONICS_BLOCKED_REAR = 2,
  PMM_ULTRASONICS_BLOCKED_BOTH = 3,
  PMM_ULTRASONICS_INVALID_MIA = 4
 } canutil_DAS_pmmUltrasonicsFaultReason_vals;

#define CANUTIL_GET_VALUE_DAS_pmmRadarFaultReason(d) ((*( (uint64_t *) d ) & 0x600000000000) >> 45)

typedef enum { 
  PMM_RADAR_NO_FAULT = 0,
  PMM_RADAR_BLOCKED_FRONT = 1,
  PMM_RADAR_INVALID_MIA = 2
 } canutil_DAS_pmmRadarFaultReason_vals;

#define CANUTIL_GET_VALUE_DAS_pmmSysFaultReason(d) ((*( (uint64_t *) d ) & 0x380000000000) >> 43)

typedef enum { 
  PMM_FAULT_NONE = 0,
  PMM_FAULT_DAS_DISABLED = 1,
  PMM_FAULT_SPEED = 2,
  PMM_FAULT_DI_FAULT = 3,
  PMM_FAULT_STEERING_ANGLE_RATE = 4,
  PMM_FAULT_DISABLED_BY_USER = 5,
  PMM_FAULT_ROAD_TYPE = 6,
  PMM_FAULT_BRAKE_PEDAL_INHIBIT = 7
 } canutil_DAS_pmmSysFaultReason_vals;

#define CANUTIL_GET_VALUE_DAS_pmmCameraFaultReason(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  PMM_CAMERA_NO_FAULT = 0,
  PMM_CAMERA_BLOCKED_FRONT = 1,
  PMM_CAMERA_INVALID_MIA = 2
 } canutil_DAS_pmmCameraFaultReason_vals;

#define CANUTIL_GET_VALUE_DAS_ACC_report(d) ((*( (uint64_t *) d ) & 0x7c000000000) >> 38)

typedef enum { 
  ACC_REPORT_TARGET_NONE = 0,
  ACC_REPORT_TARGET_CIPV = 1,
  ACC_REPORT_TARGET_IN_FRONT_OF_CIPV = 2,
  ACC_REPORT_TARGET_MCVL = 3,
  ACC_REPORT_TARGET_MCVR = 4,
  ACC_REPORT_TARGET_CUTIN = 5,
  ACC_REPORT_TARGET_TYPE_STOP_SIGN = 6,
  ACC_REPORT_TARGET_TYPE_TRAFFIC_LIGHT = 7,
  ACC_REPORT_TARGET_TYPE_IPSO = 8,
  ACC_REPORT_TARGET_TYPE_FAULT = 9,
  ACC_REPORT_CSA = 10,
  ACC_REPORT_LC_HANDS_ON_REQD_STRUCK_OUT = 11,
  ACC_REPORT_LC_EXTERNAL_STATE_ABORTING = 12,
  ACC_REPORT_LC_EXTERNAL_STATE_ABORTED = 13,
  ACC_REPORT_LC_EXTERNAL_STATE_ACTIVE_RESTRICTED = 14,
  ACC_REPORT_RADAR_OBJ_ONE = 15,
  ACC_REPORT_RADAR_OBJ_TWO = 16,
  ACC_REPORT_TARGET_MCP = 17,
  ACC_REPORT_FLEET_SPEEDS = 18,
  ACC_REPORT_MCVLR_DPP = 19,
  ACC_REPORT_MCVLR_IN_PATH = 20,
  ACC_REPORT_CIPV_CUTTING_OUT = 21,
  ACC_REPORT_RADAR_OBJ_FIVE = 22,
  ACC_REPORT_CAMERA_ONLY = 23,
  ACC_REPORT_BEHAVIOR_REPORT = 24
 } canutil_DAS_ACC_report_vals;

#define CANUTIL_GET_VALUE_DAS_relaxCruiseLimits(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_DAS_csaState(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  CSA_EXTERNAL_STATE_UNAVAILABLE = 0,
  CSA_EXTERNAL_STATE_AVAILABLE = 1,
  CSA_EXTERNAL_STATE_ENABLE = 2,
  CSA_EXTERNAL_STATE_HOLD = 3
 } canutil_DAS_csaState_vals;

#define CANUTIL_GET_VALUE_DAS_radarTelemetry(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  RADAR_TELEMETRY_IDLE = 0,
  RADAR_TELEMETRY_NORMAL = 1,
  RADAR_TELEMETRY_URGENT = 2
 } canutil_DAS_radarTelemetry_vals;

#define CANUTIL_GET_VALUE_DAS_robState(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  ROB_STATE_INHIBITED = 0,
  ROB_STATE_MEASURE = 1,
  ROB_STATE_ACTIVE = 2,
  ROB_STATE_MAPLESS = 3
 } canutil_DAS_robState_vals;

#define CANUTIL_GET_VALUE_DAS_driverInteractionLevel(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  DRIVER_INTERACTING = 0,
  DRIVER_NOT_INTERACTING = 1,
  CONTINUED_DRIVER_NOT_INTERACTING = 2
 } canutil_DAS_driverInteractionLevel_vals;

#define CANUTIL_GET_VALUE_DAS_ppOffsetDesiredRamp(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  PP_NO_OFFSET = 128
 } canutil_DAS_ppOffsetDesiredRamp_vals;

#define CANUTIL_GET_VALUE_DAS_longCollisionWarning(d) ((*( (uint64_t *) d ) & 0xf0000) >> 16)

typedef enum { 
  FCM_LONG_COLLISION_WARNING_NONE = 0,
  FCM_LONG_COLLISION_WARNING_VEHICLE_UNKNOWN = 1,
  FCM_LONG_COLLISION_WARNING_PEDESTRIAN = 2,
  FCM_LONG_COLLISION_WARNING_IPSO = 3,
  FCM_LONG_COLLISION_WARNING_STOPSIGN_STOPLINE = 4,
  FCM_LONG_COLLISION_WARNING_TFL_STOPLINE = 5,
  FCM_LONG_COLLISION_WARNING_VEHICLE_CIPV = 6,
  FCM_LONG_COLLISION_WARNING_VEHICLE_CUTIN = 7,
  FCM_LONG_COLLISION_WARNING_VEHICLE_MCVL = 8,
  FCM_LONG_COLLISION_WARNING_VEHICLE_MCVL2 = 9,
  FCM_LONG_COLLISION_WARNING_VEHICLE_MCVR = 10,
  FCM_LONG_COLLISION_WARNING_VEHICLE_MCVR2 = 11,
  FCM_LONG_COLLISION_WARNING_VEHICLE_CIPV2 = 12,
  FCM_LONG_COLLISION_WARNING_SNA = 15
 } canutil_DAS_longCollisionWarning_vals;

#define CANUTIL_GET_VALUE_DAS_status2Counter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_DAS_status2Checksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID399DAS_status 0x399

#define CANUTIL_GET_VALUE_DAS_autopilotState(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)

typedef enum { 
  DISABLED = 0,
  UNAVAILABLE = 1,
  AVAILABLE = 2,
  ACTIVE_NOMINAL = 3,
  ACTIVE_RESTRICTED = 4,
  ACTIVE_NAV = 5,
  ABORTING = 8,
  ABORTED = 9,
  FAULT = 14,
  SNA = 15
 } canutil_DAS_autopilotState_vals;

#define CANUTIL_GET_VALUE_DAS_blindSpotRearLeft(d) ((*( (uint64_t *) d ) & 0x3000000000000000) >> 60)

typedef enum { 
  NO_WARNING = 0,
  WARNING_LEVEL_1 = 1,
  WARNING_LEVEL_2 = 2,
  SNA = 3
 } canutil_DAS_blindSpotRearLeft_vals;

#define CANUTIL_GET_VALUE_DAS_blindSpotRearRight(d) ((*( (uint64_t *) d ) & 0xc00000000000000) >> 58)

typedef enum { 
  NO_WARNING = 0,
  WARNING_LEVEL_1 = 1,
  WARNING_LEVEL_2 = 2,
  SNA = 3
 } canutil_DAS_blindSpotRearRight_vals;

#define CANUTIL_GET_VALUE_DAS_fusedSpeedLimit(d) ((*( (uint64_t *) d ) & 0x1f00000000000000) >> 56)

typedef enum { 
  UNKNOWN_SNA = 0,
  NONE = 31
 } canutil_DAS_fusedSpeedLimit_vals;

#define CANUTIL_GET_VALUE_DAS_suppressSpeedWarning(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)

typedef enum { 
  Do_Not_Suppress = 0,
  Suppress_Speed_Warning = 1
 } canutil_DAS_suppressSpeedWarning_vals;

#define CANUTIL_GET_VALUE_DAS_summonObstacle(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)
#define CANUTIL_GET_VALUE_DAS_summonClearedGate(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_DAS_visionOnlySpeedLimit(d) ((*( (uint64_t *) d ) & 0x1f000000000000) >> 48)

typedef enum { 
  UNKNOWN_SNA = 0,
  NONE = 31
 } canutil_DAS_visionOnlySpeedLimit_vals;

#define CANUTIL_GET_VALUE_DAS_heaterState(d) ((*( (uint64_t *) d ) & 0x80000000000) >> 43)

typedef enum { 
  HEATER_OFF_SNA = 0,
  HEATER_ON = 1
 } canutil_DAS_heaterState_vals;

#define CANUTIL_GET_VALUE_DAS_forwardCollisionWarning(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  NONE = 0,
  FORWARD_COLLISION_WARNING = 1,
  SNA = 3
 } canutil_DAS_forwardCollisionWarning_vals;

#define CANUTIL_GET_VALUE_DAS_autoparkReady(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)

typedef enum { 
  AUTOPARK_UNAVAILABLE = 0,
  AUTOPARK_READY = 1
 } canutil_DAS_autoparkReady_vals;

#define CANUTIL_GET_VALUE_DAS_autoParked(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_DAS_autoparkWaitingForBrake(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_DAS_summonFwdLeashReached(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_DAS_summonRvsLeashReached(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_DAS_lssState(d) ((*( (uint64_t *) d ) & 0x3800000000) >> 35)

typedef enum { 
  LSS_STATE_FAULT = 0,
  LSS_STATE_LDW = 1,
  LSS_STATE_LKA = 2,
  LSS_STATE_ELK = 3,
  LSS_STATE_MONITOR = 4,
  LSS_STATE_BLINDSPOT = 5,
  LSS_STATE_ABORT = 6,
  LSS_STATE_OFF = 7
 } canutil_DAS_lssState_vals;

#define CANUTIL_GET_VALUE_DAS_sideCollisionAvoid(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  NONE = 0,
  AVOID_LEFT = 1,
  AVOID_RIGHT = 2,
  SNA = 3
 } canutil_DAS_sideCollisionAvoid_vals;

#define CANUTIL_GET_VALUE_DAS_sideCollisionWarning(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  NONE = 0,
  WARN_LEFT = 1,
  WARN_RIGHT = 2,
  WARN_LEFT_RIGHT = 3
 } canutil_DAS_sideCollisionWarning_vals;

#define CANUTIL_GET_VALUE_DAS_sideCollisionInhibit(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)

typedef enum { 
  NO_INHIBIT = 0,
  INHIBIT = 1
 } canutil_DAS_sideCollisionInhibit_vals;

#define CANUTIL_GET_VALUE_DAS_laneDepartureWarning(d) ((*( (uint64_t *) d ) & 0x38000000) >> 27)

typedef enum { 
  NONE = 0,
  LEFT_WARNING = 1,
  RIGHT_WARNING = 2,
  LEFT_WARNING_SEVERE = 3,
  RIGHT_WARNING_SEVERE = 4,
  SNA = 5
 } canutil_DAS_laneDepartureWarning_vals;

#define CANUTIL_GET_VALUE_DAS_fleetSpeedState(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  FLEETSPEED_UNAVAILABLE = 0,
  FLEETSPEED_AVAILABLE = 1,
  FLEETSPEED_ACTIVE = 2,
  FLEETSPEED_HOLD = 3
 } canutil_DAS_fleetSpeedState_vals;

#define CANUTIL_GET_VALUE_DAS_autopilotHandsOnState(d) ((*( (uint64_t *) d ) & 0x3c00000) >> 22)

typedef enum { 
  LC_HANDS_ON_NOT_REQD = 0,
  LC_HANDS_ON_REQD_DETECTED = 1,
  LC_HANDS_ON_REQD_NOT_DETECTED = 2,
  LC_HANDS_ON_REQD_VISUAL = 3,
  LC_HANDS_ON_REQD_CHIME_1 = 4,
  LC_HANDS_ON_REQD_CHIME_2 = 5,
  LC_HANDS_ON_REQD_SLOWING = 6,
  LC_HANDS_ON_REQD_STRUCK_OUT = 7,
  LC_HANDS_ON_SUSPENDED = 8,
  LC_HANDS_ON_REQD_ESCALATED_CHIME_1 = 9,
  LC_HANDS_ON_REQD_ESCALATED_CHIME_2 = 10,
  LC_HANDS_ON_SNA = 15
 } canutil_DAS_autopilotHandsOnState_vals;

#define CANUTIL_GET_VALUE_DAS_autoLaneChangeState(d) ((*( (uint64_t *) d ) & 0x7c0000) >> 18)

typedef enum { 
  ALC_UNAVAILABLE_DISABLED = 0,
  ALC_UNAVAILABLE_NO_LANES = 1,
  ALC_UNAVAILABLE_SONICS_INVALID = 2,
  ALC_UNAVAILABLE_TP_FOLLOW = 3,
  ALC_UNAVAILABLE_EXITING_HIGHWAY = 4,
  ALC_UNAVAILABLE_VEHICLE_SPEED = 5,
  ALC_AVAILABLE_ONLY_L = 6,
  ALC_AVAILABLE_ONLY_R = 7,
  ALC_AVAILABLE_BOTH = 8,
  ALC_IN_PROGRESS_L = 9,
  ALC_IN_PROGRESS_R = 10,
  ALC_WAITING_FOR_SIDE_OBST_TO_PASS_L = 11,
  ALC_WAITING_FOR_SIDE_OBST_TO_PASS_R = 12,
  ALC_WAITING_FOR_FWD_OBST_TO_PASS_L = 13,
  ALC_WAITING_FOR_FWD_OBST_TO_PASS_R = 14,
  ALC_ABORT_SIDE_OBSTACLE_PRESENT_L = 15,
  ALC_ABORT_SIDE_OBSTACLE_PRESENT_R = 16,
  ALC_ABORT_POOR_VIEW_RANGE = 17,
  ALC_ABORT_LC_HEALTH_BAD = 18,
  ALC_ABORT_BLINKER_TURNED_OFF = 19,
  ALC_ABORT_OTHER_REASON = 20,
  ALC_UNAVAILABLE_SOLID_LANE_LINE = 21,
  ALC_BLOCKED_VEH_TTC_L = 22,
  ALC_BLOCKED_VEH_TTC_AND_USS_L = 23,
  ALC_BLOCKED_VEH_TTC_R = 24,
  ALC_BLOCKED_VEH_TTC_AND_USS_R = 25,
  ALC_BLOCKED_LANE_TYPE_L = 26,
  ALC_BLOCKED_LANE_TYPE_R = 27,
  ALC_WAITING_HANDS_ON = 28,
  ALC_ABORT_TIMEOUT = 29,
  ALC_ABORT_MISSION_PLAN_INVALID = 30,
  ALC_SNA = 31
 } canutil_DAS_autoLaneChangeState_vals;

#define CANUTIL_GET_VALUE_DAS_summonAvailable(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_DAS_statusCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_DAS_statusChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID39DIBST_status 0x39d

#define CANUTIL_GET_VALUE_IBST_statusChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_IBST_statusCounter(d) ((*( (uint64_t *) d ) & 0xf00000000) >> 32)
#define CANUTIL_GET_VALUE_IBST_iBoosterStatus(d) ((*( (uint64_t *) d ) & 0x70000000) >> 28)

typedef enum { 
  IBOOSTER_OFF = 0,
  IBOOSTER_INIT = 1,
  IBOOSTER_FAILURE = 2,
  IBOOSTER_DIAGNOSTIC = 3,
  IBOOSTER_ACTIVE_GOOD_CHECK = 4,
  IBOOSTER_READY = 5,
  IBOOSTER_ACTUATION = 6
 } canutil_IBST_iBoosterStatus_vals;

#define CANUTIL_GET_VALUE_IBST_driverBrakeApply(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  NOT_INIT_OR_OFF = 0,
  BRAKES_NOT_APPLIED = 1,
  DRIVER_APPLYING_BRAKES = 2,
  FAULT = 3
 } canutil_IBST_driverBrakeApply_vals;

#define CANUTIL_GET_VALUE_IBST_internalState(d) ((*( (uint64_t *) d ) & 0x1c00000) >> 22)

typedef enum { 
  NO_MODE_ACTIVE = 0,
  PRE_DRIVE_CHECK = 1,
  LOCAL_BRAKE_REQUEST = 2,
  EXTERNAL_BRAKE_REQUEST = 3,
  DIAGNOSTIC = 4,
  TRANSITION_TO_IDLE = 5,
  POST_DRIVE_CHECK = 6
 } canutil_IBST_internalState_vals;

#define CANUTIL_GET_VALUE_IBST_sInputRodDriver(d) ((*( (uint64_t *) d ) & 0x7ff80000) >> 19)
#define CANUTIL_ID3A1VCFRONT_vehicleStatus 0x3a1

#define CANUTIL_GET_VALUE_VCFRONT_bmsHvChargeEnable(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_VCFRONT_preconditionRequest(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_VCFRONT_APGlassHeaterState(d) ((*( (uint64_t *) d ) & 0xe) >> 1)

typedef enum { 
  HEATER_STATE_SNA = 0,
  HEATER_STATE_ON = 1,
  HEATER_STATE_OFF = 2,
  HEATER_STATE_OFF_UNAVAILABLE = 3,
  HEATER_STATE_FAULT = 4
 } canutil_VCFRONT_APGlassHeaterState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_thermalSystemType(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)

typedef enum { 
  LEGACY_THERMAL_SYSTEM = 0,
  HEAT_PUMP_THERMAL_SYSTEM = 1
 } canutil_VCFRONT_thermalSystemType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_standbySupplySupported(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_VCFRONT_driverPresent(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_VCFRONT_passengerPresent(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_accPlusAvailable(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCFRONT_diPowerOnState(d) ((*( (uint64_t *) d ) & 0x1c0000000000000) >> 54)

typedef enum { 
  DI_POWERED_OFF = 0,
  DI_POWERED_ON_FOR_SUMMON = 1,
  DI_POWERED_ON_FOR_STATIONARY_HEAT = 2,
  DI_POWERED_ON_FOR_DRIVE = 3,
  DI_POWER_GOING_DOWN = 4
 } canutil_VCFRONT_diPowerOnState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_driverIsLeavingAnySpeed(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCFRONT_12vStatusForDrive(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  NOT_READY_FOR_DRIVE_12V = 0,
  READY_FOR_DRIVE_12V = 1,
  EXIT_DRIVE_REQUESTED_12V = 2
 } canutil_VCFRONT_12vStatusForDrive_vals;

#define CANUTIL_GET_VALUE_VCFRONT_pcs12vVoltageTarget(d) ((*( (uint64_t *) d ) & 0x7ff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_batterySupportRequest(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_VCFRONT_driverIsLeaving(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_ota12VSupportRequest(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_VCFRONT_driverBuckleStatus(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)

typedef enum { 
  UNBUCKLED = 0,
  BUCKLED = 1
 } canutil_VCFRONT_driverBuckleStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_driverDoorStatus(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)

typedef enum { 
  DOOR_OPEN = 0,
  DOOR_CLOSED = 1
 } canutil_VCFRONT_driverDoorStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_driverUnbuckled(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  CHIME_NONE = 0,
  CHIME_OCCUPIED_AND_UNBUCKLED = 1,
  CHIME_SNA = 2
 } canutil_VCFRONT_driverUnbuckled_vals;

#define CANUTIL_GET_VALUE_VCFRONT_passengerUnbuckled(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  CHIME_NONE = 0,
  CHIME_OCCUPIED_AND_UNBUCKLED = 1,
  CHIME_SNA = 2
 } canutil_VCFRONT_passengerUnbuckled_vals;

#define CANUTIL_GET_VALUE_VCFRONT_2RowLeftUnbuckled(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  CHIME_NONE = 0,
  CHIME_OCCUPIED_AND_UNBUCKLED = 1,
  CHIME_SNA = 2
 } canutil_VCFRONT_2RowLeftUnbuckled_vals;

#define CANUTIL_GET_VALUE_VCFRONT_2RowCenterUnbuckled(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  CHIME_NONE = 0,
  CHIME_OCCUPIED_AND_UNBUCKLED = 1,
  CHIME_SNA = 2
 } canutil_VCFRONT_2RowCenterUnbuckled_vals;

#define CANUTIL_GET_VALUE_VCFRONT_2RowRightUnbuckled(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  CHIME_NONE = 0,
  CHIME_OCCUPIED_AND_UNBUCKLED = 1,
  CHIME_SNA = 2
 } canutil_VCFRONT_2RowRightUnbuckled_vals;

#define CANUTIL_GET_VALUE_VCFRONT_pcsEFuseVoltage(d) ((*( (uint64_t *) d ) & 0xffc00000) >> 22)

typedef enum { 
  SNA = 1023
 } canutil_VCFRONT_pcsEFuseVoltage_vals;

#define CANUTIL_GET_VALUE_VCFRONT_vehicleStatusCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_VCFRONT_vehicleStatusChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID3D9UI_gpsVehicleSpeed 0x3d9

#define CANUTIL_GET_VALUE_UI_gpsHDOP(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_UI_gpsVehicleHeading(d) ((*( (uint64_t *) d ) & 0xffff00) >> 8)
#define CANUTIL_GET_VALUE_UI_gpsVehicleSpeed(d) ((*( (uint64_t *) d ) & 0xffff0000000000) >> 40)
#define CANUTIL_GET_VALUE_UI_userSpeedOffset(d) ((*( (uint64_t *) d ) & 0x3f000000) >> 24)
#define CANUTIL_GET_VALUE_UI_mapSpeedLimitUnits(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)

typedef enum { 
  MPH = 0,
  KPH = 1
 } canutil_UI_mapSpeedLimitUnits_vals;

#define CANUTIL_GET_VALUE_UI_userSpeedOffsetUnits(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)

typedef enum { 
  MPH = 0,
  KPH = 1
 } canutil_UI_userSpeedOffsetUnits_vals;

#define CANUTIL_GET_VALUE_UI_mppSpeedLimit(d) ((*( (uint64_t *) d ) & 0x1f0000) >> 16)
#define CANUTIL_GET_VALUE_UI_gpsNmeaMIA(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_UI_gpsAntennaDisconnected(d) ((*( (uint64_t *) d ) & 0x400) >> 10)
#define CANUTIL_GET_VALUE_UI_conditionalLimitActive(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_UI_conditionalSpeedLimit(d) ((*( (uint64_t *) d ) & 0x1f00) >> 8)

typedef enum { 
  SNA = 31
 } canutil_UI_conditionalSpeedLimit_vals;

#define CANUTIL_ID3E2VCLEFT_lightStatus 0x3e2

#define CANUTIL_GET_VALUE_VCLEFT_brakeLightStatus(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_brakeLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_tailLightStatus(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_tailLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_turnSignalStatus(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_turnSignalStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_FLMapLightStatus(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_FLMapLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_FRMapLightStatus(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_FRMapLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_RLMapLightStatus(d) ((*( (uint64_t *) d ) & 0xc00000000000) >> 46)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_RLMapLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_RRMapLightStatus(d) ((*( (uint64_t *) d ) & 0x300000000000) >> 44)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_RRMapLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_FLMapLightSwitchPressed(d) ((*( (uint64_t *) d ) & 0x40000000000) >> 42)
#define CANUTIL_GET_VALUE_VCLEFT_FRMapLightSwitchPressed(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)
#define CANUTIL_GET_VALUE_VCLEFT_RLMapLightSwitchPressed(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_VCLEFT_RRMapLightSwitchPressed(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_VCLEFT_leftTurnTrailerLightStatu(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_leftTurnTrailerLightStatu_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rightTrnTrailerLightStatu(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_rightTrnTrailerLightStatu_vals;

#define CANUTIL_GET_VALUE_VCLEFT_brakeTrailerLightStatus(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_brakeTrailerLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_tailTrailerLightStatus(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_tailTrailerLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_fogTrailerLightStatus(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_fogTrailerLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontRideHeight(d) ((*( (uint64_t *) d ) & 0xff0000000) >> 28)

typedef enum { 
  SNA = 128
 } canutil_VCLEFT_frontRideHeight_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearRideHeight(d) ((*( (uint64_t *) d ) & 0xff00000) >> 20)

typedef enum { 
  SNA = 128
 } canutil_VCLEFT_rearRideHeight_vals;

#define CANUTIL_GET_VALUE_VCLEFT_dynamicBrakeLightStatus(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  DYNAMIC_BRAKE_LIGHT_OFF = 0,
  DYNAMIC_BRAKE_LIGHT_ACTIVE_LOW = 1,
  DYNAMIC_BRAKE_LIGHT_ACTIVE_HIGH = 2
 } canutil_VCLEFT_dynamicBrakeLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_trailerDetected(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  TRAILER_LIGHT_DETECTION_SNA = 0,
  TRAILER_LIGHT_DETECTION_FAULT = 1,
  TRAILER_LIGHT_DETECTION_DETECTED = 2,
  TRAILER_LIGHT_DETECTION_NOT_DETECTED = 3
 } canutil_VCLEFT_trailerDetected_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rideHeightSensorFault(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_VCLEFT_reverseTrailerLightStatus(d) ((*( (uint64_t *) d ) & 0x180) >> 7)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCLEFT_reverseTrailerLightStatus_vals;

#define CANUTIL_GET_VALUE_VCLEFT_tailLightOutageStatus(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_ID3E9DAS_bodyControls 0x3e9

#define CANUTIL_GET_VALUE_DAS_headlightRequest(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  DAS_HEADLIGHT_REQUEST_OFF = 0,
  DAS_HEADLIGHT_REQUEST_ON = 1,
  DAS_HEADLIGHT_REQUEST_INVALID = 3
 } canutil_DAS_headlightRequest_vals;

#define CANUTIL_GET_VALUE_DAS_hazardLightRequest(d) ((*( (uint64_t *) d ) & 0xc000000000000000) >> 62)

typedef enum { 
  DAS_REQUEST_HAZARDS_OFF = 0,
  DAS_REQUEST_HAZARDS_ON = 1,
  DAS_REQUEST_HAZARDS_UNUSED = 2,
  DAS_REQUEST_HAZARDS_SNA = 3
 } canutil_DAS_hazardLightRequest_vals;

#define CANUTIL_GET_VALUE_DAS_wiperSpeed(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)

typedef enum { 
  DAS_WIPER_SPEED_OFF = 0,
  DAS_WIPER_SPEED_1 = 1,
  DAS_WIPER_SPEED_2 = 2,
  DAS_WIPER_SPEED_3 = 3,
  DAS_WIPER_SPEED_4 = 4,
  DAS_WIPER_SPEED_5 = 5,
  DAS_WIPER_SPEED_6 = 6,
  DAS_WIPER_SPEED_7 = 7,
  DAS_WIPER_SPEED_8 = 8,
  DAS_WIPER_SPEED_9 = 9,
  DAS_WIPER_SPEED_10 = 10,
  DAS_WIPER_SPEED_11 = 11,
  DAS_WIPER_SPEED_12 = 12,
  DAS_WIPER_SPEED_13 = 13,
  DAS_WIPER_SPEED_14 = 14,
  DAS_WIPER_SPEED_INVALID = 15
 } canutil_DAS_wiperSpeed_vals;

#define CANUTIL_GET_VALUE_DAS_turnIndicatorRequest(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  DAS_TURN_INDICATOR_NONE = 0,
  DAS_TURN_INDICATOR_LEFT = 1,
  DAS_TURN_INDICATOR_RIGHT = 2,
  DAS_TURN_INDICATOR_CANCEL = 3,
  DAS_TURN_INDICATOR_DEFER = 4
 } canutil_DAS_turnIndicatorRequest_vals;

#define CANUTIL_GET_VALUE_DAS_highLowBeamDecision(d) ((*( (uint64_t *) d ) & 0x60000000000000) >> 53)

typedef enum { 
  DAS_HIGH_BEAM_UNDECIDED = 0,
  DAS_HIGH_BEAM_OFF = 1,
  DAS_HIGH_BEAM_ON = 2,
  DAS_HIGH_BEAM_SNA = 3
 } canutil_DAS_highLowBeamDecision_vals;

#define CANUTIL_GET_VALUE_DAS_heaterRequest(d) ((*( (uint64_t *) d ) & 0x18000000000000) >> 51)

typedef enum { 
  DAS_HEATER_SNA = 0,
  DAS_HEATER_OFF = 1,
  DAS_HEATER_ON = 2
 } canutil_DAS_heaterRequest_vals;

#define CANUTIL_GET_VALUE_DAS_highLowBeamOffReason(d) ((*( (uint64_t *) d ) & 0xe000000000000) >> 49)

typedef enum { 
  HIGH_BEAM_ON = 0,
  HIGH_BEAM_OFF_REASON_MOVING_VISION_TARGET = 1,
  HIGH_BEAM_OFF_REASON_MOVING_RADAR_TARGET = 2,
  HIGH_BEAM_OFF_REASON_AMBIENT_LIGHT = 3,
  HIGH_BEAM_OFF_REASON_HEAD_LIGHT = 4,
  HIGH_BEAM_OFF_REASON_SNA = 5
 } canutil_DAS_highLowBeamOffReason_vals;

#define CANUTIL_GET_VALUE_DAS_turnIndicatorRequestReason(d) ((*( (uint64_t *) d ) & 0x3c00000000000) >> 46)

typedef enum { 
  DAS_NONE = 0,
  DAS_ACTIVE_NAV_LANE_CHANGE = 1,
  DAS_ACTIVE_SPEED_LANE_CHANGE = 2,
  DAS_ACTIVE_FORK = 3,
  DAS_CANCEL_LANE_CHANGE = 4,
  DAS_CANCEL_FORK = 5,
  DAS_ACTIVE_MERGE = 6,
  DAS_CANCEL_MERGE = 7,
  DAS_ACTIVE_COMMANDED_LANE_CHANGE = 8,
  DAS_ACTIVE_INTERSECTION = 9,
  DAS_CANCEL_INTERSECTION = 10,
  DAS_ACTIVE_SUMMMON = 11,
  DAS_CANCEL_SUMMMON = 12
 } canutil_DAS_turnIndicatorRequestReason_vals;

#define CANUTIL_GET_VALUE_DAS_dynamicBrakeLightRequest(d) ((*( (uint64_t *) d ) & 0x40000000000) >> 42)
#define CANUTIL_GET_VALUE_DAS_radarHeaterRequest(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)
#define CANUTIL_GET_VALUE_DAS_ahlbOverride(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_DAS_mirrorFoldRequest(d) ((*( (uint64_t *) d ) & 0x18000000000) >> 39)

typedef enum { 
  NONE = 0,
  FOLD = 1,
  UNFOLD = 2,
  SNA = 3
 } canutil_DAS_mirrorFoldRequest_vals;

#define CANUTIL_GET_VALUE_DAS_bodyControlsCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_DAS_bodyControlsChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID3F3UI_odo 0x3f3

#define CANUTIL_GET_VALUE_UI_odometer(d) ((*( (uint64_t *) d ) & 0xffffff000000) >> 24)

typedef enum { 
  SNA = 16777215
 } canutil_UI_odometer_vals;

#define CANUTIL_ID3F5VCFRONT_lighting 0x3f5

#define CANUTIL_GET_VALUE_VCFRONT_indicatorLeftRequest(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  TURN_SIGNAL_OFF = 0,
  TURN_SIGNAL_ACTIVE_LOW = 1,
  TURN_SIGNAL_ACTIVE_HIGH = 2
 } canutil_VCFRONT_indicatorLeftRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_indicatorRightRequest(d) ((*( (uint64_t *) d ) & 0xc000000000000000) >> 62)

typedef enum { 
  TURN_SIGNAL_OFF = 0,
  TURN_SIGNAL_ACTIVE_LOW = 1,
  TURN_SIGNAL_ACTIVE_HIGH = 2
 } canutil_VCFRONT_indicatorRightRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hazardLightRequest(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)

typedef enum { 
  HAZARD_REQUEST_NONE = 0,
  HAZARD_REQUEST_BUTTON = 1,
  HAZARD_REQUEST_LOCK = 2,
  HAZARD_REQUEST_UNLOCK = 3,
  HAZARD_REQUEST_MISLOCK = 4,
  HAZARD_REQUEST_CRASH = 5,
  HAZARD_REQUEST_CAR_ALARM = 6,
  HAZARD_REQUEST_DAS = 7,
  HAZARD_REQUEST_UDS = 8
 } canutil_VCFRONT_hazardLightRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ambientLightingBrightnes(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_ambientLightingBrightnes_vals;

#define CANUTIL_GET_VALUE_VCFRONT_switchLightingBrightness(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_switchLightingBrightness_vals;

#define CANUTIL_GET_VALUE_VCFRONT_courtesyLightingRequest(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_approachLightingRequest(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_VCFRONT_seeYouHomeLightingReq(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_VCFRONT_hazardSwitchBacklight(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_VCFRONT_lowBeamLeftStatus(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_lowBeamLeftStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_lowBeamRightStatus(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_lowBeamRightStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_highBeamLeftStatus(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_highBeamLeftStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_highBeamRightStatus(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_highBeamRightStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_DRLLeftStatus(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_DRLLeftStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_DRLRightStatus(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_DRLRightStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_fogLeftStatus(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_fogLeftStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_fogRightStatus(d) ((*( (uint64_t *) d ) & 0xc00000) >> 22)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_fogRightStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_sideMarkersStatus(d) ((*( (uint64_t *) d ) & 0x300000) >> 20)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_sideMarkersStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_sideRepeaterLeftStatus(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_sideRepeaterLeftStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_sideRepeaterRightStatus(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_sideRepeaterRightStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_turnSignalLeftStatus(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_turnSignalLeftStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_turnSignalRightStatus(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_turnSignalRightStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_parkLeftStatus(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_parkLeftStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_parkRightStatus(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCFRONT_parkRightStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_highBeamSwitchActive(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_GET_VALUE_VCFRONT_simLatchingStalk(d) ((*( (uint64_t *) d ) & 0x60) >> 5)

typedef enum { 
  SIMULATED_LATCHING_STALK_IDLE = 0,
  SIMULATED_LATCHING_STALK_LEFT = 1,
  SIMULATED_LATCHING_STALK_RIGHT = 2,
  SIMULATED_LATCHING_STALK_SNA = 3
 } canutil_VCFRONT_simLatchingStalk_vals;

#define CANUTIL_GET_VALUE_VCFRONT_lowBeamsOnForDRL(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCFRONT_lowBeamsCalibrated(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_ID3F8UI_driverAssistControl 0x3f8

#define CANUTIL_GET_VALUE_UI_autopilotControlRequest(d) ((*( (uint64_t *) d ) & 0x2) >> 1)

typedef enum { 
  LEGACY_LAT_CTRL = 0,
  NEXT_GEN_CTRL = 1
 } canutil_UI_autopilotControlRequest_vals;

#define CANUTIL_GET_VALUE_UI_ulcStalkConfirm(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_UI_summonHeartbeat(d) ((*( (uint64_t *) d ) & 0xc000000000000000) >> 62)
#define CANUTIL_GET_VALUE_UI_curvSpeedAdaptDisable(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)

typedef enum { 
  CSA_ON = 0,
  CSA_OFF = 1
 } canutil_UI_curvSpeedAdaptDisable_vals;

#define CANUTIL_GET_VALUE_UI_dasDeveloper(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_UI_enableVinAssociation(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_UI_lssLkaEnabled(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)

typedef enum { 
  LKA_OFF = 0,
  LKA_ON = 1
 } canutil_UI_lssLkaEnabled_vals;

#define CANUTIL_GET_VALUE_UI_lssLdwEnabled(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)

typedef enum { 
  LDW_OFF = 0,
  LDW_ON = 1
 } canutil_UI_lssLdwEnabled_vals;

#define CANUTIL_GET_VALUE_UI_coastToCoast(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_UI_autoSummonEnable(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_UI_exceptionListEnable(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)

typedef enum { 
  EXCEPTION_LIST_OFF = 0,
  EXCEPTION_LIST_ON = 1
 } canutil_UI_exceptionListEnable_vals;

#define CANUTIL_GET_VALUE_UI_roadCheckDisable(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)

typedef enum { 
  RC_ON = 0,
  RC_OFF = 1
 } canutil_UI_roadCheckDisable_vals;

#define CANUTIL_GET_VALUE_UI_driveOnMapsEnable(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)

typedef enum { 
  DOM_OFF = 0,
  DOM_ON = 1
 } canutil_UI_driveOnMapsEnable_vals;

#define CANUTIL_GET_VALUE_UI_handsOnRequirementDisable(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)

typedef enum { 
  HANDS_ON_REQ_ON = 0,
  HANDS_ON_REQ_OFF = 1
 } canutil_UI_handsOnRequirementDisable_vals;

#define CANUTIL_GET_VALUE_UI_ulcOffHighway(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_UI_fuseLanesDisable(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)

typedef enum { 
  FUSE_LANES_ON = 0,
  FUSE_LANES_OFF = 1
 } canutil_UI_fuseLanesDisable_vals;

#define CANUTIL_GET_VALUE_UI_fuseHPPDisable(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)

typedef enum { 
  FUSE_HPP_ON = 0,
  FUSE_HPP_OFF = 1
 } canutil_UI_fuseHPPDisable_vals;

#define CANUTIL_GET_VALUE_UI_fuseVehiclesDisable(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)

typedef enum { 
  FUSE_VEH_ON = 0,
  FUSE_VEH_OFF = 1
 } canutil_UI_fuseVehiclesDisable_vals;

#define CANUTIL_GET_VALUE_UI_visionSpeedType(d) ((*( (uint64_t *) d ) & 0x300000000000) >> 44)

typedef enum { 
  VISION_SPEED_DISABLED = 0,
  VISION_SPEED_ONE_SECOND = 1,
  VISION_SPEED_TWO_SECOND = 2,
  VISION_SPEED_OPTIMIZED = 3
 } canutil_UI_visionSpeedType_vals;

#define CANUTIL_GET_VALUE_UI_curvatureDatabaseOnly(d) ((*( (uint64_t *) d ) & 0x40000000000) >> 42)

typedef enum { 
  OFF = 0,
  ON = 1
 } canutil_UI_curvatureDatabaseOnly_vals;

#define CANUTIL_GET_VALUE_UI_lssElkEnabled(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)

typedef enum { 
  ELK_OFF = 0,
  ELK_ON = 1
 } canutil_UI_lssElkEnabled_vals;

#define CANUTIL_GET_VALUE_UI_summonExitType(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  STRAIGHT = 0,
  TURN_RIGHT = 1,
  TURN_LEFT = 2,
  SNA = 3
 } canutil_UI_summonExitType_vals;

#define CANUTIL_GET_VALUE_UI_summonEntryType(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  STRAIGHT = 0,
  TURN_RIGHT = 1,
  TURN_LEFT = 2,
  SNA = 3
 } canutil_UI_summonEntryType_vals;

#define CANUTIL_GET_VALUE_UI_selfParkRequest(d) ((*( (uint64_t *) d ) & 0xf000000000) >> 36)

typedef enum { 
  NONE = 0,
  SELF_PARK_FORWARD = 1,
  SELF_PARK_REVERSE = 2,
  ABORT = 3,
  PRIME = 4,
  PAUSE = 5,
  RESUME = 6,
  AUTO_SUMMON_FORWARD = 7,
  AUTO_SUMMON_REVERSE = 8,
  AUTO_SUMMON_CANCEL = 9,
  AUTO_SUMMON_PRIMED = 10,
  SMART_SUMMON = 11,
  SMART_SUMMON_NO_OP = 12,
  SNA = 15
 } canutil_UI_selfParkRequest_vals;

#define CANUTIL_GET_VALUE_UI_summonReverseDist(d) ((*( (uint64_t *) d ) & 0x3f00000000) >> 32)

typedef enum { 
  SNA = 63
 } canutil_UI_summonReverseDist_vals;

#define CANUTIL_GET_VALUE_UI_undertakeAssistEnable(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_UI_adaptiveSetSpeedEnable(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_UI_drivingSide(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  DRIVING_SIDE_LEFT = 0,
  DRIVING_SIDE_RIGHT = 1,
  DRIVING_SIDE_UNKNOWN = 2
 } canutil_UI_drivingSide_vals;

#define CANUTIL_GET_VALUE_UI_enableClipTelemetry(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_UI_enableTripTelemetry(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_UI_enableRoadSegmentTelemetry(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_UI_accFollowDistanceSetting(d) ((*( (uint64_t *) d ) & 0x380000) >> 19)

typedef enum { 
  DISTANCE_SETTING_1 = 0,
  DISTANCE_SETTING_2 = 1,
  DISTANCE_SETTING_3 = 2,
  DISTANCE_SETTING_4 = 3,
  DISTANCE_SETTING_5 = 4,
  DISTANCE_SETTING_6 = 5,
  DISTANCE_SETTING_7 = 6,
  DISTANCE_SETTING_SNA = 7
 } canutil_UI_accFollowDistanceSetting_vals;

#define CANUTIL_GET_VALUE_UI_hasDriveOnNav(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_UI_followNavRouteEnable(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)

typedef enum { 
  NAV_ROUTE_OFF = 0,
  NAV_ROUTE_ON = 1
 } canutil_UI_followNavRouteEnable_vals;

#define CANUTIL_GET_VALUE_UI_ulcSpeedConfig(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  SPEED_BASED_ULC_DISABLED = 0,
  SPEED_BASED_ULC_MILD = 1,
  SPEED_BASED_ULC_AVERAGE = 2,
  SPEED_BASED_ULC_MAD_MAX = 3
 } canutil_UI_ulcSpeedConfig_vals;

#define CANUTIL_GET_VALUE_UI_ulcBlindSpotConfig(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  STANDARD = 0,
  AGGRESSIVE = 1,
  MAD_MAX = 2
 } canutil_UI_ulcBlindSpotConfig_vals;

#define CANUTIL_GET_VALUE_UI_alcOffHighwayEnable(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_UI_validationLoop(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_UI_smartSummonType(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  PIN_DROP = 0,
  FIND_ME = 1,
  SMART_AUTOPARK = 2
 } canutil_UI_smartSummonType_vals;

#define CANUTIL_GET_VALUE_UI_enableVisionOnlyStops(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_UI_source3D(d) ((*( (uint64_t *) d ) & 0x18) >> 3)

typedef enum { 
  Z_FROM_MAP = 0,
  Z_FROM_PATH_PREDICTION = 1,
  XYZ_PREDICTION = 2
 } canutil_UI_source3D_vals;

#define CANUTIL_GET_VALUE_UI_enableBrakeLightPulse(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID3FDUI_autopilotControl 0x3fd

#define CANUTIL_GET_VALUE_UI_autopilotControlIndex(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  AUTOPILOT_CONTROL_0 = 0,
  AUTOPILOT_CONTROL_1 = 1,
  AUTOPILOT_CONTROL_2 = 2,
  AUTOPILOT_CONTROL_3 = 3,
  AUTOPILOT_CONTROL_4 = 4,
  AUTOPILOT_CONTROL_5 = 5,
  AUTOPILOT_CONTROL_6 = 6,
  AUTOPILOT_CONTROL_7 = 7
 } canutil_UI_autopilotControlIndex_vals;

#define CANUTIL_GET_VALUE_UI_hovEnabled(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)

typedef enum { 
  HOV_OFF = 0,
  HOV_ON = 1
 } canutil_UI_hovEnabled_vals;

#define CANUTIL_GET_VALUE_UI_donDisableAutoWiperDuration(d) ((*( (uint64_t *) d ) & 0x7000000000000000) >> 60)

typedef enum { 
  DON_DISABLE_AUTO_WIPER_DURATION_DEFAULT = 0,
  DON_DISABLE_AUTO_WIPER_DURATION_5_S = 1,
  DON_DISABLE_AUTO_WIPER_DURATION_15_S = 2,
  DON_DISABLE_AUTO_WIPER_DURATION_30_S = 3,
  DON_DISABLE_AUTO_WIPER_DURATION_60_S = 4,
  DON_DISABLE_AUTO_WIPER_DURATION_120_S = 5,
  DON_DISABLE_AUTO_WIPER_DURATION_OFF = 6
 } canutil_UI_donDisableAutoWiperDuration_vals;

#define CANUTIL_GET_VALUE_UI_donDisableOnAutoWiperSpeed(d) ((*( (uint64_t *) d ) & 0x1e00000000000000) >> 57)

typedef enum { 
  DAS_WIPER_SPEED_OFF = 0,
  DAS_WIPER_SPEED_1 = 1,
  DAS_WIPER_SPEED_2 = 2,
  DAS_WIPER_SPEED_3 = 3,
  DAS_WIPER_SPEED_4 = 4,
  DAS_WIPER_SPEED_5 = 5,
  DAS_WIPER_SPEED_6 = 6,
  DAS_WIPER_SPEED_7 = 7,
  DAS_WIPER_SPEED_8 = 8,
  DAS_WIPER_SPEED_9 = 9,
  DAS_WIPER_SPEED_10 = 10,
  DAS_WIPER_SPEED_11 = 11,
  DAS_WIPER_SPEED_12 = 12,
  DAS_WIPER_SPEED_13 = 13,
  DAS_WIPER_SPEED_14 = 14,
  DAS_WIPER_SPEED_INVALID = 15
 } canutil_UI_donDisableOnAutoWiperSpeed_vals;

#define CANUTIL_GET_VALUE_UI_blindspotMinSpeed(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  BLINDSPOT_MIN_SPEED_DEFAULT = 0,
  BLINDSPOT_MIN_SPEED_5_KPH = 1,
  BLINDSPOT_MIN_SPEED_10_KPH = 2,
  BLINDSPOT_MIN_SPEED_15_KPH = 3,
  BLINDSPOT_MIN_SPEED_20_KPH = 4,
  BLINDSPOT_MIN_SPEED_25_KPH = 5,
  BLINDSPOT_MIN_SPEED_30_KPH = 6,
  BLINDSPOT_MIN_SPEED_35_KPH = 7,
  BLINDSPOT_MIN_SPEED_40_KPH = 8,
  BLINDSPOT_MIN_SPEED_45_KPH = 9,
  BLINDSPOT_MIN_SPEED_OFF = 10
 } canutil_UI_blindspotMinSpeed_vals;

#define CANUTIL_GET_VALUE_UI_blindspotDistance(d) ((*( (uint64_t *) d ) & 0xe000000000000) >> 49)

typedef enum { 
  BLINDSPOT_DISTANCE_DEFAULT = 0,
  BLINDSPOT_DISTANCE_0P5_M = 1,
  BLINDSPOT_DISTANCE_1_M = 2,
  BLINDSPOT_DISTANCE_2_M = 3,
  BLINDSPOT_DISTANCE_4_M = 4,
  BLINDSPOT_DISTANCE_OFF = 5
 } canutil_UI_blindspotDistance_vals;

#define CANUTIL_GET_VALUE_UI_driverMonitorConfirmation(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)
#define CANUTIL_GET_VALUE_UI_blindspotTTC(d) ((*( (uint64_t *) d ) & 0x1c00000000000) >> 46)

typedef enum { 
  BLINDSPOT_TTC_DEFAULT = 0,
  BLINDSPOT_TTC_0P5_S = 1,
  BLINDSPOT_TTC_1_S = 2,
  BLINDSPOT_TTC_2_S = 3,
  BLINDSPOT_TTC_4_S = 4,
  BLINDSPOT_TTC_3_S = 5,
  BLINDSPOT_TTC_5_S = 6,
  BLINDSPOT_TTC_OFF = 7
 } canutil_UI_blindspotTTC_vals;

#define CANUTIL_GET_VALUE_UI_applyEceR79(d) ((*( (uint64_t *) d ) & 0x200000000000) >> 45)
#define CANUTIL_GET_VALUE_UI_enableMapStops(d) ((*( (uint64_t *) d ) & 0x100000000000) >> 44)
#define CANUTIL_GET_VALUE_UI_donStopEndOfRampBuffer(d) ((*( (uint64_t *) d ) & 0x380000000000) >> 43)

typedef enum { 
  DON_STOP_END_OF_RAMP_BUFFER_DEFAULT = 0,
  DON_STOP_END_OF_RAMP_BUFFER_15_M = 1,
  DON_STOP_END_OF_RAMP_BUFFER_30_M = 2,
  DON_STOP_END_OF_RAMP_BUFFER_45_M = 3,
  DON_STOP_END_OF_RAMP_BUFFER_OFF = 4
 } canutil_UI_donStopEndOfRampBuffer_vals;

#define CANUTIL_GET_VALUE_UI_disableMain(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)
#define CANUTIL_GET_VALUE_UI_disableNarrow(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_UI_donDisableCutin(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)

typedef enum { 
  DON_DISABLE_CUTIN_OFF = 0,
  DON_DISABLE_CUTIN_ON = 1
 } canutil_UI_donDisableCutin_vals;

#define CANUTIL_GET_VALUE_UI_disableFisheye(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_UI_donMinGoreWidthForAbortMap(d) ((*( (uint64_t *) d ) & 0x78000000000) >> 39)

typedef enum { 
  DON_MIN_GORE_WIDTH_FOR_ABORT_DEFAULT = 0,
  DON_MIN_GORE_WIDTH_FOR_ABORT_0_M = 1,
  DON_MIN_GORE_WIDTH_FOR_ABORT_0P5_M = 2,
  DON_MIN_GORE_WIDTH_FOR_ABORT_1_M = 3,
  DON_MIN_GORE_WIDTH_FOR_ABORT_1P5_M = 4,
  DON_MIN_GORE_WIDTH_FOR_ABORT_2_M = 5,
  DON_MIN_GORE_WIDTH_FOR_ABORT_2P5_M = 6,
  DON_MIN_GORE_WIDTH_FOR_ABORT_3_M = 7,
  DON_MIN_GORE_WIDTH_FOR_ABORT_3P5_M = 8,
  DON_MIN_GORE_WIDTH_FOR_ABORT_4_M = 9,
  DON_MIN_GORE_WIDTH_FOR_ABORT_4P5_M = 10,
  DON_MIN_GORE_WIDTH_FOR_ABORT_5_M = 11
 } canutil_UI_donMinGoreWidthForAbortMap_vals;

#define CANUTIL_GET_VALUE_UI_disableLeftPillar(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_UI_disableRightPillar(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_UI_disableLeftRepeater(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_UI_disableRightRepeater(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_UI_donAlcProgGoreAbortThres(d) ((*( (uint64_t *) d ) & 0x7800000000) >> 35)

typedef enum { 
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_DEFAULT = 0,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P00 = 1,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P05 = 2,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P10 = 3,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P15 = 4,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P20 = 5,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P25 = 6,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P30 = 7,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P35 = 8,
  DON_ALC_PROGRESS_GORE_ABORT_THRESHOLD_0P40 = 9
 } canutil_UI_donAlcProgGoreAbortThres_vals;

#define CANUTIL_GET_VALUE_UI_disableBackup(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_UI_disableRadar(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_UI_noStalkConfirmAlertHaptic(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_UI_donMinGoreWidthForAbortNotMap(d) ((*( (uint64_t *) d ) & 0x780000000) >> 31)

typedef enum { 
  DON_MIN_GORE_WIDTH_FOR_ABORT_DEFAULT = 0,
  DON_MIN_GORE_WIDTH_FOR_ABORT_0_M = 1,
  DON_MIN_GORE_WIDTH_FOR_ABORT_0P5_M = 2,
  DON_MIN_GORE_WIDTH_FOR_ABORT_1_M = 3,
  DON_MIN_GORE_WIDTH_FOR_ABORT_1P5_M = 4,
  DON_MIN_GORE_WIDTH_FOR_ABORT_2_M = 5,
  DON_MIN_GORE_WIDTH_FOR_ABORT_2P5_M = 6,
  DON_MIN_GORE_WIDTH_FOR_ABORT_3_M = 7,
  DON_MIN_GORE_WIDTH_FOR_ABORT_3P5_M = 8,
  DON_MIN_GORE_WIDTH_FOR_ABORT_4_M = 9,
  DON_MIN_GORE_WIDTH_FOR_ABORT_4P5_M = 10,
  DON_MIN_GORE_WIDTH_FOR_ABORT_5_M = 11
 } canutil_UI_donMinGoreWidthForAbortNotMap_vals;

#define CANUTIL_GET_VALUE_UI_ulcSnooze(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_UI_fsdVisualizationEnabled(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_UI_noStalkConfirmAlertChime(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_UI_fsdStopsControlEnabled(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_UI_factorySummonEnable(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_UI_apmv3Branch(d) ((*( (uint64_t *) d ) & 0x7000000) >> 24)

typedef enum { 
  LIVE = 0,
  STAGE = 1,
  DEV = 2,
  STAGE2 = 3,
  EAP = 4,
  DEMO = 5
 } canutil_UI_apmv3Branch_vals;

#define CANUTIL_GET_VALUE_UI_enableCabinCamera(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_UI_enableAutopilotStopWarning(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_UI_homelinkNearby(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)

typedef enum { 
  HOMELINK_NOT_NEARBY = 0,
  HOMELINK_NEARBY = 1
 } canutil_UI_homelinkNearby_vals;

#define CANUTIL_GET_VALUE_UI_showLaneGraph(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_UI_showTrackLabels(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_UI_hardCoreSummon(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_UI_enableCabinCameraTelemetry(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_ID267DI_vehicleEstimates 0x267

#define CANUTIL_GET_VALUE_DI_mass(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_DI_tireFitment(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  FITMENT_SQUARE = 0,
  FITMENT_STAGGERED = 1,
  FITMENT_SNA = 3
 } canutil_DI_tireFitment_vals;

#define CANUTIL_GET_VALUE_DI_trailerDetected(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)

typedef enum { 
  TRAILER_NOT_DETECTED = 0,
  TRAILER_DETECTED = 1
 } canutil_DI_trailerDetected_vals;

#define CANUTIL_GET_VALUE_DI_vehicleEstimatesCounter(d) ((*( (uint64_t *) d ) & 0x38000000000000) >> 51)
#define CANUTIL_GET_VALUE_DI_relativeTireTreadDepth(d) ((*( (uint64_t *) d ) & 0x3f000000000000) >> 48)

typedef enum { 
  SNA = 32
 } canutil_DI_relativeTireTreadDepth_vals;

#define CANUTIL_GET_VALUE_DI_massConfidence(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)

typedef enum { 
  MASS_NOT_CONFIDED = 0,
  MASS_CONFIDED = 1
 } canutil_DI_massConfidence_vals;

#define CANUTIL_GET_VALUE_DI_gradeEst(d) ((*( (uint64_t *) d ) & 0x3f80000000) >> 31)
#define CANUTIL_GET_VALUE_DI_vehicleEstimatesChecksum(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DI_gradeEstInternal(d) ((*( (uint64_t *) d ) & 0x7f0000) >> 16)
#define CANUTIL_GET_VALUE_DI_steeringAngleOffset(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID282VCLEFT_hvacBlowerFeedback 0x282

#define CANUTIL_GET_VALUE_VCLEFT_blowerIndex(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  HVAC_FEEDBACK_SIGNALS = 0,
  HVAC_VARS = 1
 } canutil_VCLEFT_blowerIndex_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerEnabled(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerRs(d) ((*( (uint64_t *) d ) & 0x3fc0) >> 6)

typedef enum { 
  SNA = 255
 } canutil_VCLEFT_hvacBlowerRs_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerOutputDuty(d) ((*( (uint64_t *) d ) & 0x7f0) >> 4)

typedef enum { 
  SNA = 127
 } canutil_VCLEFT_hvacBlowerOutputDuty_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerIPhase0(d) ((*( (uint64_t *) d ) & 0x3fc0000000000000) >> 54)

typedef enum { 
  SNA = 255
 } canutil_VCLEFT_hvacBlowerIPhase0_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerRPMTarget(d) ((*( (uint64_t *) d ) & 0xffc0000000000000) >> 54)

typedef enum { 
  SNA = 1023
 } canutil_VCLEFT_hvacBlowerRPMTarget_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerIPhase1(d) ((*( (uint64_t *) d ) & 0x3fc00000000000) >> 46)

typedef enum { 
  SNA = 255
 } canutil_VCLEFT_hvacBlowerIPhase1_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerRPMActual(d) ((*( (uint64_t *) d ) & 0x3ff00000000000) >> 44)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerIPhase2(d) ((*( (uint64_t *) d ) & 0x3fc000000000) >> 38)

typedef enum { 
  SNA = 255
 } canutil_VCLEFT_hvacBlowerIPhase2_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerTorque(d) ((*( (uint64_t *) d ) & 0xffc0000000) >> 30)

typedef enum { 
  SNA = 1023
 } canutil_VCLEFT_hvacBlowerTorque_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlower_IO_CBC_HEAD(d) ((*( (uint64_t *) d ) & 0x3c0000000) >> 30)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlower_IO_CBC_TAIL(d) ((*( (uint64_t *) d ) & 0x3c000000) >> 26)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlower_IO_CBC_TAIL_va(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlower_IO_CBC_Status(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)

typedef enum { 
  IDLE = 0,
  RX = 1
 } canutil_VCLEFT_hvacBlower_IO_CBC_Status_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerFETTemp(d) ((*( (uint64_t *) d ) & 0x7f00000) >> 20)

typedef enum { 
  SNA = 127
 } canutil_VCLEFT_hvacBlowerFETTemp_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlower_IO_CBC_numUart(d) ((*( (uint64_t *) d ) & 0x3fc0000) >> 18)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerITerm(d) ((*( (uint64_t *) d ) & 0xfe000) >> 13)

typedef enum { 
  SNA = 127
 } canutil_VCLEFT_hvacBlowerITerm_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerCBCEstState(d) ((*( (uint64_t *) d ) & 0x3c00) >> 10)

typedef enum { 
  ERROR = 0,
  IDLE = 1,
  ROVERL = 2,
  RS = 3,
  RAMPUP = 4,
  IDRATED = 5,
  RATEDFLUX_OL = 6,
  RATEDFLUX = 7,
  RAMPDOWN = 8,
  LOCKROTOR = 9,
  INDUCTANCE_EST = 10,
  ROTOR_RESISTANCE = 11,
  MOTOR_IDENTIFIED = 12,
  ONLINE = 13,
  COUNT = 14
 } canutil_VCLEFT_hvacBlowerCBCEstState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerCBCCtrlState(d) ((*( (uint64_t *) d ) & 0x1c0) >> 6)

typedef enum { 
  ERROR = 0,
  IDLE = 1,
  OFFLINE = 2,
  ONLINE = 3,
  COUNT = 4
 } canutil_VCLEFT_hvacBlowerCBCCtrlState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerInitd(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerFault(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerLimitFETTemps(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerPowerOn(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerRsOnlineActive(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCLEFT_hvacBlowerSpiError(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_ID2F3UI_hvacRequest 0x2f3

#define CANUTIL_GET_VALUE_UI_hvacReqTempSetpointLeft(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)

typedef enum { 
  LO = 0,
  HI = 26
 } canutil_UI_hvacReqTempSetpointLeft_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqTempSetpointRight(d) ((*( (uint64_t *) d ) & 0x1f00000000) >> 32)

typedef enum { 
  LO = 0,
  HI = 26
 } canutil_UI_hvacReqTempSetpointRight_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqAirDistributionMode(d) ((*( (uint64_t *) d ) & 0x38000000) >> 27)

typedef enum { 
  AUTO = 0,
  MANUAL_FLOOR = 1,
  MANUAL_PANEL = 2,
  MANUAL_PANEL_FLOOR = 3,
  MANUAL_DEFROST = 4,
  MANUAL_DEFROST_FLOOR = 5,
  MANUAL_DEFROST_PANEL = 6,
  MANUAL_DEFROST_PANEL_FLOOR = 7
 } canutil_UI_hvacReqAirDistributionMode_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqBlowerSegment(d) ((*( (uint64_t *) d ) & 0xf000000) >> 24)

typedef enum { 
  OFF = 0,
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
  5 = 5,
  6 = 6,
  7 = 7,
  8 = 8,
  9 = 9,
  10 = 10,
  AUTO = 11
 } canutil_UI_hvacReqBlowerSegment_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqRecirc(d) ((*( (uint64_t *) d ) & 0x300000) >> 20)

typedef enum { 
  AUTO = 0,
  RECIRC = 1,
  FRESH = 2
 } canutil_UI_hvacReqRecirc_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqACDisable(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  AUTO = 0,
  OFF = 1,
  ON = 2
 } canutil_UI_hvacReqACDisable_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqManualDefogState(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  NONE = 0,
  DEFOG = 1,
  DEFROST = 2
 } canutil_UI_hvacReqManualDefogState_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqUserPowerState(d) ((*( (uint64_t *) d ) & 0x1c000) >> 14)

typedef enum { 
  OFF = 0,
  ON = 1,
  PRECONDITION = 2,
  OVERHEAT_PROTECT_FANONLY = 3,
  OVERHEAT_PROTECT = 4
 } canutil_UI_hvacReqUserPowerState_vals;

#define CANUTIL_GET_VALUE_UI_hvacReqSecondRowState(d) ((*( (uint64_t *) d ) & 0x3800) >> 11)

typedef enum { 
  AUTO = 0,
  OFF = 1,
  LOW = 2,
  MED = 3,
  HIGH = 4
 } canutil_UI_hvacReqSecondRowState_vals;

#define CANUTIL_GET_VALUE_UI_hvacUseModeledDuctTemp(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_UI_hvacReqKeepClimateOn(d) ((*( (uint64_t *) d ) & 0x180) >> 7)

typedef enum { 
  KEEP_CLIMATE_ON_REQ_OFF = 0,
  KEEP_CLIMATE_ON_REQ_ON = 1,
  KEEP_CLIMATE_ON_REQ_DOG = 2,
  KEEP_CLIMATE_ON_REQ_PARTY = 3
 } canutil_UI_hvacReqKeepClimateOn_vals;

#define CANUTIL_ID313UI_trackModeSettings 0x313

#define CANUTIL_GET_VALUE_UI_trackModeRequest(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  TRACK_MODE_REQUEST_IDLE = 0,
  TRACK_MODE_REQUEST_ON = 1,
  TRACK_MODE_REQUEST_OFF = 2
 } canutil_UI_trackModeRequest_vals;

#define CANUTIL_GET_VALUE_UI_trackRotationTendency(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_UI_trackStabilityAssist(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_UI_trackPostCooling(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)

typedef enum { 
  TRACK_MODE_POST_COOLING_OFF = 0,
  TRACK_MODE_POST_COOLING_ON = 1
 } canutil_UI_trackPostCooling_vals;

#define CANUTIL_GET_VALUE_UI_trackCmpOverclock(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)

typedef enum { 
  TRACK_MODE_CMP_OVERCLOCK_OFF = 0,
  TRACK_MODE_CMP_OVERCLOCK_ON = 1
 } canutil_UI_trackCmpOverclock_vals;

#define CANUTIL_GET_VALUE_UI_trackModeSettingsCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_UI_trackModeSettingsChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID335RearDIinfo 0x335

#define CANUTIL_GET_VALUE_DIR_infoIndex(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  DI_INFO_DEPRECATED_0 = 0,
  DI_INFO_DEPRECATED_1 = 1,
  DI_INFO_DEPRECATED_2 = 2,
  DI_INFO_DEPRECATED_3 = 3,
  DI_INFO_DEPRECATED_4 = 4,
  DI_INFO_DEPRECATED_5 = 5,
  DI_INFO_DEPRECATED_6 = 6,
  DI_INFO_DEPRECATED_7 = 7,
  DI_INFO_DEPRECATED_8 = 8,
  DI_INFO_DEPRECATED_9 = 9,
  DI_INFO_BUILD_HWID_COMPONENTID = 10,
  DI_INFO_PCBAID_ASSYID_USAGEID = 11,
  DI_INFO_APP_CRC = 13,
  DI_INFO_BOOTLOADER_SVN = 14,
  DI_INFO_BOOTLOADER_CRC = 15,
  DI_INFO_SUBCOMPONENT = 16,
  DI_INFO_APP_GITHASH = 17,
  DI_INFO_BOOTLOADER_GITHASH = 18,
  DI_INFO_VERSION_DEPRECATED = 19,
  DI_INFO_UDS_PROTOCOL_BOOTCRC = 20,
  DI_INFO_SUBCOMPONENT2 = 23,
  DI_INFO_SUBCOMPONENT_GITHASH = 31,
  DI_INFO_END = 255
 } canutil_DIR_infoIndex_vals;

#define CANUTIL_GET_VALUE_DIR_appGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_bootGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_buildType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  INFO_UNKNOWN_BUILD = 0,
  INFO_PLATFORM_BUILD = 1,
  INFO_LOCAL_BUILD = 2,
  INFO_TRACEABLE_CI_BUILD = 3,
  INFO_MFG_BUILD = 4
 } canutil_DIR_buildType_vals;

#define CANUTIL_GET_VALUE_DIR_infoBootLdUdsProtocolVersion(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_oilPumpBuildType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  INFO_UNKNOWN_BUILD = 0,
  INFO_PLATFORM_BUILD = 1,
  INFO_LOCAL_BUILD = 2,
  INFO_TRACEABLE_CI_BUILD = 3,
  INFO_MFG_BUILD = 4
 } canutil_DIR_oilPumpBuildType_vals;

#define CANUTIL_GET_VALUE_DIR_platformTyp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_subcomponentGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_buildConfigurationId(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_oilPumpAppCrc(d) ((*( (uint64_t *) d ) & 0xffffffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_pcbaId(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_assemblyId(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_applicationCrc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_bootloaderCrc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_hardwareId(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  CONFIGURABLE_HWID_PLACEHOLDER = 252
 } canutil_DIR_hardwareId_vals;

#define CANUTIL_GET_VALUE_DIR_usageId(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_FPGA_version(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  FPGA_VERSION_LOCAL_BUILD = 254,
  FPGA_VERSION_SNA = 255
 } canutil_DIR_FPGA_version_vals;

#define CANUTIL_GET_VALUE_DIR_componentId(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_subUsageId(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_ID383VCRIGHT_thsStatus 0x383

#define CANUTIL_GET_VALUE_VCRIGHT_thsActive(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_VCRIGHT_thsTemperature(d) ((*( (uint64_t *) d ) & 0x7f80) >> 7)

typedef enum { 
  SNA = 128
 } canutil_VCRIGHT_thsTemperature_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_thsHumidity(d) ((*( (uint64_t *) d ) & 0x7f800000000000) >> 47)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_thsHumidity_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_estimatedVehicleSituatio(d) ((*( (uint64_t *) d ) & 0x600000000) >> 33)

typedef enum { 
  VEHICLE_SITUATION_UNKNOWN = 0,
  VEHICLE_SITUATION_INDOOR = 1,
  VEHICLE_SITUATION_OUTDOOR = 2
 } canutil_VCRIGHT_estimatedVehicleSituatio_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_thsSolarLoadInfrared(d) ((*( (uint64_t *) d ) & 0x1ff80000000) >> 31)

typedef enum { 
  SNA = 1023
 } canutil_VCRIGHT_thsSolarLoadInfrared_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_thsSolarLoadVisible(d) ((*( (uint64_t *) d ) & 0x7fe00000) >> 21)

typedef enum { 
  SNA = 1023
 } canutil_VCRIGHT_thsSolarLoadVisible_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_estimatedThsSolarLoad(d) ((*( (uint64_t *) d ) & 0x1ff800) >> 11)

typedef enum { 
  SNA = 1023
 } canutil_VCRIGHT_estimatedThsSolarLoad_vals;

#define CANUTIL_ID3B3UI_vehicleControl2 0x3b3

#define CANUTIL_GET_VALUE_UI_gloveboxRequest(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UI_trunkRequest(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)
#define CANUTIL_GET_VALUE_UI_UMCUpdateInhibit(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)
#define CANUTIL_GET_VALUE_UI_WCUpdateInhibit(d) ((*( (uint64_t *) d ) & 0x20000000) >> 29)
#define CANUTIL_GET_VALUE_UI_soundHornOnLock(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_UI_locksPanelActive(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_UI_PINToDriveEnabled(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_UI_PINToDrivePassed(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_UI_lightSwitch(d) ((*( (uint64_t *) d ) & 0x3800000) >> 23)

typedef enum { 
  LIGHT_SWITCH_AUTO = 0,
  LIGHT_SWITCH_ON = 1,
  LIGHT_SWITCH_PARKING = 2,
  LIGHT_SWITCH_OFF = 3,
  LIGHT_SWITCH_SNA = 4
 } canutil_UI_lightSwitch_vals;

#define CANUTIL_GET_VALUE_UI_readyToAddKey(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_UI_alarmTriggerRequest(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_UI_VCSECFeature1(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_UI_VCLEFTFeature1(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_UI_summonState(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  SNA = 0,
  IDLE = 1,
  PRE_PRIMED = 2,
  ACTIVE = 3
 } canutil_UI_summonState_vals;

#define CANUTIL_GET_VALUE_UI_userPresent(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_UI_freeRollModeRequest(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_UI_windowRequest(d) ((*( (uint64_t *) d ) & 0x7000) >> 12)

typedef enum { 
  WINDOW_REQUEST_IDLE = 0,
  WINDOW_REQUEST_GOTO_PERCENT = 1,
  WINDOW_REQUEST_GOTO_VENT = 2,
  WINDOW_REQUEST_GOTO_CLOSED = 3,
  WINDOW_REQUEST_GOTO_OPEN = 4
 } canutil_UI_windowRequest_vals;

#define CANUTIL_GET_VALUE_UI_batteryPreconditioningRequest(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_UI_coastDownMode(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_UI_autopilotPowerStateRequest(d) ((*( (uint64_t *) d ) & 0x180) >> 7)

typedef enum { 
  AUTOPILOT_NOMINAL = 0,
  AUTOPILOT_SENTRY = 1,
  AUTOPILOT_SUSPEND = 2
 } canutil_UI_autopilotPowerStateRequest_vals;

#define CANUTIL_GET_VALUE_UI_shorted12VCellTestMode(d) ((*( (uint64_t *) d ) & 0x60) >> 5)

typedef enum { 
  SHORTED_CELL_TEST_MODE_DISABLED = 0,
  SHORTED_CELL_TEST_MODE_SHADOW = 1,
  SHORTED_CELL_TEST_MODE_ACTIVE = 2
 } canutil_UI_shorted12VCellTestMode_vals;

#define CANUTIL_GET_VALUE_UI_autoRollWindowsOnLockEnable(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_UI_efuseMXResistanceEstArmed(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_UI_conditionalLoggingEnabledVCSE(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID3C3VCRIGHT_switchStatus 0x3c3

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatTrackBack(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatTrackBack_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatTrackForward(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatTrackForward_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatTiltDown(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatTiltDown_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatTiltUp(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatTiltUp_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatLiftDown(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatLiftDown_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatLiftUp(d) ((*( (uint64_t *) d ) & 0xc00000000000) >> 46)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatLiftUp_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatBackrestBack(d) ((*( (uint64_t *) d ) & 0x300000000000) >> 44)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatBackrestBack_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatBackrestForward(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatBackrestForward_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatLumbarDown(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatLumbarDown_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatLumbarUp(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatLumbarUp_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatLumbarIn(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatLumbarIn_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontSeatLumbarOut(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontSeatLumbarOut_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowUpRF(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowAutoUpRF(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowDownRF(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowAutoDownRF(d) ((*( (uint64_t *) d ) & 0x20000000) >> 29)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowUpRR(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowAutoUpRR(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowDownRR(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowAutoDownRR(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackUpLF(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackAutoUpLF(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackDownLF(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackAutoDwnLF(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackUpLR(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackAutoUpLR(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackDownLR(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackAutoDwnLR(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_VCRIGHT_frontBuckleSwitch(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontBuckleSwitch_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_frontOccupancySwitch(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_frontOccupancySwitch_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_rearCenterBuckleSwitch(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_rearCenterBuckleSwitch_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_rearRightBuckleSwitch(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCRIGHT_rearRightBuckleSwitch_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_trunkExtReleasePressed(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackUpRR(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackAutoUpRR(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackDownRR(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_GET_VALUE_VCRIGHT_btnWindowSwPackAutoDwnRR(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_VCRIGHT_liftgateShutfaceSwitchPr(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCRIGHT_2RowSeatReclineSwitch(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_ID3E3VCRIGHT_lightStatus 0x3e3

#define CANUTIL_GET_VALUE_VCRIGHT_brakeLightStatus(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCRIGHT_brakeLightStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_tailLightStatus(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCRIGHT_tailLightStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_turnSignalStatus(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCRIGHT_turnSignalStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_reverseLightStatus(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCRIGHT_reverseLightStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_rearFogLightStatus(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCRIGHT_rearFogLightStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_interiorTrunkLightStatus(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  LIGHT_OFF = 0,
  LIGHT_ON = 1,
  LIGHT_FAULT = 2,
  LIGHT_SNA = 3
 } canutil_VCRIGHT_interiorTrunkLightStatus_vals;

#define CANUTIL_ID656FrontDIinfo 0x656

#define CANUTIL_GET_VALUE_DIF_infoIndex(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  DI_INFO_DEPRECATED_0 = 0,
  DI_INFO_DEPRECATED_1 = 1,
  DI_INFO_DEPRECATED_2 = 2,
  DI_INFO_DEPRECATED_3 = 3,
  DI_INFO_DEPRECATED_4 = 4,
  DI_INFO_DEPRECATED_5 = 5,
  DI_INFO_DEPRECATED_6 = 6,
  DI_INFO_DEPRECATED_7 = 7,
  DI_INFO_DEPRECATED_8 = 8,
  DI_INFO_DEPRECATED_9 = 9,
  DI_INFO_BUILD_HWID_COMPONENTID = 10,
  DI_INFO_PCBAID_ASSYID_USAGEID = 11,
  DI_INFO_APP_CRC = 13,
  DI_INFO_BOOTLOADER_SVN = 14,
  DI_INFO_BOOTLOADER_CRC = 15,
  DI_INFO_SUBCOMPONENT = 16,
  DI_INFO_APP_GITHASH = 17,
  DI_INFO_BOOTLOADER_GITHASH = 18,
  DI_INFO_VERSION_DEPRECATED = 19,
  DI_INFO_UDS_PROTOCOL_BOOTCRC = 20,
  DI_INFO_SUBCOMPONENT2 = 23,
  DI_INFO_SUBCOMPONENT_GITHASH = 31,
  DI_INFO_END = 255
 } canutil_DIF_infoIndex_vals;

#define CANUTIL_GET_VALUE_DIF_appGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_bootGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_buildType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  INFO_UNKNOWN_BUILD = 0,
  INFO_PLATFORM_BUILD = 1,
  INFO_LOCAL_BUILD = 2,
  INFO_TRACEABLE_CI_BUILD = 3,
  INFO_MFG_BUILD = 4
 } canutil_DIF_buildType_vals;

#define CANUTIL_GET_VALUE_DIF_infoBootLdUdsProtocolVersion(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_oilPumpBuildType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  INFO_UNKNOWN_BUILD = 0,
  INFO_PLATFORM_BUILD = 1,
  INFO_LOCAL_BUILD = 2,
  INFO_TRACEABLE_CI_BUILD = 3,
  INFO_MFG_BUILD = 4
 } canutil_DIF_oilPumpBuildType_vals;

#define CANUTIL_GET_VALUE_DIF_platformTyp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_subcomponentGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_buildConfigurationId(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_oilPumpAppCrc(d) ((*( (uint64_t *) d ) & 0xffffffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_pcbaId(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_assemblyId(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_applicationCrc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_bootloaderCrc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_hardwareId(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  CONFIGURABLE_HWID_PLACEHOLDER = 252
 } canutil_DIF_hardwareId_vals;

#define CANUTIL_GET_VALUE_DIF_usageId(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_FPGA_version(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  FPGA_VERSION_LOCAL_BUILD = 254,
  FPGA_VERSION_SNA = 255
 } canutil_DIF_FPGA_version_vals;

#define CANUTIL_GET_VALUE_DIF_componentId(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_subUsageId(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_ID300BMS_info 0x300

#define CANUTIL_GET_VALUE_BMS_infoIndex(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  INFO_DEPRECATED_0 = 0,
  INFO_DEPRECATED_1 = 1,
  INFO_DEPRECATED_2 = 2,
  INFO_DEPRECATED_3 = 3,
  INFO_DEPRECATED_4 = 4,
  INFO_DEPRECATED_5 = 5,
  INFO_DEPRECATED_6 = 6,
  INFO_DEPRECATED_7 = 7,
  INFO_DEPRECATED_8 = 8,
  INFO_DEPRECATED_9 = 9,
  INFO_BUILD_HWID_COMPONENTID = 10,
  INFO_PCBAID_ASSYID_USAGEID = 11,
  INFO_APP_CRC = 13,
  INFO_BOOTLOADER_SVN = 14,
  INFO_BOOTLOADER_CRC = 15,
  INFO_SUBCOMPONENT = 16,
  INFO_APP_GITHASH = 17,
  INFO_BOOTLOADER_GITHASH = 18,
  INFO_VERSION_DEPRECATED = 19,
  INFO_UDS_PROTOCOL_BOOTCRC = 20,
  INFO_VARIANTCRC = 22,
  INFO_PACKAGE_PN_1_7 = 25,
  INFO_PACKAGE_PN_8_14 = 26,
  INFO_PACKAGE_PN_15_20 = 27,
  INFO_PACKAGE_SN_1_7 = 29,
  INFO_PACKAGE_SN_8_14 = 30,
  INFO_SUBCOMPONENT_GITHASH = 31,
  INFO_END = 255
 } canutil_BMS_infoIndex_vals;

#define CANUTIL_GET_VALUE_BMS_appGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_bootGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_bootUdsProtoVersion(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_BMS_buildType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  INFO_UNKNOWN_BUILD = 0,
  INFO_PLATFORM_BUILD = 1,
  INFO_LOCAL_BUILD = 2,
  INFO_TRACEABLE_CI_BUILD = 3,
  INFO_MFG_BUILD = 4
 } canutil_BMS_buildType_vals;

#define CANUTIL_GET_VALUE_BMS_platformType(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_BMS_buildConfigId(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_pcbaId(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_assemblyId(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_BMS_appCrc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_BMS_bootCrc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_BMS_hardwareId(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_BMS_usageId(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_BMS_componentId(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_BMS_subUsageId(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_ID212BMS_status 0x212

#define CANUTIL_GET_VALUE_BMS_hvacPowerRequest(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_BMS_notEnoughPowerForDrive(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_BMS_notEnoughPowerForSupport(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_BMS_preconditionAllowed(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_BMS_updateAllowed(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_BMS_activeHeatingWorthwhile(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_BMS_cpMiaOnHvs(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_BMS_pcsPwmEnabled(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_BMS_contactorState(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  BMS_CTRSET_SNA = 0,
  BMS_CTRSET_OPEN = 1,
  BMS_CTRSET_OPENING = 2,
  BMS_CTRSET_CLOSING = 3,
  BMS_CTRSET_CLOSED = 4,
  BMS_CTRSET_WELDED = 5,
  BMS_CTRSET_BLOCKED = 6
 } canutil_BMS_contactorState_vals;

#define CANUTIL_GET_VALUE_BMS_uiChargeStatus(d) ((*( (uint64_t *) d ) & 0xe0000000000000) >> 53)

typedef enum { 
  BMS_DISCONNECTED = 0,
  BMS_NO_POWER = 1,
  BMS_ABOUT_TO_CHARGE = 2,
  BMS_CHARGING = 3,
  BMS_CHARGE_COMPLETE = 4,
  BMS_CHARGE_STOPPED = 5
 } canutil_BMS_uiChargeStatus_vals;

#define CANUTIL_GET_VALUE_BMS_ecuLogUploadRequest(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  REQUEST_PRIORITY_NONE = 0,
  REQUEST_PRIORITY_1 = 1,
  REQUEST_PRIORITY_2 = 2,
  REQUEST_PRIORITY_3 = 3
 } canutil_BMS_ecuLogUploadRequest_vals;

#define CANUTIL_GET_VALUE_BMS_hvState(d) ((*( (uint64_t *) d ) & 0x7000000000000) >> 48)

typedef enum { 
  HV_DOWN = 0,
  HV_COMING_UP = 1,
  HV_GOING_DOWN = 2,
  HV_UP_FOR_DRIVE = 3,
  HV_UP_FOR_CHARGE = 4,
  HV_UP_FOR_DC_CHARGE = 5,
  HV_UP = 6
 } canutil_BMS_hvState_vals;

#define CANUTIL_GET_VALUE_BMS_isolationResistance(d) ((*( (uint64_t *) d ) & 0x7fe00000000000) >> 45)

typedef enum { 
  SNA = 1023
 } canutil_BMS_isolationResistance_vals;

#define CANUTIL_GET_VALUE_BMS_chargeRequest(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_BMS_keepWarmRequest(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_BMS_state(d) ((*( (uint64_t *) d ) & 0xf00000000) >> 32)

typedef enum { 
  BMS_STANDBY = 0,
  BMS_DRIVE = 1,
  BMS_SUPPORT = 2,
  BMS_CHARGE = 3,
  BMS_FEIM = 4,
  BMS_CLEAR_FAULT = 5,
  BMS_FAULT = 6,
  BMS_WELD = 7,
  BMS_TEST = 8,
  BMS_SNA = 9,
  BMS_DIAG = 10
 } canutil_BMS_state_vals;

#define CANUTIL_GET_VALUE_BMS_diLimpRequest(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)

typedef enum { 
  LIMP_REQUEST_NONE = 0,
  LIMP_REQUEST_WELDED = 1
 } canutil_BMS_diLimpRequest_vals;

#define CANUTIL_GET_VALUE_BMS_okToShipByAir(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_BMS_okToShipByLand(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_BMS_chgPowerAvailable(d) ((*( (uint64_t *) d ) & 0x7ff000000) >> 24)

typedef enum { 
  SNA = 2047
 } canutil_BMS_chgPowerAvailable_vals;

#define CANUTIL_GET_VALUE_BMS_chargeRetryCount(d) ((*( (uint64_t *) d ) & 0xe000) >> 13)
#define CANUTIL_GET_VALUE_BMS_smStateRequest(d) ((*( (uint64_t *) d ) & 0xf00) >> 8)

typedef enum { 
  BMS_STANDBY = 0,
  BMS_DRIVE = 1,
  BMS_SUPPORT = 2,
  BMS_CHARGE = 3,
  BMS_FEIM = 4,
  BMS_CLEAR_FAULT = 5,
  BMS_FAULT = 6,
  BMS_WELD = 7,
  BMS_TEST = 8,
  BMS_SNA = 9,
  BMS_DIAG = 10
 } canutil_BMS_smStateRequest_vals;

#define CANUTIL_ID31CCC_chgStatus 0x31c

#define CANUTIL_GET_VALUE_CC_currentLimit(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  SNA = 255
 } canutil_CC_currentLimit_vals;

#define CANUTIL_GET_VALUE_CC_pilotState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  CC_PILOT_STATE_READY = 0,
  CC_PILOT_STATE_IDLE = 1,
  CC_PILOT_STATE_FAULTED = 2,
  CC_PILOT_STATE_SNA = 3
 } canutil_CC_pilotState_vals;

#define CANUTIL_GET_VALUE_CC_numPhases(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  SNA = 0
 } canutil_CC_numPhases_vals;

#define CANUTIL_GET_VALUE_CC_line1Voltage(d) ((*( (uint64_t *) d ) & 0x1ff000000000000) >> 48)

typedef enum { 
  SNA = 511
 } canutil_CC_line1Voltage_vals;

#define CANUTIL_GET_VALUE_CC_gridGrounding(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  CC_GRID_GROUNDING_TN_TT = 0,
  CC_GRID_GROUNDING_IT_SplitPhase = 1,
  CC_GRID_GROUNDING_SNA = 2
 } canutil_CC_gridGrounding_vals;

#define CANUTIL_GET_VALUE_CC_deltaTransformer(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)
#define CANUTIL_GET_VALUE_CC_numVehCharging(d) ((*( (uint64_t *) d ) & 0x1c00000000) >> 34)
#define CANUTIL_GET_VALUE_CC_line2Voltage(d) ((*( (uint64_t *) d ) & 0xff80000000) >> 31)

typedef enum { 
  SNA = 511
 } canutil_CC_line2Voltage_vals;

#define CANUTIL_GET_VALUE_CC_line3Voltage(d) ((*( (uint64_t *) d ) & 0x7fc00000) >> 22)

typedef enum { 
  SNA = 511
 } canutil_CC_line3Voltage_vals;

#define CANUTIL_ID23DCP_chargeStatus 0x23d

#define CANUTIL_GET_VALUE_CP_hvChargeStatus(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  CP_CHARGE_INACTIVE = 0,
  CP_CHARGE_CONNECTED = 1,
  CP_CHARGE_STANDBY = 2,
  CP_EXT_EVSE_TEST_ACTIVE = 3,
  CP_EVSE_TEST_PASSED = 4,
  CP_CHARGE_ENABLED = 5,
  CP_CHARGE_FAULTED = 6
 } canutil_CP_hvChargeStatus_vals;

#define CANUTIL_GET_VALUE_CP_chargeShutdownRequest(d) ((*( (uint64_t *) d ) & 0x60000000) >> 29)

typedef enum { 
  NO_SHUTDOWN_REQUESTED = 0,
  GRACEFUL_SHUTDOWN_REQUESTED = 1,
  EMERGENCY_SHUTDOWN_REQUESTED = 2
 } canutil_CP_chargeShutdownRequest_vals;

#define CANUTIL_GET_VALUE_CP_acChargeCurrentLimit(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_internalMaxCurrentLimit(d) ((*( (uint64_t *) d ) & 0x1fff0000) >> 16)
#define CANUTIL_GET_VALUE_CP_vehicleIsoCheckRequired(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_CP_vehiclePrechargeRequired(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_ID13DCP_chargeStatus 0x13d

#define CANUTIL_GET_VALUE_CP_hvChargeStatus(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  CP_CHARGE_INACTIVE = 0,
  CP_CHARGE_CONNECTED = 1,
  CP_CHARGE_STANDBY = 2,
  CP_EXT_EVSE_TEST_ACTIVE = 3,
  CP_EVSE_TEST_PASSED = 4,
  CP_CHARGE_ENABLED = 5,
  CP_CHARGE_FAULTED = 6
 } canutil_CP_hvChargeStatus_vals;

#define CANUTIL_GET_VALUE_CP_chargeShutdownRequest(d) ((*( (uint64_t *) d ) & 0x600000000000) >> 45)

typedef enum { 
  NO_SHUTDOWN_REQUESTED = 0,
  GRACEFUL_SHUTDOWN_REQUESTED = 1,
  EMERGENCY_SHUTDOWN_REQUESTED = 2
 } canutil_CP_chargeShutdownRequest_vals;

#define CANUTIL_GET_VALUE_CP_acChargeCurrentLimit(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_internalMaxDcCurrentLimit(d) ((*( (uint64_t *) d ) & 0x1fff00000000) >> 32)
#define CANUTIL_GET_VALUE_CP_vehicleIsoCheckRequired(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_CP_vehiclePrechargeRequired(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_CP_internalMaxAcCurrentLimit(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_CP_evseChargeType(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  NO_CHARGER_PRESENT = 0,
  DC_CHARGER_PRESENT = 1,
  AC_CHARGER_PRESENT = 2
 } canutil_CP_evseChargeType_vals;

#define CANUTIL_ID43DCP_chargeStatusLog 0x43d

#define CANUTIL_GET_VALUE_CP_hvChargeStatus_log(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  CP_CHARGE_INACTIVE = 0,
  CP_CHARGE_CONNECTED = 1,
  CP_CHARGE_STANDBY = 2,
  CP_EXT_EVSE_TEST_ACTIVE = 3,
  CP_EVSE_TEST_PASSED = 4,
  CP_CHARGE_ENABLED = 5,
  CP_CHARGE_FAULTED = 6
 } canutil_CP_hvChargeStatus_log_vals;

#define CANUTIL_GET_VALUE_CP_chargeShutdownRequest_log(d) ((*( (uint64_t *) d ) & 0x600000000000) >> 45)

typedef enum { 
  NO_SHUTDOWN_REQUESTED = 0,
  GRACEFUL_SHUTDOWN_REQUESTED = 1,
  EMERGENCY_SHUTDOWN_REQUESTED = 2
 } canutil_CP_chargeShutdownRequest_log_vals;

#define CANUTIL_GET_VALUE_CP_acChargeCurrentLimit_log(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_internalMaxDcCurrentLimit_log(d) ((*( (uint64_t *) d ) & 0x1fff00000000) >> 32)
#define CANUTIL_GET_VALUE_CP_vehicleIsoCheckRequired_log(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_CP_vehiclePrechargeRequired_log(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_CP_internalMaxAcCurrentLimit_log(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_CP_evseChargeType_log(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  NO_CHARGER_PRESENT = 0,
  DC_CHARGER_PRESENT = 1,
  AC_CHARGER_PRESENT = 2
 } canutil_CP_evseChargeType_log_vals;

#define CANUTIL_ID21DCP_evseStatus 0x21d

#define CANUTIL_GET_VALUE_CP_evseAccept(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_CP_evseRequest(d) ((*( (uint64_t *) d ) & 0x8000000000000000) >> 63)
#define CANUTIL_GET_VALUE_CP_proximity(d) ((*( (uint64_t *) d ) & 0xc000000000000000) >> 62)

typedef enum { 
  CHG_PROXIMITY_SNA = 0,
  CHG_PROXIMITY_DISCONNECTED = 1,
  CHG_PROXIMITY_UNLATCHED = 2,
  CHG_PROXIMITY_LATCHED = 3
 } canutil_CP_proximity_vals;

#define CANUTIL_GET_VALUE_CP_pilot(d) ((*( (uint64_t *) d ) & 0x7000000000000000) >> 60)

typedef enum { 
  CHG_PILOT_NONE = 0,
  CHG_PILOT_FAULTED = 1,
  CHG_PILOT_LINE_CHARGE = 2,
  CHG_PILOT_FAST_CHARGE = 3,
  CHG_PILOT_IDLE = 4,
  CHG_PILOT_INVALID = 5,
  CHG_PILOT_UNUSED_6 = 6,
  CHG_PILOT_SNA = 7
 } canutil_CP_pilot_vals;

#define CANUTIL_GET_VALUE_CP_pilotCurrent(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_CP_cableType(d) ((*( (uint64_t *) d ) & 0x7000000000000) >> 48)

typedef enum { 
  CHG_CABLE_TYPE_IEC = 0,
  CHG_CABLE_TYPE_SAE = 1,
  CHG_CABLE_TYPE_GB_AC = 2,
  CHG_CABLE_TYPE_GB_DC = 3,
  CHG_CABLE_TYPE_SNA = 4
 } canutil_CP_cableType_vals;

#define CANUTIL_GET_VALUE_CP_cableCurrentLimit(d) ((*( (uint64_t *) d ) & 0x7f0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_digitalCommsAttempts(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)
#define CANUTIL_GET_VALUE_CP_teslaSwcanState(d) ((*( (uint64_t *) d ) & 0x1c0000000) >> 30)

typedef enum { 
  TESLA_SWCAN_INACTIVE = 0,
  TESLA_SWCAN_ACCEPT = 1,
  TESLA_SWCAN_RECEIVE = 2,
  TESLA_SWCAN_ESTABLISHED = 3,
  TESLA_SWCAN_FAULT = 4,
  TESLA_SWCAN_GO_TO_SLEEP = 5,
  TESLA_SWCAN_OFFBOARD_UPDATE_IN_PROGRESS = 6
 } canutil_CP_teslaSwcanState_vals;

#define CANUTIL_GET_VALUE_CP_digitalCommsEstablished(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_CP_evseChargeType_UI(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  NO_CHARGER_PRESENT = 0,
  DC_CHARGER_PRESENT = 1,
  AC_CHARGER_PRESENT = 2
 } canutil_CP_evseChargeType_UI_vals;

#define CANUTIL_GET_VALUE_CP_acNumRetries(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)
#define CANUTIL_GET_VALUE_CP_gbState(d) ((*( (uint64_t *) d ) & 0x3c00000) >> 22)

typedef enum { 
  GBDC_INACTIVE = 0,
  GBDC_WAIT_FOR_COMMS = 1,
  GBDC_COMMS_RECEIVED = 2,
  GBDC_HANDSHAKING_EXT_ISO = 3,
  GBDC_RECOGNITION = 4,
  GBDC_CHARGE_PARAM_CONFIG = 5,
  GBDC_VEH_PACK_PRECHARGE = 6,
  GBDC_READY_TO_CHARGE = 7,
  GBDC_CHARGING = 8,
  GBDC_STOP_CHARGE_REQUESTED = 9,
  GBDC_CHARGE_DISABLING = 10,
  GBDC_END_OF_CHARGE = 11,
  GBDC_ERROR_HANDLING = 12,
  GBDC_RETRY_CHARGE = 13,
  GBDC_FAULTED = 14,
  GBDC_TESTER_PRESENT = 15
 } canutil_CP_gbState_vals;

#define CANUTIL_GET_VALUE_CP_gbdcStopChargeReason(d) ((*( (uint64_t *) d ) & 0x1c0000) >> 18)

typedef enum { 
  GBDC_STOP_REASON_NONE = 0,
  GBDC_VEH_REQUESTED = 1,
  GBDC_EVSE_REQUESTED = 2,
  GBDC_COMMS_TIMEOUT = 3,
  GBDC_EVSE_FAULT = 4,
  GBDC_EVSE_CRITICAL_FAULT = 5,
  GBDC_LIVE_DISCONNECT = 6,
  GBDC_SUPERCHARGER_COMMS_TIMEOUT = 7
 } canutil_CP_gbdcStopChargeReason_vals;

#define CANUTIL_GET_VALUE_CP_gbdcFailureReason(d) ((*( (uint64_t *) d ) & 0x18000) >> 15)

typedef enum { 
  GBDC_FAILURE_NONE = 0,
  GBDC_ATTEMPTS_EXPIRED = 1,
  GBDC_SHUTDOWN_FAILURE = 2,
  GBDC_CRITICAL_FAILURE = 3
 } canutil_CP_gbdcFailureReason_vals;

#define CANUTIL_GET_VALUE_CP_gbdcChargeAttempts(d) ((*( (uint64_t *) d ) & 0x6000) >> 13)
#define CANUTIL_GET_VALUE_CP_acChargeState(d) ((*( (uint64_t *) d ) & 0x3800) >> 11)

typedef enum { 
  AC_CHARGE_INACTIVE = 0,
  AC_CHARGE_CONNECTED_CHARGE_BLOCKED = 1,
  AC_CHARGE_STANDBY = 2,
  AC_CHARGE_ENABLED = 3,
  AC_CHARGE_ONBOARD_CHARGER_SHUTDOWN = 4,
  AC_CHARGE_VEH_SHUTDOWN = 5,
  AC_CHARGE_FAULT = 6
 } canutil_CP_acChargeState_vals;

#define CANUTIL_GET_VALUE_CP_teslaDcState(d) ((*( (uint64_t *) d ) & 0xf00) >> 8)

typedef enum { 
  TESLA_DC_INACTIVE = 0,
  TESLA_DC_CONNECTED_CHARGE_BLOCKED = 1,
  TESLA_DC_STANDBY = 2,
  TESLA_DC_EXT_TESTS_ENABLED = 3,
  TESLA_DC_EXT_TEST_ACTIVE = 4,
  TESLA_DC_EXT_PRECHARGE_ACTIVE = 5,
  TESLA_DC_ENABLED = 6,
  TESLA_DC_EVSE_SHUTDOWN = 7,
  TESLA_DC_VEH_SHUTDOWN = 8,
  TESLA_DC_EMERGENCY_SHUTDOWN = 9,
  TESLA_DC_FAULT = 10
 } canutil_CP_teslaDcState_vals;

#define CANUTIL_GET_VALUE_CP_iecComboState(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)

typedef enum { 
  IEC_COMBO_INACTIVE = 0,
  IEC_COMBO_CONNECTED = 1,
  IEC_COMBO_V2G_SESSION_SETUP = 2,
  IEC_COMBO_SERVICE_DISCOVERY = 3,
  IEC_COMBO_PAYMENT_SELECTION = 4,
  IEC_COMBO_CHARGE_PARAM_DISCOVERY = 5,
  IEC_COMBO_CABLE_CHECK = 6,
  IEC_COMBO_PRECHARGE = 7,
  IEC_COMBO_ENABLED = 8,
  IEC_COMBO_SHUTDOWN = 9,
  IEC_COMBO_END_OF_CHARGE = 10,
  IEC_COMBO_FAULT = 11,
  IEC_COMBO_WAIT_RESTART = 12
 } canutil_CP_iecComboState_vals;

#define CANUTIL_ID743VCRIGHT_recallStatus 0x743

#define CANUTIL_GET_VALUE_VCRIGHT_systemRecallStatus(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  RECALL_SNA = 0,
  RECALL_IN_PROGRESS = 1,
  RECALL_COMPLETE = 2,
  RECALL_INTERRUPTED = 3
 } canutil_VCRIGHT_systemRecallStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_seatRecallStatus(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  RECALL_SNA = 0,
  RECALL_IN_PROGRESS = 1,
  RECALL_COMPLETE = 2,
  RECALL_INTERRUPTED = 3
 } canutil_VCRIGHT_seatRecallStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_mirrorRecallStatus(d) ((*( (uint64_t *) d ) & 0x30) >> 4)

typedef enum { 
  RECALL_SNA = 0,
  RECALL_IN_PROGRESS = 1,
  RECALL_COMPLETE = 2,
  RECALL_INTERRUPTED = 3
 } canutil_VCRIGHT_mirrorRecallStatus_vals;

#define CANUTIL_ID75DCP_sensorData 0x75d

#define CANUTIL_GET_VALUE_CP_sensorDataSelect(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)

typedef enum { 
  CP_SENSOR_DOOR_COUNTS = 0,
  CP_SENSOR_PIN_TEMP = 1,
  CP_SENSOR_DOOR = 2,
  CP_SENSOR_LATCH = 3,
  CP_SENSOR_INDUCTIVE_DOOR = 4,
  CP_SENSOR_SAFETY = 5,
  CP_SENSOR_UHF = 6,
  CP_SENSOR_RAILS = 7,
  CP_SENSOR_PROX = 8,
  CP_SENSOR_PILOT = 9,
  CP_SENSOR_PILOT2 = 10,
  CP_SENSOR_PROX_GB = 11,
  CP_SENSOR_INLET_HARNESS_ID = 12
 } canutil_CP_sensorDataSelect_vals;

#define CANUTIL_GET_VALUE_CP_UHF_chipState(d) ((*( (uint64_t *) d ) & 0x7000000000000000) >> 60)
#define CANUTIL_GET_VALUE_CP_doorPot(d) ((*( (uint64_t *) d ) & 0xfff00) >> 8)
#define CANUTIL_GET_VALUE_CP_faultLineV(d) ((*( (uint64_t *) d ) & 0xfff00) >> 8)
#define CANUTIL_GET_VALUE_CP_inductiveSensor_raw(d) ((*( (uint64_t *) d ) & 0xfffffff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_inlet1HarnessIdState(d) ((*( (uint64_t *) d ) & 0x3000000000000000) >> 60)

typedef enum { 
  HARNESS_PEDIGREE_UNKNOWN_SNA = 0,
  HARNESS_PEDIGREE_INVALID = 1,
  HARNESS_PEDIGREE_VALID = 2
 } canutil_CP_inlet1HarnessIdState_vals;

#define CANUTIL_GET_VALUE_CP_latchI(d) ((*( (uint64_t *) d ) & 0xfff00) >> 8)
#define CANUTIL_GET_VALUE_CP_pilotLowValue_intervalMax10s(d) ((*( (uint64_t *) d ) & 0xfff00) >> 8)
#define CANUTIL_GET_VALUE_CP_pilotPulseWidth(d) ((*( (uint64_t *) d ) & 0xfff00) >> 8)
#define CANUTIL_GET_VALUE_CP_UHF_rssi(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_CP_doorCountsFiltered(d) ((*( (uint64_t *) d ) & 0xffff00) >> 8)
#define CANUTIL_GET_VALUE_CP_inlet1HarnessIdValue(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)
#define CANUTIL_GET_VALUE_CP_pinTemperature1(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_CP_proximityV(d) ((*( (uint64_t *) d ) & 0xffff00) >> 8)
#define CANUTIL_GET_VALUE_CP_proximityV_GBCC1(d) ((*( (uint64_t *) d ) & 0xfffc0) >> 6)
#define CANUTIL_GET_VALUE_CP_refVoltage(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_CP_UHF_rxOverflow(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_backCoverCounts(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_doorI(d) ((*( (uint64_t *) d ) & 0xfff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_inlet1HarnessV(d) ((*( (uint64_t *) d ) & 0x3fff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_latch2I(d) ((*( (uint64_t *) d ) & 0xfff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_pilotLowValue_intervalMin10s(d) ((*( (uint64_t *) d ) & 0xfff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_pilotPeriod(d) ((*( (uint64_t *) d ) & 0xfff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_pinTemperature2(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_UHF_rxNumBytes(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_doorCountsDebounced(d) ((*( (uint64_t *) d ) & 0xffff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_pinTemperature3(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_proximityV_GBCC2(d) ((*( (uint64_t *) d ) & 0x3fff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_proximityV_intervalMin10s(d) ((*( (uint64_t *) d ) & 0xffff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_doorLastRequestMaxI(d) ((*( (uint64_t *) d ) & 0xfff000000000) >> 36)
#define CANUTIL_GET_VALUE_CP_pilotHighValue_intervalMax10s(d) ((*( (uint64_t *) d ) & 0xfff000000000) >> 36)
#define CANUTIL_GET_VALUE_CP_pilotLowValue(d) ((*( (uint64_t *) d ) & 0xfff000000000) >> 36)
#define CANUTIL_GET_VALUE_CP_inlet2HarnessIdState(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  HARNESS_PEDIGREE_UNKNOWN_SNA = 0,
  HARNESS_PEDIGREE_INVALID = 1,
  HARNESS_PEDIGREE_VALID = 2
 } canutil_CP_inlet2HarnessIdState_vals;

#define CANUTIL_GET_VALUE_CP_UHF_fifoData(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_CP_backCover2Counts(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_CP_boardTemperature(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_CP_inlet2HarnessIdValue(d) ((*( (uint64_t *) d ) & 0x700000000) >> 32)
#define CANUTIL_GET_VALUE_CP_UHF_selfTestRssi(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_inlet2HarnessV(d) ((*( (uint64_t *) d ) & 0x3fff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_pilotHighValue(d) ((*( (uint64_t *) d ) & 0xfff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_pilotHighValue_intervalMin10s(d) ((*( (uint64_t *) d ) & 0xfff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_proximityV_intervalMax10s(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_proxConn1Sense(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_CP_proxEn(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_ID287PTCcabinHeatSensorStatus 0x287

#define CANUTIL_GET_VALUE_PTC_leftTempIGBT(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_PTC_tempOCP(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_PTC_rightTempIGBT(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_PTC_tempPCB(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_PTC_voltageHV(d) ((*( (uint64_t *) d ) & 0x3ff00000000) >> 32)
#define CANUTIL_GET_VALUE_PTC_leftCurrentHV(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_PTC_rightCurrentHV(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID333UI_chargeRequest 0x333

#define CANUTIL_GET_VALUE_UI_openChargePortDoorRequest(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UI_closeChargePortDoorRequest(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_UI_chargeEnableRequest(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_UI_brickVLoggingRequest(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)

typedef enum { 
  FALSE = 0,
  TRUE = 1
 } canutil_UI_brickVLoggingRequest_vals;

#define CANUTIL_GET_VALUE_UI_brickBalancingDisabled(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)

typedef enum { 
  FALSE = 0,
  TRUE = 1
 } canutil_UI_brickBalancingDisabled_vals;

#define CANUTIL_GET_VALUE_UI_acChargeCurrentLimit(d) ((*( (uint64_t *) d ) & 0x7f00000000) >> 32)

typedef enum { 
  SNA = 127
 } canutil_UI_acChargeCurrentLimit_vals;

#define CANUTIL_GET_VALUE_UI_chargeTerminationPct(d) ((*( (uint64_t *) d ) & 0x3ff000000) >> 24)
#define CANUTIL_GET_VALUE_UI_smartAcChargingEnabled(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_UI_scheduledDepartureEnabled(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_UI_socSnapshotExpirationTime(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_UI_cpInletHeaterRequest(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_ID334UI_powertrainControl 0x334

#define CANUTIL_GET_VALUE_UI_systemPowerLimit(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)

typedef enum { 
  SNA = 31
 } canutil_UI_systemPowerLimit_vals;

#define CANUTIL_GET_VALUE_UI_pedalMap(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)

typedef enum { 
  CHILL = 0,
  SPORT = 1,
  PERFORMANCE = 2
 } canutil_UI_pedalMap_vals;

#define CANUTIL_GET_VALUE_UI_systemTorqueLimit(d) ((*( (uint64_t *) d ) & 0x3f00000000000000) >> 56)

typedef enum { 
  SNA = 63
 } canutil_UI_systemTorqueLimit_vals;

#define CANUTIL_GET_VALUE_UI_closureConfirmed(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  CONFIRMED_NONE = 0,
  CONFIRMED_FRUNK = 1,
  CONFIRMED_PROX = 2
 } canutil_UI_closureConfirmed_vals;

#define CANUTIL_GET_VALUE_UI_speedLimit(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_UI_speedLimit_vals;

#define CANUTIL_GET_VALUE_UI_regenTorqueMax(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_UI_limitMode(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  LIMIT_NORMAL = 0,
  LIMIT_VALET = 1,
  LIMIT_FACTORY = 2,
  LIMIT_SERVICE = 3
 } canutil_UI_limitMode_vals;

#define CANUTIL_GET_VALUE_UI_motorOnMode(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  MOTORONMODE_NORMAL = 0,
  MOTORONMODE_FRONT_ONLY = 1,
  MOTORONMODE_REAR_ONLY = 2
 } canutil_UI_motorOnMode_vals;

#define CANUTIL_GET_VALUE_UI_wasteMode(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  WASTE_TYPE_NONE = 0,
  WASTE_TYPE_PARTIAL = 1,
  WASTE_TYPE_FULL = 2
 } canutil_UI_wasteMode_vals;

#define CANUTIL_GET_VALUE_UI_wasteModeRegenLimit(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  MAX_REGEN_CURRENT_MAX = 0,
  MAX_REGEN_CURRENT_30A = 1,
  MAX_REGEN_CURRENT_10A = 2,
  MAX_REGEN_CURRENT_0A = 3
 } canutil_UI_wasteModeRegenLimit_vals;

#define CANUTIL_GET_VALUE_UI_stoppingMode(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  STANDARD = 0,
  CREEP = 1,
  HOLD = 2
 } canutil_UI_stoppingMode_vals;

#define CANUTIL_GET_VALUE_UI_DIAppSliderDebug(d) ((*( (uint64_t *) d ) & 0xc00000) >> 22)
#define CANUTIL_GET_VALUE_UI_powertrainControlCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_UI_powertrainControlChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID33AUI_rangeSOC 0x33a

#define CANUTIL_GET_VALUE_UI_Range(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_UI_idealRange(d) ((*( (uint64_t *) d ) & 0x3ff000000000000) >> 48)
#define CANUTIL_GET_VALUE_UI_ratedWHpM(d) ((*( (uint64_t *) d ) & 0x3ff00000000) >> 32)
#define CANUTIL_GET_VALUE_UI_SOC(d) ((*( (uint64_t *) d ) & 0x7f0000) >> 16)
#define CANUTIL_GET_VALUE_UI_uSOE(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)
#define CANUTIL_ID241VCFRONT_coolant 0x241

#define CANUTIL_GET_VALUE_VCFRONT_coolantFlowBatActual(d) ((*( (uint64_t *) d ) & 0x3fe00) >> 9)
#define CANUTIL_GET_VALUE_VCFRONT_coolantFlowBatTarget(d) ((*( (uint64_t *) d ) & 0xff800000000000) >> 47)
#define CANUTIL_GET_VALUE_VCFRONT_coolantFlowBatReason(d) ((*( (uint64_t *) d ) & 0x3c000000000) >> 38)

typedef enum { 
  NONE = 0,
  COOLANT_AIR_PURGE = 1,
  NO_FLOW_REQ = 2,
  OVERRIDE_BATT = 3,
  ACTIVE_MANAGER_BATT = 4,
  PASSIVE_MANAGER_BATT = 5,
  BMS_FLOW_REQ = 6,
  DAS_FLOW_REQ = 7,
  OVERRIDE_PT = 8,
  ACTIVE_MANAGER_PT = 9,
  PASSIVE_MANAGER_PT = 10,
  PCS_FLOW_REQ = 11,
  DI_FLOW_REQ = 12,
  DIS_FLOW_REQ = 13,
  HP_FLOW_REQ = 14
 } canutil_VCFRONT_coolantFlowBatReason_vals;

#define CANUTIL_GET_VALUE_VCFRONT_coolantFlowPTActual(d) ((*( (uint64_t *) d ) & 0x7fc00000000) >> 34)
#define CANUTIL_GET_VALUE_VCFRONT_coolantFlowPTTarget(d) ((*( (uint64_t *) d ) & 0x3fe000000) >> 25)
#define CANUTIL_GET_VALUE_VCFRONT_coolantFlowPTReason(d) ((*( (uint64_t *) d ) & 0xf0000) >> 16)

typedef enum { 
  NONE = 0,
  COOLANT_AIR_PURGE = 1,
  NO_FLOW_REQ = 2,
  OVERRIDE_BATT = 3,
  ACTIVE_MANAGER_BATT = 4,
  PASSIVE_MANAGER_BATT = 5,
  BMS_FLOW_REQ = 6,
  DAS_FLOW_REQ = 7,
  OVERRIDE_PT = 8,
  ACTIVE_MANAGER_PT = 9,
  PASSIVE_MANAGER_PT = 10,
  PCS_FLOW_REQ = 11,
  DI_FLOW_REQ = 12,
  DIS_FLOW_REQ = 13,
  HP_FLOW_REQ = 14
 } canutil_VCFRONT_coolantFlowPTReason_vals;

#define CANUTIL_GET_VALUE_VCFRONT_wasteHeatRequestType(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  WASTE_TYPE_NONE = 0,
  WASTE_TYPE_PARTIAL = 1,
  WASTE_TYPE_FULL = 2
 } canutil_VCFRONT_wasteHeatRequestType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_coolantHasBeenFilled(d) ((*( (uint64_t *) d ) & 0x400) >> 10)
#define CANUTIL_GET_VALUE_VCFRONT_radiatorIneffective(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_VCFRONT_coolantAirPurgeBatState(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  AIR_PURGE_STATE_INACTIVE = 0,
  AIR_PURGE_STATE_ACTIVE = 1,
  AIR_PURGE_STATE_COMPLETE = 2,
  AIR_PURGE_STATE_INTERRUPTED = 3,
  AIR_PURGE_STATE_PENDING = 4
 } canutil_VCFRONT_coolantAirPurgeBatState_vals;

#define CANUTIL_ID3BBUI_power 0x3bb

#define CANUTIL_GET_VALUE_UI_powerExpected(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_UI_powerIdeal(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID5D5RearDItemps 0x5d5

#define CANUTIL_GET_VALUE_DI_ph1Temp(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DI_ph2Temp(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DI_ph3Temp(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DI_pcbTemp2(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DI_IGBTJunctTemp(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  SNA = 255
 } canutil_DI_IGBTJunctTemp_vals;

#define CANUTIL_ID556FrontDItemps 0x556

#define CANUTIL_GET_VALUE_DIF_ph1Temp(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIF_ph2Temp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_ph3Temp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_pcbTemp2(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_IGBTJunctTemp(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_DIF_IGBTJunctTemp_vals;

#define CANUTIL_GET_VALUE_DIF_lashAngle(d) ((*( (uint64_t *) d ) & 0x3ff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_lashCheckCount(d) ((*( (uint64_t *) d ) & 0xfc0) >> 6)
#define CANUTIL_ID557FrontThermalControl 0x557

#define CANUTIL_GET_VALUE_DIS_passiveInletTempReq(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIS_activeInletTempReq(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIS_coolantFlowReq(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIS_oilFlowReq(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID5D7RearThermalControl 0x5d7

#define CANUTIL_GET_VALUE_DI_passiveInletTempReq(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DI_activeInletTempReq(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DI_coolantFlowReq(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DI_oilFlowReq(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID7D5DIR_debug 0x7d5

#define CANUTIL_GET_VALUE_DIR_debugSelector(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIR_cpu10HzMin(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_cpu1kHzMin(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_dcCapTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_gainScale(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_gateDriveSupplyState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  PSTG_GD_SUPPLY_DOWN = 0,
  PSTG_GD_SUPPLY_RISING = 1,
  PSTG_GD_SUPPLY_UP = 2,
  PSTG_GD_SUPPLY_FALLING = 3
 } canutil_DIR_gateDriveSupplyState_vals;

#define CANUTIL_GET_VALUE_DIR_hwFaultCount(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_lmScale(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_motorType(d) ((*( (uint64_t *) d ) & 0x3f00000000000000) >> 56)

typedef enum { 
  DI_MOTOR_SNA = 0,
  DI_MOTOR_ROADSTER_BASE = 1,
  DI_MOTOR_ROADSTER_SPORT = 2,
  DI_MOTOR_M7M3 = 3,
  DI_MOTOR_M7M4 = 4,
  DI_MOTOR_M7M5 = 5,
  DI_MOTOR_M8A = 6,
  DI_MOTOR_M7M6 = 7,
  DI_MOTOR_F1A = 8,
  DI_MOTOR_SSR1A = 9,
  DI_MOTOR_F1AC = 10,
  DI_MOTOR_F2AB = 11,
  DI_MOTOR_F2AC = 12,
  DI_MOTOR_F2AD = 13,
  DI_MOTOR_F2AE = 14,
  DI_MOTOR_F2APMSRM = 15,
  DI_MOTOR_PM216A = 16,
  DI_MOTOR_IM100A = 17,
  DI_MOTOR_PM216B = 18,
  DI_MOTOR_IM100B = 19,
  DI_MOTOR_IM216A = 20,
  DI_MOTOR_PM216C = 21,
  DI_MOTOR_IM130C = 22,
  DI_MOTOR_PM216D = 23,
  DI_MOTOR_IM130D = 24,
  DI_MOTOR_IM130D_AL = 25,
  DI_MOTOR_F2AE_AL = 26,
  DI_MOTOR_IM130D_AL_POSCO = 27,
  DI_MOTOR_PM275B = 28,
  DI_MOTOR_PM350B = 29,
  DI_MOTOR_PM216CSR = 30,
  DI_MOTOR_PM216CSR_N42 = 31,
  DI_MOTOR_PM228B = 32
 } canutil_DIR_motorType_vals;

#define CANUTIL_GET_VALUE_DIR_offsetA(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_offsetB(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_oilPumpMotorSpeed(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_phaseOutBusbarTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_pwrSatChargeCurrent(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_pwrSatDischargeCurrent(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_resolverOffsetCos(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_rotorOffsetEst(d) ((*( (uint64_t *) d ) & 0xfff0) >> 4)
#define CANUTIL_GET_VALUE_DIR_rotorOffsetLearningState(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  ROL_STATE_INIT = 0,
  ROL_STATE_WAIT = 1,
  ROL_STATE_ACCELERATE = 2,
  ROL_STATE_SHIFT = 3,
  ROL_STATE_MEASURE = 4,
  ROL_STATE_CORRECT = 5,
  ROL_STATE_VERIFY = 6,
  ROL_STATE_WRITE = 7,
  ROL_STATE_DONE = 8,
  ROL_NUM_STATES = 9
 } canutil_DIR_rotorOffsetLearningState_vals;

#define CANUTIL_GET_VALUE_DIR_rsScale(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_soptTimeToTrip(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_ssmState(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  SSM_STATE_START = 0,
  SSM_STATE_UNAVAILABLE = 1,
  SSM_STATE_IDLE = 2,
  SSM_STATE_STANDBY = 3,
  SSM_STATE_ENABLE = 4,
  SSM_STATE_ABORT = 5,
  SSM_STATE_WAIT_FOR_RETRY = 6,
  SSM_STATE_RETRY = 7,
  SSM_STATE_FAULT = 8
 } canutil_DIR_ssmState_vals;

#define CANUTIL_GET_VALUE_DIR_statorEndWindingTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_systemStack(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_tqSatThermal(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_tqScaleDifferential(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_veMassInvRaw(d) ((*( (uint64_t *) d ) & 0xfff0) >> 4)
#define CANUTIL_GET_VALUE_DIR_gateDriveState(d) ((*( (uint64_t *) d ) & 0x1c0000000000000) >> 54)

typedef enum { 
  PSTG_GD_STATE_INIT = 0,
  PSTG_GD_STATE_SELFTEST = 1,
  PSTG_GD_STATE_CONFIGURING = 2,
  PSTG_GD_STATE_CONFIGURED = 3,
  PSTG_GD_STATE_NOT_CONFIGURED = 4
 } canutil_DIR_gateDriveState_vals;

#define CANUTIL_GET_VALUE_DIR_usmState(d) ((*( (uint64_t *) d ) & 0x70000000000000) >> 52)

typedef enum { 
  USM_STATE_START = 0,
  USM_STATE_STANDBY = 1,
  USM_STATE_RETRY = 2,
  USM_STATE_ABORT = 3,
  USM_STATE_ENABLE = 4,
  USM_STATE_FAULT = 5,
  USM_STATE_UNAVAILABLE = 6,
  USM_STATE_WAIT_FOR_RETRY = 7
 } canutil_DIR_usmState_vals;

#define CANUTIL_GET_VALUE_DIR_powerStageSafeState(d) ((*( (uint64_t *) d ) & 0x18000000000000) >> 51)

typedef enum { 
  PSTG_SAFESTATE_NONE = 0,
  PSTG_SAFESTATE_ALL_OFF = 1,
  PSTG_SAFESTATE_3PS_HIGH = 2,
  PSTG_SAFESTATE_3PS_LOW = 3
 } canutil_DIR_powerStageSafeState_vals;

#define CANUTIL_GET_VALUE_DIR_busbarTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_cpu10HzAvg(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_cpu1HzMin(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_cpu1kHzAvg(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_cpuIDWord0(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_cpuIDWord1(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_dcCableCurrentEst(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_fluxState(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  DI_FLUXSTATE_START = 0,
  DI_FLUXSTATE_TEST = 1,
  DI_FLUXSTATE_STANDBY = 2,
  DI_FLUXSTATE_FLUX_UP = 3,
  DI_FLUXSTATE_FLUX_DOWN = 4,
  DI_FLUXSTATE_ENABLED = 5,
  DI_FLUXSTATE_ICONTROL = 6,
  DI_FLUXSTATE_VCONTROL = 7,
  DI_FLUXSTATE_FAULT = 9,
  DI_FLUXSTATE_STATIONARY_WASTE = 10
 } canutil_DIR_fluxState_vals;

#define CANUTIL_GET_VALUE_DIR_idleStack(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_motorIA(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_oilPumpPhaseVoltage(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_DIR_oilPumpPhaseVoltage_vals;

#define CANUTIL_GET_VALUE_DIR_peakIQref(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_phaseOutBusbarWeldTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_pwrSatMaxDischargePower(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_resolverCosRmsSquared(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_resolverOffsetSin(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_rotorFlux(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_rotorMaxMagnetTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_soptTripDelay(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_statorFluxRef(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_statorIDref(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_statorIQref(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_statorVDFiltered(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_statorVQ(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_sysHeatPowerOptimal(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_tcMaxRequest(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_DIR_tcMaxRequest_vals;

#define CANUTIL_GET_VALUE_DIR_rotorOffsetMean(d) ((*( (uint64_t *) d ) & 0xfff00000000000) >> 44)
#define CANUTIL_GET_VALUE_DIR_veResForce(d) ((*( (uint64_t *) d ) & 0xfff00000000000) >> 44)
#define CANUTIL_GET_VALUE_DIR_cpu100HzMin(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_cpu1HzAvg(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_cpu20kHzMin(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_decodeHardwareStack(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_llsScale(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_oilPumpPressureEstimateMax(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 255
 } canutil_DIR_oilPumpPressureEstimateMax_vals;

#define CANUTIL_GET_VALUE_DIR_pcsTemp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_phaseOutLugTemp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_pwrSatMaxRegenPower(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_resolverPhaseOffset(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_resolverSinRmsSquared(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_soptTimeToOff(d) ((*( (uint64_t *) d ) & 0x7ff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_tcMinRequest(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 255
 } canutil_DIR_tcMinRequest_vals;

#define CANUTIL_GET_VALUE_DIR_cpu100HzAvg(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_cpu20kHzAvg(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_cpuIDWord2(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_crc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_currentLimit(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_dcCableHeat(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_dcLinkCapTemp(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_driveUnitOdometer(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_eepromStack(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_llrScale(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_loadAngleMargin(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_motorIAavg(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_motorIB(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_oilPumpPressureExpectedMin(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_DIR_oilPumpPressureExpectedMin_vals;

#define CANUTIL_GET_VALUE_DIR_resolverCommonGain(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_resolverCosFiltered(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_statorFluxFdb(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_statorIDfdb(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_statorIQfdb(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_statorTemp1(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_statorVD(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_statorVQFiltered(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_tqSatMotorVoltage(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_tqSatUiDriveTorque(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_controlStack(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_cpu10msMin(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_hvDcCableTemp(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_loadAngle(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_resolverReady(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_resolverSinFiltered(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_soptMaxCurrentMagSqrd(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_statorTemp2(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_tqSatMotorCurrent(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_tqSatUiRegenTorque(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_udsStack(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_resolverNoCarrier(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_DIR_resolverNoPhaseLock(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_DIR_resolverClaMIA(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_DIR_cpuIDWord3(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_internalAngleFilt(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_magnetTempEst(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 0
 } canutil_DIR_magnetTempEst_vals;

#define CANUTIL_GET_VALUE_DIR_module10HzStack(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_motorIBavg(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_motorIC(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_motorV(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_negDcBusbarTemp(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_peakFlux(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_pwmState(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  PWMSTATE_SVPWM = 0,
  PWMSTATE_DPWM2 = 1,
  PWMSTATE_OPWM1 = 2,
  PWMSTATE_OPWM2 = 3
 } canutil_DIR_pwmState_vals;

#define CANUTIL_GET_VALUE_DIR_pwrSatMaxBusVoltage(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_resolverErrorRmsSquared(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_systemTorqueCommand(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_torquePerAmp(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_tqScaleMaxMotorSpeed(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_wasteCurrentLimit(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_xcpStack(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_immobilizerStack(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIR_posDcBusbarTemp(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIR_pwrSatMinBusVoltage(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIR_tqScaleShift(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIR_brakeSwitchNO(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_DIR_brakeSwitchNC(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID757DIF_debug 0x757

#define CANUTIL_GET_VALUE_DIF_debugSelector(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIF_cpu10HzMin(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_cpu1kHzMin(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_dcCapTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_gainScale(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_gateDriveSupplyState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  PSTG_GD_SUPPLY_DOWN = 0,
  PSTG_GD_SUPPLY_RISING = 1,
  PSTG_GD_SUPPLY_UP = 2,
  PSTG_GD_SUPPLY_FALLING = 3
 } canutil_DIF_gateDriveSupplyState_vals;

#define CANUTIL_GET_VALUE_DIF_hwFaultCount(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_lmScale(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_motorType(d) ((*( (uint64_t *) d ) & 0x3f00000000000000) >> 56)

typedef enum { 
  DI_MOTOR_SNA = 0,
  DI_MOTOR_ROADSTER_BASE = 1,
  DI_MOTOR_ROADSTER_SPORT = 2,
  DI_MOTOR_M7M3 = 3,
  DI_MOTOR_M7M4 = 4,
  DI_MOTOR_M7M5 = 5,
  DI_MOTOR_M8A = 6,
  DI_MOTOR_M7M6 = 7,
  DI_MOTOR_F1A = 8,
  DI_MOTOR_SSR1A = 9,
  DI_MOTOR_F1AC = 10,
  DI_MOTOR_F2AB = 11,
  DI_MOTOR_F2AC = 12,
  DI_MOTOR_F2AD = 13,
  DI_MOTOR_F2AE = 14,
  DI_MOTOR_F2APMSRM = 15,
  DI_MOTOR_PM216A = 16,
  DI_MOTOR_IM100A = 17,
  DI_MOTOR_PM216B = 18,
  DI_MOTOR_IM100B = 19,
  DI_MOTOR_IM216A = 20,
  DI_MOTOR_PM216C = 21,
  DI_MOTOR_IM130C = 22,
  DI_MOTOR_PM216D = 23,
  DI_MOTOR_IM130D = 24,
  DI_MOTOR_IM130D_AL = 25,
  DI_MOTOR_F2AE_AL = 26,
  DI_MOTOR_IM130D_AL_POSCO = 27,
  DI_MOTOR_PM275B = 28,
  DI_MOTOR_PM350B = 29,
  DI_MOTOR_PM216CSR = 30,
  DI_MOTOR_PM216CSR_N42 = 31,
  DI_MOTOR_PM228B = 32
 } canutil_DIF_motorType_vals;

#define CANUTIL_GET_VALUE_DIF_offsetA(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_offsetB(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_oilPumpMotorSpeed(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_phaseOutBusbarTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_pwrSatChargeCurrent(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_pwrSatDischargeCurrent(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_resolverOffsetCos(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_rotorOffsetEst(d) ((*( (uint64_t *) d ) & 0xfff0) >> 4)
#define CANUTIL_GET_VALUE_DIF_rotorOffsetLearningState(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  ROL_STATE_INIT = 0,
  ROL_STATE_WAIT = 1,
  ROL_STATE_ACCELERATE = 2,
  ROL_STATE_SHIFT = 3,
  ROL_STATE_MEASURE = 4,
  ROL_STATE_CORRECT = 5,
  ROL_STATE_VERIFY = 6,
  ROL_STATE_WRITE = 7,
  ROL_STATE_DONE = 8,
  ROL_NUM_STATES = 9
 } canutil_DIF_rotorOffsetLearningState_vals;

#define CANUTIL_GET_VALUE_DIF_rsScale(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_soptTimeToTrip(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_ssmState(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  SSM_STATE_START = 0,
  SSM_STATE_UNAVAILABLE = 1,
  SSM_STATE_IDLE = 2,
  SSM_STATE_STANDBY = 3,
  SSM_STATE_ENABLE = 4,
  SSM_STATE_ABORT = 5,
  SSM_STATE_WAIT_FOR_RETRY = 6,
  SSM_STATE_RETRY = 7,
  SSM_STATE_FAULT = 8
 } canutil_DIF_ssmState_vals;

#define CANUTIL_GET_VALUE_DIF_statorEndWindingTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_systemStack(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_tqSatThermal(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_tqScaleDifferential(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_veMassInvRaw(d) ((*( (uint64_t *) d ) & 0xfff0) >> 4)
#define CANUTIL_GET_VALUE_DIF_gateDriveState(d) ((*( (uint64_t *) d ) & 0x1c0000000000000) >> 54)

typedef enum { 
  PSTG_GD_STATE_INIT = 0,
  PSTG_GD_STATE_SELFTEST = 1,
  PSTG_GD_STATE_CONFIGURING = 2,
  PSTG_GD_STATE_CONFIGURED = 3,
  PSTG_GD_STATE_NOT_CONFIGURED = 4
 } canutil_DIF_gateDriveState_vals;

#define CANUTIL_GET_VALUE_DIF_usmState(d) ((*( (uint64_t *) d ) & 0x70000000000000) >> 52)

typedef enum { 
  USM_STATE_START = 0,
  USM_STATE_STANDBY = 1,
  USM_STATE_RETRY = 2,
  USM_STATE_ABORT = 3,
  USM_STATE_ENABLE = 4,
  USM_STATE_FAULT = 5,
  USM_STATE_UNAVAILABLE = 6,
  USM_STATE_WAIT_FOR_RETRY = 7
 } canutil_DIF_usmState_vals;

#define CANUTIL_GET_VALUE_DIF_powerStageSafeState(d) ((*( (uint64_t *) d ) & 0x18000000000000) >> 51)

typedef enum { 
  PSTG_SAFESTATE_NONE = 0,
  PSTG_SAFESTATE_ALL_OFF = 1,
  PSTG_SAFESTATE_3PS_HIGH = 2,
  PSTG_SAFESTATE_3PS_LOW = 3
 } canutil_DIF_powerStageSafeState_vals;

#define CANUTIL_GET_VALUE_DIF_busbarTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_cpu10HzAvg(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_cpu1HzMin(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_cpu1kHzAvg(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_cpuIDWord0(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_cpuIDWord1(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_dcCableCurrentEst(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_fluxState(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  DI_FLUXSTATE_START = 0,
  DI_FLUXSTATE_TEST = 1,
  DI_FLUXSTATE_STANDBY = 2,
  DI_FLUXSTATE_FLUX_UP = 3,
  DI_FLUXSTATE_FLUX_DOWN = 4,
  DI_FLUXSTATE_ENABLED = 5,
  DI_FLUXSTATE_ICONTROL = 6,
  DI_FLUXSTATE_VCONTROL = 7,
  DI_FLUXSTATE_FAULT = 9,
  DI_FLUXSTATE_STATIONARY_WASTE = 10
 } canutil_DIF_fluxState_vals;

#define CANUTIL_GET_VALUE_DIF_idleStack(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_motorIA(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_oilPumpPhaseVoltage(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_DIF_oilPumpPhaseVoltage_vals;

#define CANUTIL_GET_VALUE_DIF_peakIQref(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_phaseOutBusbarWeldTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_pwrSatMaxDischargePower(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_resolverCosRmsSquared(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_resolverOffsetSin(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_rotorFlux(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_rotorMaxMagnetTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_soptTripDelay(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_statorFluxRef(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_statorIDref(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_statorIQref(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_statorVDFiltered(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_statorVQ(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_sysHeatPowerOptimal(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIF_tcMaxRequest(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_DIF_tcMaxRequest_vals;

#define CANUTIL_GET_VALUE_DIF_rotorOffsetMean(d) ((*( (uint64_t *) d ) & 0xfff00000000000) >> 44)
#define CANUTIL_GET_VALUE_DIF_veResForce(d) ((*( (uint64_t *) d ) & 0xfff00000000000) >> 44)
#define CANUTIL_GET_VALUE_DIF_cpu100HzMin(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_cpu1HzAvg(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_cpu20kHzMin(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_decodeHardwareStack(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_llsScale(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_oilPumpPressureEstimateMax(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 255
 } canutil_DIF_oilPumpPressureEstimateMax_vals;

#define CANUTIL_GET_VALUE_DIF_pcsTemp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_phaseOutLugTemp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_pwrSatMaxRegenPower(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_resolverPhaseOffset(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_resolverSinRmsSquared(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_soptTimeToOff(d) ((*( (uint64_t *) d ) & 0x7ff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIF_tcMinRequest(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 255
 } canutil_DIF_tcMinRequest_vals;

#define CANUTIL_GET_VALUE_DIF_cpu100HzAvg(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_cpu20kHzAvg(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_cpuIDWord2(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_crc(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_currentLimit(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_dcCableHeat(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_dcLinkCapTemp(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_driveUnitOdometer(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_eepromStack(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_llrScale(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_loadAngleMargin(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_motorIAavg(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_motorIB(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_oilPumpPressureExpectedMin(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_DIF_oilPumpPressureExpectedMin_vals;

#define CANUTIL_GET_VALUE_DIF_resolverCommonGain(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_resolverCosFiltered(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_statorFluxFdb(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_statorIDfdb(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_statorIQfdb(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_statorTemp1(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_statorVD(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_statorVQFiltered(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_tqSatMotorVoltage(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_tqSatUiDriveTorque(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_controlStack(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_cpu10msMin(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_hvDcCableTemp(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_loadAngle(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_resolverReady(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_resolverSinFiltered(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_soptMaxCurrentMagSqrd(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_statorTemp2(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_tqSatMotorCurrent(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_tqSatUiRegenTorque(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_udsStack(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIF_resolverNoCarrier(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_DIF_resolverNoPhaseLock(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_DIF_resolverClaMIA(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_DIF_cpuIDWord3(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_internalAngleFilt(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_magnetTempEst(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 0
 } canutil_DIF_magnetTempEst_vals;

#define CANUTIL_GET_VALUE_DIF_module10HzStack(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_motorIBavg(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_motorIC(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_motorV(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_negDcBusbarTemp(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_peakFlux(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_pwmState(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  PWMSTATE_SVPWM = 0,
  PWMSTATE_DPWM2 = 1,
  PWMSTATE_OPWM1 = 2,
  PWMSTATE_OPWM2 = 3
 } canutil_DIF_pwmState_vals;

#define CANUTIL_GET_VALUE_DIF_pwrSatMaxBusVoltage(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_resolverErrorRmsSquared(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_systemTorqueCommand(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_torquePerAmp(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_tqScaleMaxMotorSpeed(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_wasteCurrentLimit(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_xcpStack(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_immobilizerStack(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIF_posDcBusbarTemp(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIF_pwrSatMinBusVoltage(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIF_tqScaleShift(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIF_brakeSwitchNO(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_DIF_brakeSwitchNC(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID2B6DI_chassisControlStatus 0x2b6

#define CANUTIL_GET_VALUE_DI_vdcTelltaleFlash(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_DI_vdcTelltaleOn(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_DI_tcTelltaleFlash(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_DI_tcTelltaleOn(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_DI_tractionControlModeUI(d) ((*( (uint64_t *) d ) & 0x7000) >> 12)

typedef enum { 
  NORMAL = 0,
  SLIP_START = 1,
  DEV_MODE_1 = 2,
  DEV_MODE_2 = 3,
  ROLLS_MODE = 4,
  DYNO_MODE = 5,
  OFFROAD_ASSIST = 6
 } canutil_DI_tractionControlModeUI_vals;

#define CANUTIL_GET_VALUE_DI_ptcStateUI(d) ((*( (uint64_t *) d ) & 0x600) >> 9)

typedef enum { 
  FAULTED = 0,
  BACKUP = 1,
  ON = 2,
  SNA = 3
 } canutil_DI_ptcStateUI_vals;

#define CANUTIL_GET_VALUE_DI_btcStateUI(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_DI_vehicleHoldTelltaleOn(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_ID284UIvehicleModes 0x284

#define CANUTIL_GET_VALUE_UIfactoryMode284(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_UItransportMode284(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_UIshowroomMode284(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_UIserviceMode284(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_UIisDelivered284(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_UIsentryMode284(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_UIhomelinkV2Command0284(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_UIhomelinkV2Command1284(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_UIhomelinkV2Command2284(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_UIcarWashModeRequest284(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_UIvaletMode284(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_UIgameMode284(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_ID221VCFRONT_LVPowerState 0x221

#define CANUTIL_GET_VALUE_VCFRONT_LVPowerStateIndex(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)

typedef enum { 
  Mux0 = 0,
  Mux1 = 1
 } canutil_VCFRONT_LVPowerStateIndex_vals;

#define CANUTIL_GET_VALUE_VCFRONT_cpLVRequest(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_cpLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_parkLVState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_parkLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_epasLVState(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_epasLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_espLVState(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_espLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hvcLVRequest(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_hvcLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_radcLVState(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_radcLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hvacCompLVState(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_hvacCompLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tasLVState(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_tasLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_pcsLVState(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_pcsLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ptcLVRequest(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_ptcLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_CMPDLVState(d) ((*( (uint64_t *) d ) & 0xc00000000000) >> 46)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_CMPDLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_sccmLVRequest(d) ((*( (uint64_t *) d ) & 0xc00000000000) >> 46)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_sccmLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tpmsLVRequest(d) ((*( (uint64_t *) d ) & 0x300000000000) >> 44)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_tpmsLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_rcmLVRequest(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_rcmLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_iBoosterLVState(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_iBoosterLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tunerLVRequest(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_tunerLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_amplifierLVRequest(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_amplifierLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_das1HighCurrentLVState(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_das1HighCurrentLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_das2HighCurrentLVState(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_das2HighCurrentLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_dirLVRequest(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_dirLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_difLVState(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_difLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_oilPumpFrontLVState(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_oilPumpFrontLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_oilPumpRearLVRequest(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_oilPumpRearLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ocsLVRequest(d) ((*( (uint64_t *) d ) & 0xc00000) >> 22)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_ocsLVRequest_vals;

#define CANUTIL_GET_VALUE_VCFRONT_vcleftHiCurrentLVState(d) ((*( (uint64_t *) d ) & 0x300000) >> 20)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_vcleftHiCurrentLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_vcrightHiCurrentLVState(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_vcrightHiCurrentLVState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_uiHiCurrentLVState(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCFRONT_uiHiCurrentLVState_vals;

#define CANUTIL_ID225VCRIGHT_LVPowerState 0x225

#define CANUTIL_GET_VALUE_VCRIGHT_ptcLVState(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_ptcLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_ocsLVState(d) ((*( (uint64_t *) d ) & 0xc00000) >> 22)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_ocsLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_amplifierLVState(d) ((*( (uint64_t *) d ) & 0x300000) >> 20)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_amplifierLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_rearOilPumpLVState(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_rearOilPumpLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_tunerLVState(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_tunerLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvcLVState(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_hvcLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_rcmLVState(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_rcmLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_lumbarLVState(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCRIGHT_lumbarLVState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_cntctrPwrState(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_VCRIGHT_eFuseLockoutStatus(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  EFUSE_LOCKOUT_STATUS_IDLE = 0,
  EFUSE_LOCKOUT_STATUS_PENDING = 1,
  EFUSE_LOCKOUT_STATUS_ACTIVE = 2
 } canutil_VCRIGHT_eFuseLockoutStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_swEnStatus(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_VCRIGHT_vehiclePowerStateDBG(d) ((*( (uint64_t *) d ) & 0x18) >> 3)

typedef enum { 
  VEHICLE_POWER_STATE_OFF = 0,
  VEHICLE_POWER_STATE_CONDITIONING = 1,
  VEHICLE_POWER_STATE_ACCESSORY = 2,
  VEHICLE_POWER_STATE_DRIVE = 3
 } canutil_VCRIGHT_vehiclePowerStateDBG_vals;

#define CANUTIL_ID2F1VCFRONT_eFuseDebugStatus 0x2f1

#define CANUTIL_GET_VALUE_VCFRONT_eFuseDebugStatusIndex(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)

typedef enum { 
  VCF_DBG_STS_VCRIGHT = 0,
  VCF_DBG_STS_VCLEFT = 1,
  VCF_DBG_STS_PCS = 2,
  VCF_DBG_STS_IBOOSTER = 3,
  VCF_DBG_STS_EPAS3P = 4,
  VCF_DBG_STS_EPAS3S = 5,
  VCF_DBG_STS_ESP_MOTOR = 6,
  VCF_DBG_STS_ESP_VALVE = 7,
  VCF_DBG_STS_AUTOPILOT_1 = 8,
  VCF_DBG_STS_AUTOPILOT_2 = 9,
  VCF_DBG_STS_SLEEP_BYPASS = 10,
  VCF_DBG_STS_UI = 11,
  VCF_DBG_STS_HEADLAMPS = 12,
  VCF_DBG_STS_VBAT_FUSED_HIGH_CURRENT = 13,
  VCF_DBG_STS_PUMPS = 14,
  VCF_DBG_STS_RAILS_A_B = 15,
  VCF_DBG_STS_MISC_RAILS = 16,
  VCF_DBG_STS_LV_BATTERY_DEBUG = 17,
  VCF_DBG_STS_INVALID = 18
 } canutil_VCFRONT_eFuseDebugStatusIndex_vals;

#define CANUTIL_GET_VALUE_VCFRONT_pump1AndFanState(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_VCFRONT_uiAudioState(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_VCFRONT_pump1AndFanCurrent(d) ((*( (uint64_t *) d ) & 0x3fffc00) >> 10)
#define CANUTIL_GET_VALUE_VCFRONT_uiAudioFault(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3PState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_EPAS3PState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_EPAS3SState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_EPAS3SState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ESPMotorState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_ESPMotorState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ESPValveState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_ESPValveState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_PCSState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_PCSState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_autopilot1State(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_autopilot1State_vals;

#define CANUTIL_GET_VALUE_VCFRONT_autopilot2State(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_autopilot2State_vals;

#define CANUTIL_GET_VALUE_VCFRONT_chargedIBSAmpHours(d) ((*( (uint64_t *) d ) & 0xffff00) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_eFuseLockoutVoltage(d) ((*( (uint64_t *) d ) & 0xfff0) >> 4)
#define CANUTIL_GET_VALUE_VCFRONT_headlampLeftState(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_iBoosterState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_iBoosterState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_leftControllerState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_leftControllerState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_railA_12v(d) ((*( (uint64_t *) d ) & 0xfff0) >> 4)
#define CANUTIL_GET_VALUE_VCFRONT_rightControllerState(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  EFUSE_STATE_OFF = 0,
  EFUSE_STATE_ON = 1,
  EFUSE_STATE_LOCKED_OUT = 2
 } canutil_VCFRONT_rightControllerState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_sleepBypassState(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_uiAudioCurrent(d) ((*( (uint64_t *) d ) & 0xffff00) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_vbatFusedHighState(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_headlampLeftFault(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCFRONT_sleepBypassFault(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCFRONT_vbatFusedHighFault(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3PFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3SFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_ESPMotorFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_ESPValveFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_PCSFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_autopilot1Fault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_autopilot2Fault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_headlampLeftCurrent(d) ((*( (uint64_t *) d ) & 0xffc0000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_iBoosterFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_leftControllerFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_rightControllerFault(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_sleepBypassVoltage(d) ((*( (uint64_t *) d ) & 0x3fffc0) >> 6)
#define CANUTIL_GET_VALUE_VCFRONT_vbatFusedSelfTestResult(d) ((*( (uint64_t *) d ) & 0x3c0000000000000) >> 54)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_vbatFusedSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_EPAS3PSelfTestResult(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_EPAS3PSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_EPAS3SSelfTestResult(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_EPAS3SSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ESPMotorSelfTestResult(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_ESPMotorSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_autopilot1Temp(d) ((*( (uint64_t *) d ) & 0xffe0000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCFRONT_autopilot2Temp(d) ((*( (uint64_t *) d ) & 0xffe0000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCFRONT_iBoosterSelfTestResult(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_iBoosterSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_pcsSelfTestResult(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_pcsSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_vcleftSelfTestResult(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_vcleftSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_vcrightSelfTestResult(d) ((*( (uint64_t *) d ) & 0x1e0000000000000) >> 53)

typedef enum { 
  EFUSE_SELF_TEST_EFUSE_RESULT_NOT_RUN = 0,
  EFUSE_SELF_TEST_EFUSE_RESULT_RUNNING = 1,
  EFUSE_SELF_TEST_EFUSE_RESULT_PASSED = 2,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_RAILS_UNSTABLE = 3,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_EFUSE_OUTPUT_SHORT = 4,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_STUCK_ON = 5,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_LOW_MALFUNCTION = 6,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_POWER_FET_CHANNEL_OPEN = 7,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_ENABLE_HIGH_MALFUNCTION = 8,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_TURN_OFF_PATH_TOO_SLOW = 9,
  EFUSE_SELF_TEST_EFUSE_RESULT_FAILED_NOT_LATCHED = 10,
  EFUSE_SELF_TEST_EFUSE_RESULT_SKIPPED = 11
 } canutil_VCFRONT_vcrightSelfTestResult_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ESPValveTemp(d) ((*( (uint64_t *) d ) & 0x7ff0000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCFRONT_vbatFusedHighTemp(d) ((*( (uint64_t *) d ) & 0x1ffc000000000000) >> 50)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3PTemp(d) ((*( (uint64_t *) d ) & 0xffe000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3STemp(d) ((*( (uint64_t *) d ) & 0xffe000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_ESPMotorTemp(d) ((*( (uint64_t *) d ) & 0xffe000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_PCSTemp(d) ((*( (uint64_t *) d ) & 0xffe000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_iBoosterTemp(d) ((*( (uint64_t *) d ) & 0xffe000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_leftControllerTemp(d) ((*( (uint64_t *) d ) & 0xffe000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_rightControllerTemp(d) ((*( (uint64_t *) d ) & 0xffe000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_headlampLeftVoltage(d) ((*( (uint64_t *) d ) & 0xff00000000000) >> 44)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_headlampLeftVoltage_vals;

#define CANUTIL_GET_VALUE_VCFRONT_railB_12v(d) ((*( (uint64_t *) d ) & 0xfff00000000000) >> 44)
#define CANUTIL_GET_VALUE_VCFRONT_pump1AndFanVoltage(d) ((*( (uint64_t *) d ) & 0x3ffc0000000000) >> 42)
#define CANUTIL_GET_VALUE_VCFRONT_ChargePumpVoltage(d) ((*( (uint64_t *) d ) & 0xffff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_dischargedIBSAmpHours(d) ((*( (uint64_t *) d ) & 0xffff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_uiState(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_uiFault(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_VCFRONT_sleepBypassCurrent(d) ((*( (uint64_t *) d ) & 0x3fffc000000000) >> 38)
#define CANUTIL_GET_VALUE_VCFRONT_autopilot1Voltage(d) ((*( (uint64_t *) d ) & 0x1fffe000000000) >> 37)
#define CANUTIL_GET_VALUE_VCFRONT_autopilot2Voltage(d) ((*( (uint64_t *) d ) & 0x1fffe000000000) >> 37)
#define CANUTIL_GET_VALUE_VCFRONT_ESPValveVoltage(d) ((*( (uint64_t *) d ) & 0xffff000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_headlampRightState(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_headlampRightFault(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_VCFRONT_headlampRightCurrent(d) ((*( (uint64_t *) d ) & 0xffc00000000) >> 34)
#define CANUTIL_GET_VALUE_VCFRONT_vbatFusedHighVoltage(d) ((*( (uint64_t *) d ) & 0x3fffc00000000) >> 34)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3PVoltage(d) ((*( (uint64_t *) d ) & 0x1fffe00000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3SVoltage(d) ((*( (uint64_t *) d ) & 0x1fffe00000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_ESPMotorVoltage(d) ((*( (uint64_t *) d ) & 0x1fffe00000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_PCSVoltage(d) ((*( (uint64_t *) d ) & 0x1fffe00000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_iBoosterVoltage(d) ((*( (uint64_t *) d ) & 0x1fffe00000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_leftControllerVoltage(d) ((*( (uint64_t *) d ) & 0x1fffe00000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_rightControllerVoltage(d) ((*( (uint64_t *) d ) & 0x1fffe00000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_railA_5v(d) ((*( (uint64_t *) d ) & 0xfff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_uiCurrent(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_pump2AndAirCompState(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)
#define CANUTIL_GET_VALUE_VCFRONT_pump2AndAirCompCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000000) >> 29)
#define CANUTIL_GET_VALUE_VCFRONT_IBSUnfilteredTemperature(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_headlampRightVoltage(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_headlampRightVoltage_vals;

#define CANUTIL_GET_VALUE_VCFRONT_autopilot1Current(d) ((*( (uint64_t *) d ) & 0x1fffe00000) >> 21)
#define CANUTIL_GET_VALUE_VCFRONT_autopilot2Current(d) ((*( (uint64_t *) d ) & 0x1fffe00000) >> 21)
#define CANUTIL_GET_VALUE_VCFRONT_ESPValveCurrent(d) ((*( (uint64_t *) d ) & 0xffff00000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_railB_5v(d) ((*( (uint64_t *) d ) & 0xfff00000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_vbatFusedHighCurrent(d) ((*( (uint64_t *) d ) & 0x3fffc0000) >> 18)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3PCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_EPAS3SCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_ESPMotorCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_PCSCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_iBoosterCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_leftControllerCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_rightControllerCurrent(d) ((*( (uint64_t *) d ) & 0x1fffe0000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_headlampLeftTemperature(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_headlampLeftTemperature_vals;

#define CANUTIL_GET_VALUE_VCFRONT_pump2AndAirCompVoltage(d) ((*( (uint64_t *) d ) & 0x1ffe000) >> 13)
#define CANUTIL_GET_VALUE_VCFRONT_headlampRightTemperature(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_headlampRightTemperature_vals;

#define CANUTIL_ID242VCLEFT_LVPowerState 0x242

#define CANUTIL_GET_VALUE_VCLEFT_rcmLVState(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCLEFT_rcmLVState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_tpmsLVState(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCLEFT_tpmsLVState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_sccmLVState(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCLEFT_sccmLVState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_diLVState(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCLEFT_diLVState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_cpLVState(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCLEFT_cpLVState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcLVState(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCLEFT_swcLVState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_lumbarLVState(d) ((*( (uint64_t *) d ) & 0x30) >> 4)

typedef enum { 
  LV_OFF = 0,
  LV_ON = 1,
  LV_GOING_DOWN = 2,
  LV_FAULT = 3
 } canutil_VCLEFT_lumbarLVState_vals;

#define CANUTIL_GET_VALUE_VCLEFT_vehiclePowerStateDBG(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  VEHICLE_POWER_STATE_OFF = 0,
  VEHICLE_POWER_STATE_CONDITIONING = 1,
  VEHICLE_POWER_STATE_ACCESSORY = 2,
  VEHICLE_POWER_STATE_DRIVE = 3
 } canutil_VCLEFT_vehiclePowerStateDBG_vals;

#define CANUTIL_ID243VCRIGHT_hvacStatus 0x243

#define CANUTIL_GET_VALUE_VCRIGHT_hvacStatusIndex(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  STATUS_UI = 0,
  STATUS_VCFRONT = 1,
  STATUS_VCFRONT2 = 2,
  END = 3
 } canutil_VCRIGHT_hvacStatusIndex_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacMassflowRefrigSystem(d) ((*( (uint64_t *) d ) & 0x3fc0) >> 6)
#define CANUTIL_GET_VALUE_VCRIGHT_hvacQdotLeft(d) ((*( (uint64_t *) d ) & 0x3fff000) >> 12)
#define CANUTIL_GET_VALUE_VCRIGHT_tempDuctLeftUpper(d) ((*( (uint64_t *) d ) & 0x3fc0) >> 6)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_tempDuctLeftUpper_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacRecircDoorPercent(d) ((*( (uint64_t *) d ) & 0xfc0000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCRIGHT_tempDuctRightUpper(d) ((*( (uint64_t *) d ) & 0x3fc0000000000000) >> 54)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_tempDuctRightUpper_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacQdotRight(d) ((*( (uint64_t *) d ) & 0x3fff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCRIGHT_tempDuctLeft(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_tempDuctLeft_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacEvapInletTempEstimat(d) ((*( (uint64_t *) d ) & 0x7fe00000000000) >> 45)

typedef enum { 
  SNA = 1023
 } canutil_VCRIGHT_hvacEvapInletTempEstimat_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_tempDuctLeftLower(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_tempDuctLeftLower_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacCabinTempEst(d) ((*( (uint64_t *) d ) & 0x1ffc00000000) >> 34)
#define CANUTIL_GET_VALUE_VCRIGHT_tempDuctRight(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_tempDuctRight_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_tempDuctRightLower(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_tempDuctRightLower_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacAirDistributionMode(d) ((*( (uint64_t *) d ) & 0x3800000) >> 23)

typedef enum { 
  NONE = 0,
  FLOOR = 1,
  PANEL = 2,
  PANEL_FLOOR = 3,
  DEFROST = 4,
  DEFROST_FLOOR = 5,
  DEFROST_PANEL = 6,
  DEFROST_PANEL_FLOOR = 7
 } canutil_VCRIGHT_hvacAirDistributionMode_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacBlowerSegment(d) ((*( (uint64_t *) d ) & 0xf00000) >> 20)

typedef enum { 
  OFF = 0,
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
  5 = 5,
  6 = 6,
  7 = 7,
  8 = 8,
  9 = 9,
  10 = 10,
  11 = 11
 } canutil_VCRIGHT_hvacBlowerSegment_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacDuctTargetLeft(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_hvacDuctTargetLeft_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacRecirc(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  AUTO = 0,
  RECIRC = 1,
  FRESH = 2
 } canutil_VCRIGHT_hvacRecirc_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacACRunning(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)

typedef enum { 
  OFF = 0,
  ON = 1
 } canutil_VCRIGHT_hvacACRunning_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacPowerState(d) ((*( (uint64_t *) d ) & 0xe000) >> 13)

typedef enum { 
  OFF = 0,
  ON = 1,
  PRECONDITION = 2,
  OVERHEAT_PROTECT_FANONLY = 3,
  OVERHEAT_PROTECT = 4
 } canutil_VCRIGHT_hvacPowerState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacVentStatus(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  BOTH = 0,
  LEFT = 1,
  RIGHT = 2
 } canutil_VCRIGHT_hvacVentStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacDuctTargetRight(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_hvacDuctTargetRight_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacSecondRowState(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  AUTO = 0,
  OFF = 1,
  LOW = 2,
  MED = 3,
  HIGH = 4
 } canutil_VCRIGHT_hvacSecondRowState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacSystemNominal(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_GET_VALUE_VCRIGHT_hvacModelInitStatus(d) ((*( (uint64_t *) d ) & 0x70) >> 4)

typedef enum { 
  NOT_INIT_WAIT_FOR_SENSORS = 0,
  NOT_INIT_WAIT_FOR_GTW = 1,
  INIT_FROM_SENSORS = 2,
  INIT_FROM_SENSORS_PREDICTION_ERROR = 3,
  INIT_FORWARD_CALC = 4,
  INIT_WAITING_FOR_SENSORS = 5
 } canutil_VCRIGHT_hvacModelInitStatus_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacOverheatProtActive(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID20CVCRIGHT_hvacRequest 0x20c

#define CANUTIL_GET_VALUE_VCRIGHT_wattsDemandEvap(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)
#define CANUTIL_GET_VALUE_VCRIGHT_hvacEvapEnabled(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCRIGHT_conditioningRequest(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCRIGHT_tempEvaporator(d) ((*( (uint64_t *) d ) & 0x3ff8000000000000) >> 51)

typedef enum { 
  SNA = 2047
 } canutil_VCRIGHT_tempEvaporator_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_tempEvaporatorTarget(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 255
 } canutil_VCRIGHT_tempEvaporatorTarget_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacBlowerSpeedRPMReq(d) ((*( (uint64_t *) d ) & 0x3ff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCRIGHT_hvacPerfTestRunning(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_VCRIGHT_evapPerformanceLow(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_VCRIGHT_tempAmbientRaw(d) ((*( (uint64_t *) d ) & 0xff00000) >> 20)

typedef enum { 
  SNA = 0
 } canutil_VCRIGHT_tempAmbientRaw_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacHeatingEnabledLeft(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_VCRIGHT_hvacHeatingEnabledRight(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_VCRIGHT_hvacPerfTestState(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  STOPPED = 0,
  WAITING = 1,
  BLOWING = 2
 } canutil_VCRIGHT_hvacPerfTestState_vals;

#define CANUTIL_GET_VALUE_VCRIGHT_hvacUnavailable(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_ID2E1VCFRONT_status 0x2e1

#define CANUTIL_GET_VALUE_VCFRONT_statusIndex(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  VCF_STS_IDX_BODY_CONTROLS = 0,
  VCF_STS_IDX_VEHICLE_STATE = 1,
  VCF_STS_IDX_HOMELINK = 2,
  VCF_STS_IDX_REFRIGERANT_SYSTEM = 3,
  VCF_STS_IDX_LV_BATTERY = 4,
  VCF_STS_IDX_SYSTEM_HEALTH = 5,
  VCF_STS_IDX_INVALID = 6
 } canutil_VCFRONT_statusIndex_vals;

#define CANUTIL_GET_VALUE_VCFRONT_5VARailStable(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_VCFRONT_frunkLatchStatus(d) ((*( (uint64_t *) d ) & 0x1e) >> 1)

typedef enum { 
  LATCH_SNA = 0,
  LATCH_OPENED = 1,
  LATCH_CLOSED = 2,
  LATCH_CLOSING = 3,
  LATCH_OPENING = 4,
  LATCH_AJAR = 5,
  LATCH_TIMEOUT = 6,
  LATCH_DEFAULT = 7,
  LATCH_FAULT = 8
 } canutil_VCFRONT_frunkLatchStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_iBoosterWakeLine(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_VCFRONT_tempCompTargetVoltage(d) ((*( (uint64_t *) d ) & 0x1ff80) >> 7)
#define CANUTIL_GET_VALUE_VCFRONT_5VBRailStable(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_VCFRONT_epasWakeLine(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_VCFRONT_12VARailStable(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_VCFRONT_iBoosterStateDBG(d) ((*( (uint64_t *) d ) & 0x3800000000000000) >> 59)

typedef enum { 
  IBOOSTER_OFF = 0,
  IBOOSTER_ON = 1,
  IBOOSTER_GOING_DOWN = 2,
  IBOOSTER_WRITING_DATA_SHUTDOWN = 3,
  IBOOSTER_FORCE_OFF = 4
 } canutil_VCFRONT_iBoosterStateDBG_vals;

#define CANUTIL_GET_VALUE_VCFRONT_12VBRailStable(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_VCFRONT_railAState(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_VCFRONT_homelinkV2Response0(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_maxEvapHeatRejection(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_railBState(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_vehicleStatusDBG(d) ((*( (uint64_t *) d ) & 0x1f00000000000000) >> 56)

typedef enum { 
  VEHICLE_STATUS_INIT = 0,
  VEHICLE_STATUS_LOW_POWER_STANDBY = 1,
  VEHICLE_STATUS_SILENT_WAKE = 2,
  VEHICLE_STATUS_BATTERY_POST_WAKE = 3,
  VEHICLE_STATUS_SYSTEM_CHECKS = 4,
  VEHICLE_STATUS_SLEEP_SHUTDOWN = 5,
  VEHICLE_STATUS_SLEEP_STANDBY = 6,
  VEHICLE_STATUS_LV_SHUTDOWN = 7,
  VEHICLE_STATUS_LV_AWAKE = 8,
  VEHICLE_STATUS_HV_UP_STANDBY = 9,
  VEHICLE_STATUS_ACCESSORY = 10,
  VEHICLE_STATUS_ACCESSORY_PLUS = 11,
  VEHICLE_STATUS_CONDITIONING = 12,
  VEHICLE_STATUS_DRIVE = 13,
  VEHICLE_STATUS_CRASH = 14,
  VEHICLE_STATUS_OTA = 15,
  VEHICLE_STATUS_TURN_ON_RAILS = 16,
  VEHICLE_STATUS_RESET = 17
 } canutil_VCFRONT_vehicleStatusDBG_vals;

#define CANUTIL_GET_VALUE_VCFRONT_wiperSpeed(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  WIPER_SPEED_SNA = 0,
  WIPER_SPEED_OFF = 1,
  WIPER_SPEED_1 = 2,
  WIPER_SPEED_2 = 3,
  WIPER_SPEED_3 = 4,
  WIPER_SPEED_4 = 5,
  WIPER_SPEED_5 = 6,
  WIPER_SPEED_LOW = 7,
  WIPER_SPEED_HIGH = 8
 } canutil_VCFRONT_wiperSpeed_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ChargePumpVoltageStable(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCFRONT_PEResetLineState(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_HSDInitCompleteU13(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCFRONT_HSDInitCompleteU16(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCFRONT_wiperPosition(d) ((*( (uint64_t *) d ) & 0x70000000000000) >> 52)

typedef enum { 
  WIPER_POSITION_SNA = 0,
  WIPER_POSITION_SERVICE = 1,
  WIPER_POSITION_DEPRESSED_PARK = 2,
  WIPER_POSITION_DELAYED_REST = 3,
  WIPER_POSITION_WIPING = 4
 } canutil_VCFRONT_wiperPosition_vals;

#define CANUTIL_GET_VALUE_VCFRONT_chargeNeeded(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCFRONT_PCSMia(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)
#define CANUTIL_GET_VALUE_VCFRONT_IBSFault(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_12VOverchargeCounter(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_batterySMState(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  BATTERY_SM_STATE_INIT = 0,
  BATTERY_SM_STATE_CHARGE = 1,
  BATTERY_SM_STATE_DISCHARGE = 2,
  BATTERY_SM_STATE_STANDBY = 3,
  BATTERY_SM_STATE_RESISTANCE_ESTIMATION = 4,
  BATTERY_SM_STATE_OTA_STANDBY = 5,
  BATTERY_SM_STATE_DISCONNECTED_BATTERY_TEST = 6,
  BATTERY_SM_STATE_SHORTED_CELL_TEST = 7,
  BATTERY_SM_STATE_FAULT = 8
 } canutil_VCFRONT_batterySMState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_homelinkV2Response1(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_minEvapHeatRejection(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_vbatMonitorVoltage(d) ((*( (uint64_t *) d ) & 0xfff000000000000) >> 48)

typedef enum { 
  SNA = 4095
 } canutil_VCFRONT_vbatMonitorVoltage_vals;

#define CANUTIL_GET_VALUE_VCFRONT_wiperState(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  WIPER_STATE_SNA = 0,
  WIPER_STATE_SERVICE = 1,
  WIPER_STATE_FAULT = 2,
  WIPER_STATE_DELAYED_REST = 3,
  WIPER_STATE_PARK = 4,
  WIPER_STATE_WASH = 5,
  WIPER_STATE_MOMENTARY_WIPE = 6,
  WIPER_STATE_INTERMITTENT_HIGH = 7,
  WIPER_STATE_INTERMITTENT_LOW = 8,
  WIPER_STATE_CONT_FAST = 9,
  WIPER_STATE_CONT_SLOW = 10,
  WIPER_STATE_INT_AUTO_LOW = 11,
  WIPER_STATE_INT_AUTO_HIGH = 12
 } canutil_VCFRONT_wiperState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_crashDetectedType(d) ((*( (uint64_t *) d ) & 0x300000000000) >> 44)

typedef enum { 
  CRASH_DETECTED_TYPE_NONE = 0,
  CRASH_DETECTED_TYPE_MINOR_1 = 1,
  CRASH_DETECTED_TYPE_MINOR_2 = 2,
  CRASH_DETECTED_TYPE_SEVERE = 3
 } canutil_VCFRONT_crashDetectedType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_voltageDropCounter(d) ((*( (uint64_t *) d ) & 0xf00000000000) >> 44)
#define CANUTIL_GET_VALUE_VCFRONT_crashState(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  CRASH_STATE_IDLE = 0,
  CRASH_STATE_MINOR_1 = 1,
  CRASH_STATE_MINOR_2 = 2,
  CRASH_STATE_SEVERE = 3
 } canutil_VCFRONT_crashState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_crashUnlockOverrideSet(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_freezeEvapITerm(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_homelinkV2Response2(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_timeSpentSleeping(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_voltageFloorReachedCount(d) ((*( (uint64_t *) d ) & 0xf0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_airCompressorStatus(d) ((*( (uint64_t *) d ) & 0x38000000000) >> 39)

typedef enum { 
  VCFRONT_AIR_COMPRESSOR_STATUS_OFF = 0,
  VCFRONT_AIR_COMPRESSOR_STATUS_ON = 1,
  VCFRONT_AIR_COMPRESSOR_STATUS_TURNING_OFF = 2,
  VCFRONT_AIR_COMPRESSOR_STATUS_TURNING_ON = 3,
  VCFRONT_AIR_COMPRESSOR_STATUS_FAULT = 4,
  VCFRONT_AIR_COMPRESSOR_STATUS_RETRY_AVAILABLE = 5,
  VCFRONT_AIR_COMPRESSOR_STATUS_SNA = 7
 } canutil_VCFRONT_airCompressorStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_isEvapOperationAllowed(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_VCFRONT_chillerDemandActive(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_VCFRONT_compPerfRecoveryLimited(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_VCFRONT_AS8510Voltage(d) ((*( (uint64_t *) d ) & 0xfff000000000) >> 36)

typedef enum { 
  SNA = 4095
 } canutil_VCFRONT_AS8510Voltage_vals;

#define CANUTIL_GET_VALUE_VCFRONT_headlightLeftVPosition(d) ((*( (uint64_t *) d ) & 0x3ff000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_hvacModeNotAttainable(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_voltageProfile(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  VOLTAGE_PROFILE_CHARGE = 0,
  VOLTAGE_PROFILE_FLOAT = 1,
  VOLTAGE_PROFILE_REDUCED_FLOAT = 2,
  VOLTAGE_PROFILE_ALWAYS_CLOSED_CONTACTORS = 3
 } canutil_VCFRONT_voltageProfile_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hasLowRefrigerant(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)
#define CANUTIL_GET_VALUE_VCFRONT_isColdStartRunning(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_VCFRONT_reverseBatteryFault(d) ((*( (uint64_t *) d ) & 0x400000000) >> 34)
#define CANUTIL_GET_VALUE_VCFRONT_isHeatPumpOilPurgeActive(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)
#define CANUTIL_GET_VALUE_VCFRONT_homelinkV2Response3(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_pressureRefrigSuction(d) ((*( (uint64_t *) d ) & 0x7f00000000) >> 32)

typedef enum { 
  SNA = 127
 } canutil_VCFRONT_pressureRefrigSuction_vals;

#define CANUTIL_GET_VALUE_VCFRONT_silentWakeIBSCurrent(d) ((*( (uint64_t *) d ) & 0xfff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_sleepCurrent(d) ((*( (uint64_t *) d ) & 0xfff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_headlightRightVPosition(d) ((*( (uint64_t *) d ) & 0xffc000000) >> 26)
#define CANUTIL_GET_VALUE_VCFRONT_homelinkV2Response4(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_pressureRefrigDischarge(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_pressureRefrigDischarge_vals;

#define CANUTIL_GET_VALUE_VCFRONT_vbatProt(d) ((*( (uint64_t *) d ) & 0xfff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_shortedCellFaultCounter(d) ((*( (uint64_t *) d ) & 0x700000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_frunkInteriorRelSwitch(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_homelinkCommStatus(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  HOMELINK_COMM_STATUS_SNA = 0,
  HOMELINK_COMM_STATUS_OFF = 1,
  HOMELINK_COMM_STATUS_ON = 2,
  HOMELINK_COMM_STATUS_FAULT = 3
 } canutil_VCFRONT_homelinkCommStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hvacPerfTestCommand(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  NOT_STARTED = 0,
  INIT = 1,
  BLOW = 2,
  STOP = 3
 } canutil_VCFRONT_hvacPerfTestCommand_vals;

#define CANUTIL_GET_VALUE_VCFRONT_anyClosureOpen(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_VCFRONT_anyDoorOpen(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_VCFRONT_coolantFillRoutineStatus(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  NOT_READY = 0,
  MOVING_TO_FILL_POSITION = 1,
  READY_TO_FILL = 2,
  FAULTED = 3
 } canutil_VCFRONT_coolantFillRoutineStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hornOn(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_VCFRONT_radarHeaterState(d) ((*( (uint64_t *) d ) & 0x7000) >> 12)

typedef enum { 
  HEATER_STATE_SNA = 0,
  HEATER_STATE_ON = 1,
  HEATER_STATE_OFF = 2,
  HEATER_STATE_OFF_UNAVAILABLE = 3,
  HEATER_STATE_FAULT = 4
 } canutil_VCFRONT_radarHeaterState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_refrigFillRoutineStatus(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  NOT_READY = 0,
  MOVING_TO_FILL_POSITION = 1,
  READY_TO_FILL = 2,
  FAULTED = 3
 } canutil_VCFRONT_refrigFillRoutineStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_passengerBuckleStatus(d) ((*( (uint64_t *) d ) & 0x80) >> 7)

typedef enum { 
  UNBUCKLED = 0,
  BUCKLED = 1
 } canutil_VCFRONT_passengerBuckleStatus_vals;

#define CANUTIL_GET_VALUE_VCFRONT_frunkLatchType(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  FRUNK_LATCH_TYPE_UNKNOWN = 0,
  FRUNK_LATCH_TYPE_DOUBLE_ACTUATOR = 1,
  FRUNK_LATCH_TYPE_DOUBLE_PULL = 2
 } canutil_VCFRONT_frunkLatchType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_headlampLeftFanStatus(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_VCFRONT_headlampRightFanStatus(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCFRONT_frunkAccessPost(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_VCFRONT_isActiveHeatingBattery(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID381VCFRONT_logging1Hz 0x381

#define CANUTIL_GET_VALUE_VCFRONT_logging1HzIndex(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)

typedef enum { 
  COOLANT = 0,
  FAN_DEMAND_CONDENSER_AND_FET_TEMPS = 1,
  COOLANT_VALVE = 2,
  HCML_LED_TEMPS = 3,
  HCMR_LED_TEMPS = 4,
  HOMELINK = 5,
  HEADLAMP_AIM = 6,
  HP_EXV_RANGE = 7,
  HP_DATA_AND_ACCUMULATORS = 8,
  HP_CONTROL_LOOP_AND_STATE = 9,
  HP_CYCLE_MODEL = 10,
  HP_EXV_CALIBRATION = 11,
  HP_DISSIPATION_AND_POWER = 12,
  HP_TEMPS_AND_DEMANDS = 13,
  HP_PRESSURE_CONTROL = 14,
  HP_ARBITRATION = 15,
  HP_MODE_SELECT_AND_ESTIMATES = 16,
  HP_MODE_OPTIONS_AND_ESTIMATES = 17,
  BODY_CONTROL = 18,
  COOLANT_2 = 19,
  END = 20
 } canutil_VCFRONT_logging1HzIndex_vals;

#define CANUTIL_GET_VALUE_VCFRONT_calibratedPositionHCML(d) ((*( (uint64_t *) d ) & 0x7fe0) >> 5)
#define CANUTIL_GET_VALUE_VCFRONT_chillerExvRange(d) ((*( (uint64_t *) d ) & 0x1ff0) >> 4)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveRecalReason(d) ((*( (uint64_t *) d ) & 0x3800000000000000) >> 59)

typedef enum { 
  UNDEFINED = 0,
  MAX_TRAVEL = 1,
  GENERAL_FAULT = 2,
  CALIBRATION_FAULT_NO_TRAVEL = 3,
  SELF_TEST = 4,
  MOTOR_FEEDBACK_INTERRUPTED = 5,
  NVRAM_LOSS = 6,
  SYSTEM_LEVEL_FAULT_RESPONSE = 7
 } canutil_VCFRONT_coolantValveRecalReason_vals;

#define CANUTIL_GET_VALUE_VCFRONT_drlMode(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)

typedef enum { 
  DRL_MODE_OFF = 0,
  DRL_MODE_POSITION = 1,
  DRL_MODE_DRL = 2
 } canutil_VCFRONT_drlMode_vals;

#define CANUTIL_GET_VALUE_VCFRONT_estPressureLiq(d) ((*( (uint64_t *) d ) & 0x1fc) >> 2)
#define CANUTIL_GET_VALUE_VCFRONT_exteriorQuietModeEnabled(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_VCFRONT_hpForceScavenge(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_VCFRONT_hpGeneral(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_VCFRONT_passiveSeriesRegOn(d) ((*( (uint64_t *) d ) & 0x800000000000000) >> 59)
#define CANUTIL_GET_VALUE_VCFRONT_radPassiveRejectEstimate(d) ((*( (uint64_t *) d ) & 0x7ffe00) >> 9)
#define CANUTIL_GET_VALUE_VCFRONT_subcoolActual(d) ((*( (uint64_t *) d ) & 0x1fc) >> 2)
#define CANUTIL_GET_VALUE_VCFRONT_battOverStagUpperLimit(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_VCFRONT_exteriorQuietModeAllowed(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_VCFRONT_hpAmbientSource(d) ((*( (uint64_t *) d ) & 0x400000000000000) >> 58)
#define CANUTIL_GET_VALUE_VCFRONT_CCQdotFdFrwrdTarget(d) ((*( (uint64_t *) d ) & 0xfe00000000000000) >> 57)
#define CANUTIL_GET_VALUE_VCFRONT_battUnderStagUpperLimit(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatScavengeOnly(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_VCFRONT_HCML_lowBeamSpotTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCML_lowBeamSpotTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_HCMR_lowBeamSpotTemp(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCMR_lowBeamSpotTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ambientColderThanBatt(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_battDissipation(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_chillerExvCalibOffset(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_condenserPressureLimit(d) ((*( (uint64_t *) d ) & 0x3f00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveCountRange(d) ((*( (uint64_t *) d ) & 0xffc) >> 2)

typedef enum { 
  SNA = 1023
 } canutil_VCFRONT_coolantValveCountRange_vals;

#define CANUTIL_GET_VALUE_VCFRONT_dischargePressureTarget(d) ((*( (uint64_t *) d ) & 0x7f00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_feedFwdMDotEvaporator(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_homelinkRegionCode(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  HOMELINK_REGION_CODE_UNKNOWN = 0,
  HOMELINK_REGION_CODE_EUROPE = 1,
  HOMELINK_REGION_CODE_AMERICAS = 5,
  HOMELINK_REGION_CODE_REST_OF_WORLD = 8,
  HOMELINK_REGION_CODE_CHINA = 9
 } canutil_VCFRONT_homelinkRegionCode_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatAmbientSource(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_modeTransitionID(d) ((*( (uint64_t *) d ) & 0x3f00000000000000) >> 56)

typedef enum { 
  PARALLEL_F1_noFlowRequest = 0,
  SERIES_F2_faultPumps = 1,
  SERIES_F3_faultTempSensors = 2,
  SERIES_1_drive_batteryWantsCool = 3,
  SERIES_2_drive_batteryNeedsHeat = 4,
  SERIES_3_drive_batteryWantsHeat = 5,
  PARALLEL_2_drive_batteryWantsHeat = 6,
  PARALLEL_3_drive_batteryWantsCool = 7,
  PARALLEL_4_drive_batteryNeedsCool = 8,
  SERIES_4_charge_batteryNeedsHeat = 9,
  SERIES_5_charge_batteryWantsHeat = 10,
  PARALLEL_5_charge_batteryWantsHeat = 11,
  PARALLEL_6_charge_batteryWantsCool = 12,
  SERIES_6_fastCharge_batteryNeedsHeat = 13,
  SERIES_7_fastCharge_batteryWantsCool = 14,
  PARALLEL_7_fastCharge_batteryWantsCool = 15,
  PARALLEL_8_fastCharge_batteryWantsHeat = 16,
  SERIES_8_preConditioning_batteryNeedsHeat = 17,
  SERIES_9_drive_driveUnitThermalLimiting = 18,
  PARALLEL_9_drive_batteryThermalLimiting = 19,
  INIT = 20,
  OVERRIDE = 21,
  UNDEFINED = 22,
  ENTER_AMBIENTSOURCE = 23,
  EXIT_AMBIENTSOURCE = 24,
  SER_1_drive_battNeedsActiveCooling_evapEnabled = 25,
  SER_2_drive_battBelowHotStagnationTemp = 26,
  SER_3_drive_chillerPassivelyCools = 27,
  SER_4_drive_radPassivelyCoolsBatt = 28,
  SER_5_FC_battHeatingNeeded = 29,
  SER_6_FC_battNeedsActiveCooling_evapDisabled = 30,
  SER_7_FC_battNeedsActiveCooling_evapEnabled = 31,
  SER_8_charge_battBelowPassiveTarget = 32,
  PAR_1_drive_battNeedsActiveCooling_evapDisabled = 33,
  PAR_2_drive_ptNeedsActiveCooling = 34,
  PAR_3_drive_chillerPassivelyCoolsBatt = 35,
  PAR_4_drive_cannotPassivelyCoolBatt = 36,
  PAR_5_drive_battAboveHotStagnationTemp = 37,
  PAR_6_FC_battNeedsActiveCooling_evapDisabled = 38,
  PAR_7_FC_battNeedsActiveCooling_evapEnabled = 39,
  PAR_8_charge_battAbovePassiveTarget = 40
 } canutil_VCFRONT_modeTransitionID_vals;

#define CANUTIL_GET_VALUE_VCFRONT_passiveDemandRadBypass(d) ((*( (uint64_t *) d ) & 0x7f00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_ambientSourcingAvailable(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatReheatScaveng(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatReheatAmbient(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_VCFRONT_hpMode(d) ((*( (uint64_t *) d ) & 0x7c0000000000000) >> 54)

typedef enum { 
  NONE = 0,
  GENERAL = 1,
  AMBIENT_SOURCE = 2,
  CABIN_HEAT_SCAVENGE_ONLY = 3,
  CABIN_HEAT_AMBIENT_SOURCE = 4,
  CABIN_HEAT_REHEAT_SCAVENGE = 5,
  CABIN_HEAT_REHEAT_AMBIENT_SOURCE = 6,
  CABIN_HEAT_BLEND = 7,
  CABIN_HEAT_COP1 = 8,
  CABIN_HEAT_BATTERY_HEAT_REHEAT_AMBIENT_SOURCE = 9,
  CABIN_HEAT_BATTERY_COOL_REHEAT = 10,
  CABIN_COOL_EVAPORATOR = 11,
  CABIN_COOL_EVAPORATOR_REHEAT = 12,
  BATTERY_HEAT_AMBIENT_SOURCE = 13,
  BATTERY_HEAT_COP1 = 14,
  BATTERY_COOL = 15,
  BATTERY_COOL_CABIN_CONDENSER_REHEAT = 16,
  BATTERY_COOL_CABIN_CONDENSER = 17,
  BATTERY_COOL_CABIN_REHEAT = 18,
  BATTERY_COOL_EVAPORATOR = 19
 } canutil_VCFRONT_hpMode_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatBlend(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)
#define CANUTIL_GET_VALUE_VCFRONT_estPressureSuct(d) ((*( (uint64_t *) d ) & 0x7f0000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatCOP1(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCFRONT_hpSubcoolTarget(d) ((*( (uint64_t *) d ) & 0x1f0000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatBatteryHeatRe(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCFRONT_CCQdotFdbk(d) ((*( (uint64_t *) d ) & 0x1fc000000000000) >> 50)
#define CANUTIL_GET_VALUE_VCFRONT_evapExvRange(d) ((*( (uint64_t *) d ) & 0x7fc000000000000) >> 50)
#define CANUTIL_GET_VALUE_VCFRONT_fanDemandCondenser(d) ((*( (uint64_t *) d ) & 0x1fc000000000000) >> 50)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinHeatBatteryCoolRe(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)
#define CANUTIL_GET_VALUE_VCFRONT_modeDesired(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  SERIES = 0,
  PARALLEL = 1,
  BLEND = 2,
  AMBIENT_SOURCE = 3
 } canutil_VCFRONT_modeDesired_vals;

#define CANUTIL_GET_VALUE_VCFRONT_battLoopWorthCooling(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_evapDisabledLowPsCutout(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinCoolEvaporator(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_VCFRONT_HCML_highBeamTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCML_highBeamTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_HCMR_highBeamTemp(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCMR_highBeamTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_calibratedPositionHCMR(d) ((*( (uint64_t *) d ) & 0x3ff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_diDissipation(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_evapExvCalibOffset(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_feedFwdMDotCabinCondense(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_hpCabinCoolEvaporatorReh(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_lccActiveCoolTarget(d) ((*( (uint64_t *) d ) & 0x7f000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_minFlowPDCont(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_ptLoopWorthCooling(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_targetPTActiveCool(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_CMPDischargeSuperheat(d) ((*( (uint64_t *) d ) & 0xf800000000000) >> 47)
#define CANUTIL_GET_VALUE_VCFRONT_estCompRefrigMassflow(d) ((*( (uint64_t *) d ) & 0x1f800000000000) >> 47)
#define CANUTIL_GET_VALUE_VCFRONT_hpBatteryHeatAmbientSour(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveAngleDrift(d) ((*( (uint64_t *) d ) & 0xffc00000000000) >> 46)
#define CANUTIL_GET_VALUE_VCFRONT_hpBatteryHeatCOP1(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)
#define CANUTIL_GET_VALUE_VCFRONT_estPressureDisch(d) ((*( (uint64_t *) d ) & 0xfe00000000000) >> 45)
#define CANUTIL_GET_VALUE_VCFRONT_hpBatteryCool(d) ((*( (uint64_t *) d ) & 0x200000000000) >> 45)
#define CANUTIL_GET_VALUE_VCFRONT_lccInletTempEstimate(d) ((*( (uint64_t *) d ) & 0x1fe00000000000) >> 45)
#define CANUTIL_GET_VALUE_VCFRONT_hpBatteryCoolCabinConden(d) ((*( (uint64_t *) d ) & 0x100000000000) >> 44)
#define CANUTIL_GET_VALUE_VCFRONT_CCQdotActual(d) ((*( (uint64_t *) d ) & 0x3f80000000000) >> 43)
#define CANUTIL_GET_VALUE_VCFRONT_fanDemandRadiator(d) ((*( (uint64_t *) d ) & 0x3f80000000000) >> 43)
#define CANUTIL_GET_VALUE_VCFRONT_hpBatteryCoolCabinReheat(d) ((*( (uint64_t *) d ) & 0x80000000000) >> 43)
#define CANUTIL_GET_VALUE_VCFRONT_hpBatteryCoolEvaporator(d) ((*( (uint64_t *) d ) & 0x40000000000) >> 42)
#define CANUTIL_GET_VALUE_VCFRONT_hpCOP(d) ((*( (uint64_t *) d ) & 0xfc0000000000) >> 42)
#define CANUTIL_GET_VALUE_VCFRONT_recircExvRange(d) ((*( (uint64_t *) d ) & 0x3fe0000000000) >> 41)
#define CANUTIL_GET_VALUE_VCFRONT_HCML_turnTemp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCML_turnTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_HCMR_turnTemp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCMR_turnTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_PDischargeControllerOutp(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_chillerPassiveCoolPower(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveOdometer(d) ((*( (uint64_t *) d ) & 0x3ff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_feedBackEvapTempControll(d) ((*( (uint64_t *) d ) & 0x7f0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_pressureRefrigDischEst(d) ((*( (uint64_t *) d ) & 0x1f0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_recircExvCalibOffset(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_suctionSuperheatEstTsSNA(d) ((*( (uint64_t *) d ) & 0xf0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_targetPTPassive(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_currentPositionHCML(d) ((*( (uint64_t *) d ) & 0xffc000000000) >> 38)
#define CANUTIL_GET_VALUE_VCFRONT_estTempLiq(d) ((*( (uint64_t *) d ) & 0x3fc000000000) >> 38)
#define CANUTIL_GET_VALUE_VCFRONT_chillerInletTempEstimate(d) ((*( (uint64_t *) d ) & 0x1fe000000000) >> 37)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveRecalCount(d) ((*( (uint64_t *) d ) & 0xffff000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_evapFdFrwrdTarget(d) ((*( (uint64_t *) d ) & 0x7f000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_hpBattStagTarget(d) ((*( (uint64_t *) d ) & 0x7f000000000) >> 36)
#define CANUTIL_GET_VALUE_VCFRONT_tempRefrigSuction(d) ((*( (uint64_t *) d ) & 0xff000000000) >> 36)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_tempRefrigSuction_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tempRefrigDischargeEst(d) ((*( (uint64_t *) d ) & 0x1f800000000) >> 35)
#define CANUTIL_GET_VALUE_VCFRONT_HCML_bladeTemp(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCML_bladeTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_HCMR_bladeTemp(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCMR_bladeTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_feedBackDuctTempControll(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_lccExvCalibOffset(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_lccExvRange(d) ((*( (uint64_t *) d ) & 0x1ff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_lccPassiveHeatPower(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_suctionPressureTarget(d) ((*( (uint64_t *) d ) & 0x3f00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_targetBatActiveCool(d) ((*( (uint64_t *) d ) & 0x7f00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_tempRefrigSuctionEst(d) ((*( (uint64_t *) d ) & 0x3f00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveDailyAngleTr(d) ((*( (uint64_t *) d ) & 0xffc0000000) >> 30)
#define CANUTIL_GET_VALUE_VCFRONT_estTempSuct(d) ((*( (uint64_t *) d ) & 0xfc0000000) >> 30)
#define CANUTIL_GET_VALUE_VCFRONT_compEnergyDuringDrive(d) ((*( (uint64_t *) d ) & 0xfe0000000) >> 29)
#define CANUTIL_GET_VALUE_VCFRONT_estCompPower(d) ((*( (uint64_t *) d ) & 0x1fe0000000) >> 29)
#define CANUTIL_GET_VALUE_VCFRONT_evapFdbk(d) ((*( (uint64_t *) d ) & 0xfe0000000) >> 29)
#define CANUTIL_GET_VALUE_VCFRONT_feedFwdFanDemand(d) ((*( (uint64_t *) d ) & 0xfe0000000) >> 29)
#define CANUTIL_GET_VALUE_VCFRONT_currentPositionHCMR(d) ((*( (uint64_t *) d ) & 0x3ff0000000) >> 28)
#define CANUTIL_GET_VALUE_VCFRONT_pumpBatteryFETTemp(d) ((*( (uint64_t *) d ) & 0xff0000000) >> 28)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_pumpBatteryFETTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ambientSourcingDisabled(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_VCFRONT_hpBattOverTempHvacDisabl(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_VCFRONT_chillerLiftDisabledLowPs(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_VCFRONT_hpDiagLouverCalib(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_VCFRONT_HCML_diffuseTemp(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCML_diffuseTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_HCMR_diffuseTemp(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 128
 } canutil_VCFRONT_HCMR_diffuseTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_PSuctionControllerOutput(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_ccLeftExvCalibOffset(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_estTempDisch(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_maxAllowedEvapPowerInSer(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_maxChillerCoolingPower(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_targetBatPassive(d) ((*( (uint64_t *) d ) & 0x7f000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_ccLeftExvRange(d) ((*( (uint64_t *) d ) & 0xff800000) >> 23)
#define CANUTIL_GET_VALUE_VCFRONT_DIQdotA(d) ((*( (uint64_t *) d ) & 0x1fc00000) >> 22)
#define CANUTIL_GET_VALUE_VCFRONT_cabinHeatEnergyDuringDri(d) ((*( (uint64_t *) d ) & 0x1fc00000) >> 22)
#define CANUTIL_GET_VALUE_VCFRONT_feedFwdPumpDemand(d) ((*( (uint64_t *) d ) & 0x1fc00000) >> 22)
#define CANUTIL_GET_VALUE_VCFRONT_hpCompPowerIndex(d) ((*( (uint64_t *) d ) & 0xfe00000) >> 21)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveWindupEstL(d) ((*( (uint64_t *) d ) & 0x3f00000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_pumpPowertrainFETTemp(d) ((*( (uint64_t *) d ) & 0xff00000) >> 20)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_pumpPowertrainFETTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ccRightExvCalibOffset(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_dischargePressureLimit(d) ((*( (uint64_t *) d ) & 0x7f0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_estCompressorRpm(d) ((*( (uint64_t *) d ) & 0x3f0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_fanControlRadCanCool(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_minAllowedChillerPowerIn(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_minAllowedSuctionPressur(d) ((*( (uint64_t *) d ) & 0x7f0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_targetBatActiveHeat(d) ((*( (uint64_t *) d ) & 0x7f0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_wiperCycles(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_evapFdFrwrdTargetMinimum(d) ((*( (uint64_t *) d ) & 0x3f8000) >> 15)
#define CANUTIL_GET_VALUE_VCFRONT_fanControlFeedfwdActive(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_VCFRONT_lowSideLiftEnergyDrive(d) ((*( (uint64_t *) d ) & 0x3f8000) >> 15)
#define CANUTIL_GET_VALUE_VCFRONT_radActiveRejectEstimate(d) ((*( (uint64_t *) d ) & 0x3fff8000) >> 15)
#define CANUTIL_GET_VALUE_VCFRONT_ccRightExvRange(d) ((*( (uint64_t *) d ) & 0x7fc000) >> 14)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveWindupEstR(d) ((*( (uint64_t *) d ) & 0xfc000) >> 14)
#define CANUTIL_GET_VALUE_VCFRONT_fanControlRadiatorUa(d) ((*( (uint64_t *) d ) & 0x1fc000) >> 14)
#define CANUTIL_GET_VALUE_VCFRONT_hpAtSteadyState(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_VCFRONT_pressureRefrigSuctionEst(d) ((*( (uint64_t *) d ) & 0xfe000) >> 13)
#define CANUTIL_GET_VALUE_VCFRONT_radiatorFanFETTemp(d) ((*( (uint64_t *) d ) & 0xff000) >> 12)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_radiatorFanFETTemp_vals;

#define CANUTIL_GET_VALUE_VCFRONT_estQLift(d) ((*( (uint64_t *) d ) & 0x1fc00) >> 10)
#define CANUTIL_GET_VALUE_VCFRONT_coolantLevelVoltage(d) ((*( (uint64_t *) d ) & 0x3fe00) >> 9)
#define CANUTIL_GET_VALUE_VCFRONT_chillerExvCalibFailed(d) ((*( (uint64_t *) d ) & 0x100) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveRadBypass(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)

typedef enum { 
  SNA = 127
 } canutil_VCFRONT_coolantValveRadBypass_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpCompPowerIndexFiltered(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_lowSideWattsLift(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_maxCompressorRPMAllowed(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_passiveCoolingState(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  ChillerCoolsSeriesLoop = 0,
  ChillerCoolsParallelBattLoop = 1,
  ChillerAndRadCoolSeriesLoop = 2,
  CannotCoolBattery = 3
 } canutil_VCFRONT_passiveCoolingState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_evapExvCalibFailed(d) ((*( (uint64_t *) d ) & 0x80) >> 7)
#define CANUTIL_GET_VALUE_VCFRONT_fanControlRadiatorInletT(d) ((*( (uint64_t *) d ) & 0x1f80) >> 7)
#define CANUTIL_GET_VALUE_VCFRONT_recircExvCalibFailed(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_GET_VALUE_VCFRONT_suctionSuperheatEstPsSNA(d) ((*( (uint64_t *) d ) & 0x3c0) >> 6)
#define CANUTIL_GET_VALUE_VCFRONT_totalLoadCoolingDominant(d) ((*( (uint64_t *) d ) & 0x40) >> 6)
#define CANUTIL_GET_VALUE_VCFRONT_feedfwdLoadCoolingDomina(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_GET_VALUE_VCFRONT_lccExvCalibFailed(d) ((*( (uint64_t *) d ) & 0x20) >> 5)
#define CANUTIL_GET_VALUE_VCFRONT_ccLeftExvCalibFailed(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_VCFRONT_modelLoadCoolingDominant(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_VCFRONT_radiatorFanRunReason(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)

typedef enum { 
  NONE = 0,
  ACTIVE_MANAGER = 1,
  AMBIENT_SNIFF = 2,
  NVH_MASKING = 3,
  HEAT_PUMP = 4,
  COAST_MODE = 5,
  MIN_ON_GLOBAL = 6,
  MIN_ON_NVH = 7,
  UDS = 8
 } canutil_VCFRONT_radiatorFanRunReason_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ccRightExvCalibFailed(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCFRONT_cycleModelConverged(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCFRONT_hpPotentialLowRefrig(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCFRONT_hpRefrigerantPurgeState(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  IDLE = 0,
  EVAP_PURGE = 1,
  COMPLETE = 2
 } canutil_VCFRONT_hpRefrigerantPurgeState_vals;

#define CANUTIL_ID318SystemTimeUTC 0x318

#define CANUTIL_GET_VALUE_UTCyear318(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_UTCmonth318(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_UTCseconds318(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_UTChour318(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_UTCday318(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_UTCminutes318(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_ID528UnixTime 0x528

#define CANUTIL_GET_VALUE_UnixTimeSeconds528(d) ((*( (uint64_t *) d ) & 0xffffffff) >> 0)
#define CANUTIL_ID229GearLever 0x229

#define CANUTIL_GET_VALUE_GearLeverPosition229(d) ((*( (uint64_t *) d ) & 0x7000) >> 12)

typedef enum { 
  Center = 0,
  Half Down = 1,
  Full Down = 2,
  Half Up = 3,
  Full Up = 4
 } canutil_GearLeverPosition229_vals;

#define CANUTIL_GET_VALUE_GearLeverButton229(d) ((*( (uint64_t *) d ) & 0x300) >> 8)
#define CANUTIL_ID249SCCMLeftStalk 0x249

#define CANUTIL_GET_VALUE_SCCM_leftStalkCrc(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_SCCM_leftStalkCounter(d) ((*( (uint64_t *) d ) & 0xf000000) >> 24)
#define CANUTIL_GET_VALUE_SCCM_highBeamStalkStatus(d) ((*( (uint64_t *) d ) & 0x300000) >> 20)

typedef enum { 
  IDLE = 0,
  PULL = 1,
  PUSH = 2,
  SNA = 3
 } canutil_SCCM_highBeamStalkStatus_vals;

#define CANUTIL_GET_VALUE_SCCM_washWipeButtonStatus(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  NOT_PRESSED = 0,
  1ST_DETENT = 1,
  2ND_DETENT = 2,
  SNA = 3
 } canutil_SCCM_washWipeButtonStatus_vals;

#define CANUTIL_GET_VALUE_SCCM_turnIndicatorStalkStatus(d) ((*( (uint64_t *) d ) & 0xf0000) >> 16)

typedef enum { 
  IDLE = 0,
  UP_0_5 = 1,
  UP_1 = 2,
  UP_1_5 = 3,
  UP_2 = 4,
  DOWN_0_5 = 5,
  DOWN_1 = 6,
  DOWN_1_5 = 7,
  DOWN_2 = 8,
  SNA = 9
 } canutil_SCCM_turnIndicatorStalkStatus_vals;

#define CANUTIL_GET_VALUE_SCCM_leftStalkReserved1(d) ((*( (uint64_t *) d ) & 0x1f00) >> 8)
#define CANUTIL_ID186DIF_torque 0x186

#define CANUTIL_GET_VALUE_DIF_torqueChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIF_torqueCounter(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIF_torqueCommand(d) ((*( (uint64_t *) d ) & 0x3ffe) >> 1)

typedef enum { 
  SNA = 4096
 } canutil_DIF_torqueCommand_vals;

#define CANUTIL_GET_VALUE_DIF_axleSpeedQF(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_DIF_torqueActual(d) ((*( (uint64_t *) d ) & 0x3ffe000000000) >> 37)

typedef enum { 
  SNA = 4096
 } canutil_DIF_torqueActual_vals;

#define CANUTIL_GET_VALUE_DIF_axleSpeed(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)

typedef enum { 
  SNA = 32768
 } canutil_DIF_axleSpeed_vals;

#define CANUTIL_GET_VALUE_DIF_slavePedalPos(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  SNA = 255
 } canutil_DIF_slavePedalPos_vals;

#define CANUTIL_ID396FrontOilPump 0x396

#define CANUTIL_GET_VALUE_FrontOilPumpState396(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  OIL_PUMP_STANDBY = 0,
  OIL_PUMP_ENABLE = 1,
  OIL_PUMP_COLD_STARTUP = 2,
  OIL_PUMP_FAULTED = 6,
  OIL_PUMP_SNA = 7
 } canutil_FrontOilPumpState396_vals;

#define CANUTIL_GET_VALUE_FrontOilPumpOilTempEstConfident3(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_FrontOilPumpLeadAngle396(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)
#define CANUTIL_GET_VALUE_FrontOilPumpDutyCycle396(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_FrontOilFlowActual396(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FrontOilPumpFluidTemp396(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FrontOilPumpOilTempEst396(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_FrontOilPumpPressureEstimate396(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_FrontOilPumpPressureExpected396(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_FrontOilPumpPhaseCurrent396(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID395DIR_oilPump 0x395

#define CANUTIL_GET_VALUE_DIR_oilPumpState(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  OIL_PUMP_STANDBY = 0,
  OIL_PUMP_ENABLE = 1,
  OIL_PUMP_COLD_STARTUP = 2,
  OIL_PUMP_FAULTED = 6,
  OIL_PUMP_SNA = 7
 } canutil_DIR_oilPumpState_vals;

#define CANUTIL_GET_VALUE_DIR_oilPumpFluidTQF(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)

typedef enum { 
  OIL_PUMP_FLUIDT_LOW_CONFIDENCE = 0,
  OIL_PUMP_FLUIDT_HIGH_CONFIDENCE = 1
 } canutil_DIR_oilPumpFluidTQF_vals;

#define CANUTIL_GET_VALUE_DIR_oilPumpLeadAngle(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)
#define CANUTIL_GET_VALUE_DIR_oilPumpFlowTarget(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_oilPumpFlowActual(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DIR_oilPumpFluidT(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_DIR_oilPumpPhaseCurrent(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_oilPumpPressureEstimate(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_DIR_oilPumpPressureExpected(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_oilPumpPressureResidual(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID1D8RearTorque 0x1d8

#define CANUTIL_GET_VALUE_TorqueFlags1D8(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_RearTorqueRequest1D8(d) ((*( (uint64_t *) d ) & 0x3ffe0) >> 5)
#define CANUTIL_GET_VALUE_RearTorque1D8(d) ((*( (uint64_t *) d ) & 0xfff80000000000) >> 43)
#define CANUTIL_GET_VALUE_Counter1D8(d) ((*( (uint64_t *) d ) & 0x3800) >> 11)
#define CANUTIL_GET_VALUE_Checksum1D8(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID155WheelAngles 0x155

#define CANUTIL_GET_VALUE_WheelAngleTicsFL155(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_WheelAngleTicsFR155(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_WheelAngleTicsRL155(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_WheelAngleTicsRR155(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_ESP_WheelRotationReR(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  WR_FORWARD = 0,
  WR_BACKWARD = 1,
  WR_STANDSTILL = 2,
  WR_NOT_DEFINABLE = 3
 } canutil_ESP_WheelRotationReR_vals;

#define CANUTIL_GET_VALUE_ESP_WheelRotationReL(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  WR_FORWARD = 0,
  WR_BACKWARD = 1,
  WR_STANDSTILL = 2,
  WR_NOT_DEFINABLE = 3
 } canutil_ESP_WheelRotationReL_vals;

#define CANUTIL_GET_VALUE_ESP_WheelRotationFrR(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  WR_FORWARD = 0,
  WR_BACKWARD = 1,
  WR_STANDSTILL = 2,
  WR_NOT_DEFINABLE = 3
 } canutil_ESP_WheelRotationFrR_vals;

#define CANUTIL_GET_VALUE_ESP_WheelRotationFrL(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  WR_FORWARD = 0,
  WR_BACKWARD = 1,
  WR_STANDSTILL = 2,
  WR_NOT_DEFINABLE = 3
 } canutil_ESP_WheelRotationFrL_vals;

#define CANUTIL_GET_VALUE_ESP_wheelSpeedsQF(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)

typedef enum { 
  ONE_OR_MORE_WSS_INVALID = 0,
  ALL_WSS_VALID = 1
 } canutil_ESP_wheelSpeedsQF_vals;

#define CANUTIL_GET_VALUE_ESP_vehicleStandstillSts(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)

typedef enum { 
  NOT_STANDSTILL = 0,
  STANDSTILL = 1
 } canutil_ESP_vehicleStandstillSts_vals;

#define CANUTIL_GET_VALUE_ESP_vehicleSpeed(d) ((*( (uint64_t *) d ) & 0xffc00000) >> 22)

typedef enum { 
  ESP_VEHICLE_SPEED_SNA = 1023
 } canutil_ESP_vehicleSpeed_vals;

#define CANUTIL_GET_VALUE_ESP_wheelRotationCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_ESP_wheelRotationChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID175WheelSpeed 0x175

#define CANUTIL_GET_VALUE_WheelSpeedFL175(d) ((*( (uint64_t *) d ) & 0x3ffe000) >> 13)

typedef enum { 
  SNA = 8191
 } canutil_WheelSpeedFL175_vals;

#define CANUTIL_GET_VALUE_WheelSpeedFR175(d) ((*( (uint64_t *) d ) & 0xfff8000000000000) >> 51)

typedef enum { 
  SNA = 8191
 } canutil_WheelSpeedFR175_vals;

#define CANUTIL_GET_VALUE_WheelSpeedRL175(d) ((*( (uint64_t *) d ) & 0x7ffc000000000) >> 38)

typedef enum { 
  SNA = 8191
 } canutil_WheelSpeedRL175_vals;

#define CANUTIL_GET_VALUE_WheelSpeedRR175(d) ((*( (uint64_t *) d ) & 0x3ffe000000) >> 25)

typedef enum { 
  SNA = 8191
 } canutil_WheelSpeedRR175_vals;

#define CANUTIL_GET_VALUE_ESP_wheelSpeedsCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_ESP_wheelSpeedsChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID185ESP_brakeTorque 0x185

#define CANUTIL_GET_VALUE_ESP_brakeTorqueFrL(d) ((*( (uint64_t *) d ) & 0xfff000) >> 12)

typedef enum { 
  SNA = 4095
 } canutil_ESP_brakeTorqueFrL_vals;

#define CANUTIL_GET_VALUE_ESP_brakeTorqueFrR(d) ((*( (uint64_t *) d ) & 0xfff0000000000000) >> 52)

typedef enum { 
  SNA = 4095
 } canutil_ESP_brakeTorqueFrR_vals;

#define CANUTIL_GET_VALUE_ESP_brakeTorqueReL(d) ((*( (uint64_t *) d ) & 0xfff0000000000) >> 40)

typedef enum { 
  SNA = 4095
 } canutil_ESP_brakeTorqueReL_vals;

#define CANUTIL_GET_VALUE_ESP_brakeTorqueReR(d) ((*( (uint64_t *) d ) & 0xfff0000000) >> 28)

typedef enum { 
  SNA = 4095
 } canutil_ESP_brakeTorqueReR_vals;

#define CANUTIL_GET_VALUE_ESP_brakeTorqueQF(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)

typedef enum { 
  UNDEFINABLE_ACCURACY = 0,
  IN_SPEC = 1
 } canutil_ESP_brakeTorqueQF_vals;

#define CANUTIL_GET_VALUE_ESP_brakeTorqueCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_ESP_brakeTorqueChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID1D4FrontTorqueOld 0x1d4

#define CANUTIL_GET_VALUE_RAWTorqueFront1D4(d) ((*( (uint64_t *) d ) & 0xfff000000) >> 24)
#define CANUTIL_ID1D5FrontTorque 0x1d5

#define CANUTIL_GET_VALUE_FrontTorqueRequest1D5(d) ((*( (uint64_t *) d ) & 0x3ffe0) >> 5)
#define CANUTIL_GET_VALUE_FrontTorque1D5(d) ((*( (uint64_t *) d ) & 0xfff80000000000) >> 43)
#define CANUTIL_ID281VCFRONT_CMPRequest 0x281

#define CANUTIL_GET_VALUE_VCFRONT_CMPTargetDuty(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_CMPPowerLimit(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_CMPReset(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_CMPEnable(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_ID3C2VCLEFT_switchStatus 0x3c2

#define CANUTIL_GET_VALUE_VCLEFT_switchStatusIndex(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  VCLEFT_SWITCH_STATUS_INDEX_0 = 0,
  VCLEFT_SWITCH_STATUS_INDEX_1 = 1,
  VCLEFT_SWITCH_STATUS_INDEX_INVALID = 2
 } canutil_VCLEFT_switchStatusIndex_vals;

#define CANUTIL_GET_VALUE_VCLEFT_hornSwitchPressed(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_VCLEFT_hazardButtonPressed(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_VCLEFT_swcLeftTiltRight(d) ((*( (uint64_t *) d ) & 0x6000000000000000) >> 61)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_swcLeftTiltRight_vals;

#define CANUTIL_GET_VALUE_VCLEFT_brakeSwitchPressed(d) ((*( (uint64_t *) d ) & 0x1000000000000000) >> 60)
#define CANUTIL_GET_VALUE_VCLEFT_rightMirrorTilt(d) ((*( (uint64_t *) d ) & 0x3800000000000000) >> 59)

typedef enum { 
  MIRROR_TILT_STOP = 0,
  MIRROR_TILT_DOWN = 1,
  MIRROR_TILT_UP = 2,
  MIRROR_TILT_RIGHT = 3,
  MIRROR_TILT_LEFT = 4
 } canutil_VCLEFT_rightMirrorTilt_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcLeftPressed(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_swcLeftPressed_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatTrackBack(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatTrackBack_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcRightTiltLeft(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_swcRightTiltLeft_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatTrackForward(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatTrackForward_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcRightTiltRight(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_swcRightTiltRight_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatTiltDown(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatTiltDown_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcRightPressed(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_swcRightPressed_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatTiltUp(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatTiltUp_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcLeftTiltLeft(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_swcLeftTiltLeft_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatLiftDown(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatLiftDown_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcLeftScrollTicks(d) ((*( (uint64_t *) d ) & 0x3f000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCLEFT_frontSeatLiftUp(d) ((*( (uint64_t *) d ) & 0xc00000000000) >> 46)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatLiftUp_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatBackrestBack(d) ((*( (uint64_t *) d ) & 0x300000000000) >> 44)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatBackrestBack_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatBackrestForward(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatBackrestForward_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatLumbarDown(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatLumbarDown_vals;

#define CANUTIL_GET_VALUE_VCLEFT_swcRightScrollTicks(d) ((*( (uint64_t *) d ) & 0x3f0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCLEFT_frontSeatLumbarUp(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatLumbarUp_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatLumbarIn(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatLumbarIn_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontSeatLumbarOut(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontSeatLumbarOut_vals;

#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackUpLF(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowUpLR(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowAutoUpLR(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoUpLF(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowDownLR(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackDownLF(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowAutoDownLR(d) ((*( (uint64_t *) d ) & 0x20000000) >> 29)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoDownLF(d) ((*( (uint64_t *) d ) & 0x20000000) >> 29)
#define CANUTIL_GET_VALUE_VCLEFT_2RowSeatReclineSwitch(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackUpLR(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_VCLEFT_2RowSeatCenterSwitch(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoUpLR(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)
#define CANUTIL_GET_VALUE_VCLEFT_2RowSeatLeftFoldFlatSwitc(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackDownLR(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)
#define CANUTIL_GET_VALUE_VCLEFT_2RowSeatRightFoldFlatSwit(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoDownLR(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)
#define CANUTIL_GET_VALUE_VCLEFT_2RowSeatBothFoldFlatSwitc(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackUpRF(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoUpRF(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_VCLEFT_swcLeftDoublePress(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackDownRF(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_VCLEFT_swcRightDoublePress(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoDownRF(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackUpRR(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoUpRR(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackDownRR(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_VCLEFT_btnWindowSwPackAutoDownRR(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_VCLEFT_frontBuckleSwitch(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontBuckleSwitch_vals;

#define CANUTIL_GET_VALUE_VCLEFT_frontOccupancySwitch(d) ((*( (uint64_t *) d ) & 0xc000) >> 14)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_frontOccupancySwitch_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearLeftBuckleSwitch(d) ((*( (uint64_t *) d ) & 0x3000) >> 12)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_rearLeftBuckleSwitch_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearCenterOccupancySwitch(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_rearCenterOccupancySwitch_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearLeftOccupancySwitch(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_rearLeftOccupancySwitch_vals;

#define CANUTIL_GET_VALUE_VCLEFT_rearRightOccupancySwitch(d) ((*( (uint64_t *) d ) & 0xc0) >> 6)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_rearRightOccupancySwitch_vals;

#define CANUTIL_GET_VALUE_VCLEFT_brakePressed(d) ((*( (uint64_t *) d ) & 0x10) >> 4)
#define CANUTIL_GET_VALUE_VCLEFT_rearHVACButtonPressed(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_GET_VALUE_VCLEFT_rearCenterBuckleSwitch(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  SWITCH_SNA = 0,
  SWITCH_OFF = 1,
  SWITCH_ON = 2,
  SWITCH_FAULT = 3
 } canutil_VCLEFT_rearCenterBuckleSwitch_vals;

#define CANUTIL_ID336MaxPowerRating 0x336

#define CANUTIL_GET_VALUE_DrivePowerRating336(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_DriveRegenRating336(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DI_performancePackage(d) ((*( (uint64_t *) d ) & 0x700) >> 8)

typedef enum { 
  BASE = 0,
  PERFORMANCE = 1,
  BASE_PLUS = 3,
  SNA = 4
 } canutil_DI_performancePackage_vals;

#define CANUTIL_ID293UI_chassisControl 0x293

#define CANUTIL_GET_VALUE_UI_steeringTuneRequest(d) ((*( (uint64_t *) d ) & 0xc) >> 2)

typedef enum { 
  STEERING_TUNE_COMFORT = 0,
  STEERING_TUNE_STANDARD = 1,
  STEERING_TUNE_SPORT = 2
 } canutil_UI_steeringTuneRequest_vals;

#define CANUTIL_GET_VALUE_UI_tractionControlMode(d) ((*( (uint64_t *) d ) & 0xe) >> 1)

typedef enum { 
  TC_NORMAL_SELECTED = 0,
  TC_SLIP_START_SELECTED = 1,
  TC_DEV_MODE_1_SELECTED = 2,
  TC_DEV_MODE_2_SELECTED = 3,
  TC_ROLLS_MODE_SELECTED = 4,
  TC_DYNO_MODE_SELECTED = 5,
  TC_OFFROAD_ASSIST_SELECTED = 6
 } canutil_UI_tractionControlMode_vals;

#define CANUTIL_GET_VALUE_UI_parkBrakeRequest(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)

typedef enum { 
  PARK_BRAKE_REQUEST_IDLE = 0,
  PARK_BRAKE_REQUEST_PRESSED = 1,
  PARK_BRAKE_REQUEST_SNA = 3
 } canutil_UI_parkBrakeRequest_vals;

#define CANUTIL_GET_VALUE_UI_narrowGarages(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_UI_winchModeRequest(d) ((*( (uint64_t *) d ) & 0x300000000000000) >> 56)

typedef enum { 
  WINCH_MODE_IDLE = 0,
  WINCH_MODE_ENTER = 1,
  WINCH_MODE_EXIT = 2
 } canutil_UI_winchModeRequest_vals;

#define CANUTIL_GET_VALUE_UI_zeroSpeedConfirmed(d) ((*( (uint64_t *) d ) & 0xc0000000000000) >> 54)

typedef enum { 
  ZERO_SPEED_CANCELED = 0,
  ZERO_SPEED_CONFIRMED = 1,
  ZERO_SPEED_UNUSED = 2,
  ZERO_SPEED_SNA = 3
 } canutil_UI_zeroSpeedConfirmed_vals;

#define CANUTIL_GET_VALUE_UI_trailerMode(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)

typedef enum { 
  TRAILER_MODE_OFF = 0,
  TRAILER_MODE_ON = 1
 } canutil_UI_trailerMode_vals;

#define CANUTIL_GET_VALUE_UI_distanceUnits(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)

typedef enum { 
  DISTANCEUNITS_KM = 0,
  DISTANCEUNITS_MILES = 1
 } canutil_UI_distanceUnits_vals;

#define CANUTIL_GET_VALUE_UI_dasDebugEnable(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)
#define CANUTIL_GET_VALUE_UI_accOvertakeEnable(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  ACC_OVERTAKE_OFF = 0,
  ACC_OVERTAKE_ON = 1,
  SNA = 3
 } canutil_UI_accOvertakeEnable_vals;

#define CANUTIL_GET_VALUE_UI_aebEnable(d) ((*( (uint64_t *) d ) & 0xc00000000000) >> 46)

typedef enum { 
  AEB_OFF = 0,
  AEB_ON = 1,
  SNA = 3
 } canutil_UI_aebEnable_vals;

#define CANUTIL_GET_VALUE_UI_aesEnable(d) ((*( (uint64_t *) d ) & 0x300000000000) >> 44)

typedef enum { 
  AES_OFF = 0,
  AES_ON = 1,
  SNA = 3
 } canutil_UI_aesEnable_vals;

#define CANUTIL_GET_VALUE_UI_ahlbEnable(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  AHLB_OFF = 0,
  AHLB_ON = 1,
  SNA = 3
 } canutil_UI_ahlbEnable_vals;

#define CANUTIL_GET_VALUE_UI_autoLaneChangeEnable(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  OFF = 0,
  ON = 1,
  SNA = 3
 } canutil_UI_autoLaneChangeEnable_vals;

#define CANUTIL_GET_VALUE_UI_rebootAutopilot(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)
#define CANUTIL_GET_VALUE_UI_autoParkRequest(d) ((*( (uint64_t *) d ) & 0xf000000000) >> 36)

typedef enum { 
  NONE = 0,
  PARK_LEFT_PARALLEL = 1,
  PARK_LEFT_CROSS = 2,
  PARK_RIGHT_PARALLEL = 3,
  PARK_RIGHT_CROSS = 4,
  PARALLEL_PULL_OUT_TO_LEFT = 5,
  PARALLEL_PULL_OUT_TO_RIGHT = 6,
  ABORT = 7,
  COMPLETE = 8,
  SEARCH = 9,
  PAUSE = 10,
  RESUME = 11,
  SNA = 15
 } canutil_UI_autoParkRequest_vals;

#define CANUTIL_GET_VALUE_UI_bsdEnable(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  BSD_OFF = 0,
  BSD_ON = 1,
  SNA = 3
 } canutil_UI_bsdEnable_vals;

#define CANUTIL_GET_VALUE_UI_fcwEnable(d) ((*( (uint64_t *) d ) & 0xc0000000) >> 30)

typedef enum { 
  FCW_OFF = 0,
  FCW_ON = 1,
  SNA = 3
 } canutil_UI_fcwEnable_vals;

#define CANUTIL_GET_VALUE_UI_fcwSensitivity(d) ((*( (uint64_t *) d ) & 0x30000000) >> 28)

typedef enum { 
  AEB_SENSITIVITY_EARLY = 0,
  AEB_SENSITIVITY_AVERAGE = 1,
  AEB_SENSITIVITY_LATE = 2,
  SNA = 3
 } canutil_UI_fcwSensitivity_vals;

#define CANUTIL_GET_VALUE_UI_latControlEnable(d) ((*( (uint64_t *) d ) & 0xc000000) >> 26)

typedef enum { 
  LATERAL_CONTROL_OFF = 0,
  LATERAL_CONTROL_ON = 1,
  LATERAL_CONTROL_UNAVAILABLE = 2,
  LATERAL_CONTROL_SNA = 3
 } canutil_UI_latControlEnable_vals;

#define CANUTIL_GET_VALUE_UI_ldwEnable(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  NO_HAPTIC = 0,
  LDW_TRIGGERS_HAPTIC = 1,
  SNA = 3
 } canutil_UI_ldwEnable_vals;

#define CANUTIL_GET_VALUE_UI_pedalSafetyEnable(d) ((*( (uint64_t *) d ) & 0xc00000) >> 22)

typedef enum { 
  PEDAL_SAFETY_OFF = 0,
  PEDAL_SAFETY_ON = 1,
  SNA = 3
 } canutil_UI_pedalSafetyEnable_vals;

#define CANUTIL_GET_VALUE_UI_redLightStopSignEnable(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  RLSSW_OFF = 0,
  RLSSW_ON = 1,
  SNA = 3
 } canutil_UI_redLightStopSignEnable_vals;

#define CANUTIL_GET_VALUE_UI_selfParkTune(d) ((*( (uint64_t *) d ) & 0xf0000) >> 16)

typedef enum { 
  SNA = 15
 } canutil_UI_selfParkTune_vals;

#define CANUTIL_GET_VALUE_UI_chassisControlCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_UI_chassisControlChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID268SystemPower 0x268

#define CANUTIL_GET_VALUE_SystemHeatPowerMax268(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_SystemHeatPower268(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_SystemDrivePowerMax268(d) ((*( (uint64_t *) d ) & 0x1ff000000) >> 24)
#define CANUTIL_GET_VALUE_DI_primaryUnitSiliconType(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)

typedef enum { 
  MOSFET = 0,
  IGBT = 1
 } canutil_DI_primaryUnitSiliconType_vals;

#define CANUTIL_GET_VALUE_SystemRegenPowerMax268(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID04FGPSLatLong 0x4f

#define CANUTIL_GET_VALUE_GPSLatitude04F(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_GPSLongitude04F(d) ((*( (uint64_t *) d ) & 0xfffffff000000000) >> 36)
#define CANUTIL_GET_VALUE_GPSAccuracy04F(d) ((*( (uint64_t *) d ) & 0x3f80) >> 7)
#define CANUTIL_ID3D2TotalChargeDischarge 0x3d2

#define CANUTIL_GET_VALUE_TotalDischargeKWh3D2(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_TotalChargeKWh3D2(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_ID3F2BMSCounters 0x3f2

#define CANUTIL_GET_VALUE_BMS_kwhCounter_Id(d) ((*( (uint64_t *) d ) & 0xf0) >> 4)
#define CANUTIL_GET_VALUE_BMS_kwhAcChargeTotalModule3(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_kwhDischargeTotalModule2(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_kwhAcChargeTotalModule2(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_kwhDischargeTotalModule4(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_kwhAcChargeTotalModule4(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_kwhAcChargeTotalModule1(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_kwhDriveDischargeTotal(d) ((*( (uint64_t *) d ) & 0xffffffff000000) >> 24)
#define CANUTIL_GET_VALUE_BMS_dcChargerKwhTotal(d) ((*( (uint64_t *) d ) & 0xffffffff000000) >> 24)
#define CANUTIL_GET_VALUE_BMS_kwhDischargeTotalModule1(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_acChargerKwhTotal(d) ((*( (uint64_t *) d ) & 0xffffffff000000) >> 24)
#define CANUTIL_GET_VALUE_BMS_kwhRegenChargeTotal(d) ((*( (uint64_t *) d ) & 0xffffffff000000) >> 24)
#define CANUTIL_GET_VALUE_BMS_kwhDischargeTotalModule3(d) ((*( (uint64_t *) d ) & 0xfffffff00000) >> 20)
#define CANUTIL_GET_VALUE_BMS_kwhDcChargeTotalModule3(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_BMS_kwhChargeTotalModule2(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_BMS_kwhDcChargeTotalModule2(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_BMS_kwhChargeTotalModule4(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_BMS_kwhDcChargeTotalModule4(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_BMS_kwhDcChargeTotalModule1(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_BMS_kwhChargeTotalModule1(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_GET_VALUE_BMS_kwhChargeTotalModule3(d) ((*( (uint64_t *) d ) & 0xfffffff0000000) >> 28)
#define CANUTIL_ID2D2BMSVAlimits 0x2d2

#define CANUTIL_GET_VALUE_MinVoltage2D2(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_MaxVoltage2D2(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_MaxChargeCurrent2D2(d) ((*( (uint64_t *) d ) & 0x3fff00000000) >> 32)
#define CANUTIL_GET_VALUE_MaxDischargeCurrent2D2(d) ((*( (uint64_t *) d ) & 0x3fff0000) >> 16)
#define CANUTIL_ID541FastChargeMaxLimits 0x541

#define CANUTIL_GET_VALUE_FCMaxPowerLimit541(d) ((*( (uint64_t *) d ) & 0x3ffe000) >> 13)
#define CANUTIL_GET_VALUE_FCMaxCurrentLimit541(d) ((*( (uint64_t *) d ) & 0x1fff000000000000) >> 48)
#define CANUTIL_ID244FastChargeLimits 0x244

#define CANUTIL_GET_VALUE_FCPowerLimit244(d) ((*( (uint64_t *) d ) & 0x3ffe000) >> 13)
#define CANUTIL_GET_VALUE_FCCurrentLimit244(d) ((*( (uint64_t *) d ) & 0x1fff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FCMaxVlimit244(d) ((*( (uint64_t *) d ) & 0x1fff00000000) >> 32)
#define CANUTIL_GET_VALUE_FCMinVlimit244(d) ((*( (uint64_t *) d ) & 0x1fff0000) >> 16)
#define CANUTIL_ID214FastChargeVA 0x214

#define CANUTIL_GET_VALUE_FC_protocolVersion(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_FC_statusCode(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  FC_STATUS_NOTREADY_SNA = 0,
  FC_STATUS_READY = 1,
  FC_STATUS_UPDATE_IN_PROGRESS = 2,
  FC_STATUS_DEPRECATED_3 = 3,
  FC_STATUS_DEPRECATED_4 = 4,
  FC_STATUS_INT_ISOACTIVE = 5,
  FC_STATUS_EXT_ISOACTIVE = 6,
  FC_STATUS_POST_OUT_OF_SERVICE = 7,
  FC_STATUS_NOTCOMPATIBLE = 13,
  FC_STATUS_MALFUNCTION = 14,
  FC_STATUS_NODATA = 15
 } canutil_FC_statusCode_vals;

#define CANUTIL_GET_VALUE_FC_adapterLocked(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_FC_minCurrentLimit(d) ((*( (uint64_t *) d ) & 0x1fff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_type(d) ((*( (uint64_t *) d ) & 0x3800000000) >> 35)

typedef enum { 
  FC_TYPE_SUPERCHARGER = 0,
  FC_TYPE_CHADEMO = 1,
  FC_TYPE_GB = 2,
  FC_TYPE_CC_EVSE = 3,
  FC_TYPE_COMBO = 4,
  FC_TYPE_MC_EVSE = 5,
  FC_TYPE_OTHER = 6,
  FC_TYPE_SNA = 7
 } canutil_FC_type_vals;

#define CANUTIL_GET_VALUE_FC_dcCurrent(d) ((*( (uint64_t *) d ) & 0x3fff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_postID(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  FC_POST_MASTER = 0,
  FC_POST_SLAVE = 1,
  FC_POST_ID_2 = 2,
  FC_POST_ID_SNA = 3
 } canutil_FC_postID_vals;

#define CANUTIL_GET_VALUE_FC_dcVoltage(d) ((*( (uint64_t *) d ) & 0x1fff0000) >> 16)
#define CANUTIL_GET_VALUE_FC_leakageTestNotSupported(d) ((*( (uint64_t *) d ) & 0x8) >> 3)
#define CANUTIL_ID215FCisolation 0x215

#define CANUTIL_GET_VALUE_FCIsolation215(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID217FC_status3 0x217

#define CANUTIL_GET_VALUE_FC_status3DataSelect(d) ((*( (uint64_t *) d ) & 0x3f80) >> 7)

typedef enum { 
  Mux0 = 0,
  Mux1 = 1
 } canutil_FC_status3DataSelect_vals;

#define CANUTIL_GET_VALUE_FC_status3DummySig(d) ((*( (uint64_t *) d ) & 0x200000000000000) >> 57)
#define CANUTIL_GET_VALUE_FC_billingEnergy(d) ((*( (uint64_t *) d ) & 0xffff00) >> 8)
#define CANUTIL_GET_VALUE_FC_class(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)

typedef enum { 
  FC_CLASS_SNA = 0,
  FC_CLASS_SUPERCHARGER = 1,
  FC_CLASS_URBANCHARGER = 2
 } canutil_FC_class_vals;

#define CANUTIL_GET_VALUE_FC_brand(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  FC_BRAND_SNA = 0,
  FC_BRAND_TESLA = 1
 } canutil_FC_brand_vals;

#define CANUTIL_GET_VALUE_FC_coolingType(d) ((*( (uint64_t *) d ) & 0xf00000000000) >> 44)

typedef enum { 
  FC_COOLING_TYPE_SNA = 0,
  FC_COOLING_TYPE_LIQUID = 1,
  FC_COOLING_TYPE_CONVECTION = 2
 } canutil_FC_coolingType_vals;

#define CANUTIL_GET_VALUE_FC_uiStopType(d) ((*( (uint64_t *) d ) & 0xf0000000000) >> 40)

typedef enum { 
  FC_UI_STOP_TYPE_SNA = 0,
  FC_UI_STOP_TYPE_TOGGLE = 1,
  FC_UI_STOP_TYPE_MOMENTARY = 2
 } canutil_FC_uiStopType_vals;

#define CANUTIL_GET_VALUE_FC_generation(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  GENERATION_SNA = 0
 } canutil_FC_generation_vals;

#define CANUTIL_ID321VCFRONT_sensors 0x321

#define CANUTIL_GET_VALUE_VCFRONT_tempCoolantBatInlet(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)

typedef enum { 
  SNA = 1023
 } canutil_VCFRONT_tempCoolantBatInlet_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tempCoolantPTInlet(d) ((*( (uint64_t *) d ) & 0xffe) >> 1)

typedef enum { 
  SNA = 2047
 } canutil_VCFRONT_tempCoolantPTInlet_vals;

#define CANUTIL_GET_VALUE_VCFRONT_coolantLevel(d) ((*( (uint64_t *) d ) & 0x80000000000) >> 43)

typedef enum { 
  NOT_OK = 0,
  FILLED = 1
 } canutil_VCFRONT_coolantLevel_vals;

#define CANUTIL_GET_VALUE_VCFRONT_brakeFluidLevel(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  SNA = 0,
  LOW = 1,
  NORMAL = 2
 } canutil_VCFRONT_brakeFluidLevel_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tempAmbient(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)

typedef enum { 
  SNA = 0
 } canutil_VCFRONT_tempAmbient_vals;

#define CANUTIL_GET_VALUE_VCFRONT_washerFluidLevel(d) ((*( (uint64_t *) d ) & 0x300000000) >> 32)

typedef enum { 
  SNA = 0,
  LOW = 1,
  NORMAL = 2
 } canutil_VCFRONT_washerFluidLevel_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tempAmbientFiltered(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 0
 } canutil_VCFRONT_tempAmbientFiltered_vals;

#define CANUTIL_GET_VALUE_VCFRONT_battSensorIrrational(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_ptSensorIrrational(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_ID301VCFRONT_info 0x301

#define CANUTIL_GET_VALUE_VCFRONT_infoIndex(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  BC_INFO_DEPRECATED_0 = 0,
  BC_INFO_DEPRECATED_1 = 1,
  BC_INFO_DEPRECATED_2 = 2,
  BC_INFO_DEPRECATED_3 = 3,
  BC_INFO_DEPRECATED_4 = 4,
  BC_INFO_DEPRECATED_5 = 5,
  BC_INFO_DEPRECATED_6 = 6,
  BC_INFO_DEPRECATED_7 = 7,
  BC_INFO_DEPRECATED_8 = 8,
  BC_INFO_DEPRECATED_9 = 9,
  BC_INFO_BUILD_HWID_COMPONENTID = 10,
  BC_INFO_PCBAID_ASSYID_USAGEID = 11,
  BC_INFO_APP_CRC = 13,
  BC_INFO_BOOTLOADER_SVN = 14,
  BC_INFO_BOOTLOADER_CRC = 15,
  BC_INFO_SUBCOMPONENT1 = 16,
  BC_INFO_APP_GITHASH = 17,
  BC_INFO_BOOTLOADER_GITHASH = 18,
  BC_INFO_VERSION_DEPRECATED = 19,
  BC_INFO_UDS_PROTOCOL_BOOTCRC = 20,
  BC_INFO_SUBCOMPONENT2 = 23,
  BC_INFO_SUBCOMPONENT3 = 24,
  BC_INFO_SUBCOMPONENT4 = 31,
  BC_INFO_SUBCOMPONENT5 = 32,
  BC_INFO_SUBCOMPONENT6 = 33,
  BC_INFO_END = 255
 } canutil_VCFRONT_infoIndex_vals;

#define CANUTIL_GET_VALUE_VCFRONT_infoAppCrc(d) ((*( (uint64_t *) d ) & 0xffffffff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_infoAppGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_infoBootGitHash(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_infoBootUdsProtoVersion(d) ((*( (uint64_t *) d ) & 0xffff00) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_infoBuildType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  INFO_UNKNOWN_BUILD = 0,
  INFO_PLATFORM_BUILD = 1,
  INFO_LOCAL_BUILD = 2,
  INFO_TRACEABLE_CI_BUILD = 3,
  INFO_MFG_BUILD = 4
 } canutil_VCFRONT_infoBuildType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_infoPcbaId(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_infoPlatformType(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_infoAssemblyId(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)

typedef enum { 
  ASSEMBLY1 = 1,
  ASSEMBLY_SNA = 255
 } canutil_VCFRONT_infoAssemblyId_vals;

#define CANUTIL_GET_VALUE_VCFRONT_infoBuildConfigId(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_infoBootCrc(d) ((*( (uint64_t *) d ) & 0xffffffff00) >> 8)
#define CANUTIL_GET_VALUE_VCFRONT_infoUsageId(d) ((*( (uint64_t *) d ) & 0xffff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_hcmlAppCRC(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_hcmrAppCRC(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_infoHardwareId(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_infoSubcomponent3(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_infoSubcomponent4(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_infoSubcomponent5(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_infoSubcomponent6(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_infoSubUsageId(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)
#define CANUTIL_GET_VALUE_VCFRONT_infoComponentId(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_ID201VCFRONT_loggingAndVitals10H 0x201

#define CANUTIL_GET_VALUE_VCFRONT_loggingAndVitals10HzInde(d) ((*( (uint64_t *) d ) & 0x38) >> 3)

typedef enum { 
  TARGETS_AND_ACTUALS_0 = 0,
  TARGETS_SENSORS_AND_ACTUALS_1 = 1,
  STATES_AND_SENSORS = 2,
  EXV_FLOW = 3,
  HP_STATE = 4,
  EXV_FLOW_TARGET = 5,
  EXV_STATE = 6,
  END = 7
 } canutil_VCFRONT_loggingAndVitals10HzInde_vals;

#define CANUTIL_GET_VALUE_VCFRONT_chillerExvFlow(d) ((*( (uint64_t *) d ) & 0x1ff80) >> 7)
#define CANUTIL_GET_VALUE_VCFRONT_chillerExvFlowTarget(d) ((*( (uint64_t *) d ) & 0x1ff80) >> 7)
#define CANUTIL_GET_VALUE_VCFRONT_chillerExvState(d) ((*( (uint64_t *) d ) & 0x1e) >> 1)

typedef enum { 
  UNINIT = 0,
  INIT_OPEN = 1,
  INIT_CLOSE = 2,
  READY = 3,
  FAULTED = 4,
  WAIT = 5,
  OVERDRIVING_SHUT = 6,
  READY_SHUT = 7,
  CALIB_CLOSE = 8,
  CALIB_CLOSE_OVERDRIVE = 9
 } canutil_VCFRONT_chillerExvState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpHighSideHX(d) ((*( (uint64_t *) d ) & 0x6000000000000000) >> 61)

typedef enum { 
  NONE = 0,
  LCC = 1,
  CC = 2,
  BOTH = 3
 } canutil_VCFRONT_hpHighSideHX_vals;

#define CANUTIL_GET_VALUE_VCFRONT_pumpBatteryRPMActual(d) ((*( (uint64_t *) d ) & 0x1ff80) >> 7)

typedef enum { 
  SNA = 1023
 } canutil_VCFRONT_pumpBatteryRPMActual_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tempRefrigDischarge(d) ((*( (uint64_t *) d ) & 0x7ff00) >> 8)

typedef enum { 
  SNA = 2047
 } canutil_VCFRONT_tempRefrigDischarge_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpLowSideHX(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)

typedef enum { 
  NONE = 0,
  CHILLER = 1,
  EVAP = 2,
  BOTH = 3
 } canutil_VCFRONT_hpLowSideHX_vals;

#define CANUTIL_GET_VALUE_VCFRONT_activeLouverOpenPosTarg(d) ((*( (uint64_t *) d ) & 0x7f00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_evapExvState(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  UNINIT = 0,
  INIT_OPEN = 1,
  INIT_CLOSE = 2,
  READY = 3,
  FAULTED = 4,
  WAIT = 5,
  OVERDRIVING_SHUT = 6,
  READY_SHUT = 7,
  CALIB_CLOSE = 8,
  CALIB_CLOSE_OVERDRIVE = 9
 } canutil_VCFRONT_evapExvState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpDominantLoad(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  NONE = 0,
  EVAP = 1,
  CHILLER = 2,
  LOW_BOTH = 3,
  LCC = 4,
  CC = 5,
  HIGH_BOTH = 6
 } canutil_VCFRONT_hpDominantLoad_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpBlendType(d) ((*( (uint64_t *) d ) & 0x60000000000000) >> 53)

typedef enum { 
  HP_NONE = 0,
  HP_PARTIAL = 1,
  HP_FULL = 2
 } canutil_VCFRONT_hpBlendType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_recircExvState(d) ((*( (uint64_t *) d ) & 0xf0000000000000) >> 52)

typedef enum { 
  UNINIT = 0,
  INIT_OPEN = 1,
  INIT_CLOSE = 2,
  READY = 3,
  FAULTED = 4,
  WAIT = 5,
  OVERDRIVING_SHUT = 6,
  READY_SHUT = 7,
  CALIB_CLOSE = 8,
  CALIB_CLOSE_OVERDRIVE = 9
 } canutil_VCFRONT_recircExvState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_evapExvFlow(d) ((*( (uint64_t *) d ) & 0x1ff8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCFRONT_evapExvFlowTarget(d) ((*( (uint64_t *) d ) & 0x1ff8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCFRONT_hpQuietModeEnabled(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)
#define CANUTIL_GET_VALUE_VCFRONT_pumpPowertrainRPMActual(d) ((*( (uint64_t *) d ) & 0x1ff8000000000000) >> 51)

typedef enum { 
  SNA = 1023
 } canutil_VCFRONT_pumpPowertrainRPMActual_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpCabinLoadType(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  NONE = 0,
  CC = 1,
  REHEAT = 2,
  EVAP = 3
 } canutil_VCFRONT_hpCabinLoadType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_activeLouverOpenPos(d) ((*( (uint64_t *) d ) & 0x7f000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_fanDemand(d) ((*( (uint64_t *) d ) & 0x7f000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_hpBatteryLoadType(d) ((*( (uint64_t *) d ) & 0x3000000000000) >> 48)

typedef enum { 
  NONE = 0,
  BATT_HEAT = 1,
  BATT_COOL = 2
 } canutil_VCFRONT_hpBatteryLoadType_vals;

#define CANUTIL_GET_VALUE_VCFRONT_lccExvState(d) ((*( (uint64_t *) d ) & 0xf000000000000) >> 48)

typedef enum { 
  UNINIT = 0,
  INIT_OPEN = 1,
  INIT_CLOSE = 2,
  READY = 3,
  FAULTED = 4,
  WAIT = 5,
  OVERDRIVING_SHUT = 6,
  READY_SHUT = 7,
  CALIB_CLOSE = 8,
  CALIB_CLOSE_OVERDRIVE = 9
 } canutil_VCFRONT_lccExvState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_hpReqCoolantMode(d) ((*( (uint64_t *) d ) & 0x1c00000000000) >> 46)

typedef enum { 
  ANY = 0,
  SERIES_NO_BYPASS = 1,
  SERIES_BYPASS = 2,
  PARALLEL = 3,
  AMBIENT_SOURCE = 4
 } canutil_VCFRONT_hpReqCoolantMode_vals;

#define CANUTIL_GET_VALUE_VCFRONT_cclExvState(d) ((*( (uint64_t *) d ) & 0xf00000000000) >> 44)

typedef enum { 
  UNINIT = 0,
  INIT_OPEN = 1,
  INIT_CLOSE = 2,
  READY = 3,
  FAULTED = 4,
  WAIT = 5,
  OVERDRIVING_SHUT = 6,
  READY_SHUT = 7,
  CALIB_CLOSE = 8,
  CALIB_CLOSE_OVERDRIVE = 9
 } canutil_VCFRONT_cclExvState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ccrExvState(d) ((*( (uint64_t *) d ) & 0xf0000000000) >> 40)

typedef enum { 
  UNINIT = 0,
  INIT_OPEN = 1,
  INIT_CLOSE = 2,
  READY = 3,
  FAULTED = 4,
  WAIT = 5,
  OVERDRIVING_SHUT = 6,
  READY_SHUT = 7,
  CALIB_CLOSE = 8,
  CALIB_CLOSE_OVERDRIVE = 9
 } canutil_VCFRONT_ccrExvState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_compressorState(d) ((*( (uint64_t *) d ) & 0x30000000000) >> 40)

typedef enum { 
  STANDBY = 0,
  READY = 1,
  RUNNING = 2,
  FAULT = 3
 } canutil_VCFRONT_compressorState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_radiatorFanRPMActual(d) ((*( (uint64_t *) d ) & 0x3ff0000000000) >> 40)

typedef enum { 
  SNA = 1023
 } canutil_VCFRONT_radiatorFanRPMActual_vals;

#define CANUTIL_GET_VALUE_VCFRONT_recircExvFlow(d) ((*( (uint64_t *) d ) & 0x3ff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_recircExvFlowTarget(d) ((*( (uint64_t *) d ) & 0x3ff0000000000) >> 40)
#define CANUTIL_GET_VALUE_VCFRONT_tempRefrigLiquid(d) ((*( (uint64_t *) d ) & 0x7ff0000000000) >> 40)

typedef enum { 
  SNA = 2047
 } canutil_VCFRONT_tempRefrigLiquid_vals;

#define CANUTIL_GET_VALUE_VCFRONT_compDemandEvap(d) ((*( (uint64_t *) d ) & 0x1fc000000000) >> 38)
#define CANUTIL_GET_VALUE_VCFRONT_exvState(d) ((*( (uint64_t *) d ) & 0x780000000) >> 31)

typedef enum { 
  UNINIT = 0,
  INIT_OPEN = 1,
  INIT_CLOSE = 2,
  READY = 3,
  FAULTED = 4,
  WAIT = 5,
  OVERDRIVING_SHUT = 6,
  READY_SHUT = 7,
  CALIB_CLOSE = 8,
  CALIB_CLOSE_OVERDRIVE = 9
 } canutil_VCFRONT_exvState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_lccExvFlow(d) ((*( (uint64_t *) d ) & 0xffc0000000) >> 30)
#define CANUTIL_GET_VALUE_VCFRONT_lccExvFlowTarget(d) ((*( (uint64_t *) d ) & 0xffc0000000) >> 30)
#define CANUTIL_GET_VALUE_VCFRONT_tempSuperheatActual(d) ((*( (uint64_t *) d ) & 0xffc0000000) >> 30)

typedef enum { 
  SNA = 1023
 } canutil_VCFRONT_tempSuperheatActual_vals;

#define CANUTIL_GET_VALUE_VCFRONT_solenoidEvapState(d) ((*( (uint64_t *) d ) & 0x18000000) >> 27)

typedef enum { 
  UNDEFINED = 0,
  OPENED = 1,
  CLOSED = 2,
  FAULTED = 3
 } canutil_VCFRONT_solenoidEvapState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_compDemandChiller(d) ((*( (uint64_t *) d ) & 0xfe000000) >> 25)
#define CANUTIL_GET_VALUE_VCFRONT_pressureRefrigLiquid(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_pressureRefrigLiquid_vals;

#define CANUTIL_GET_VALUE_VCFRONT_cclExvFlow(d) ((*( (uint64_t *) d ) & 0x3ff00000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_cclExvFlowTarget(d) ((*( (uint64_t *) d ) & 0x3ff00000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_tempSuperheatTarget(d) ((*( (uint64_t *) d ) & 0x3ff00000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_pressureRefrigSuctionVit(d) ((*( (uint64_t *) d ) & 0x1fc0000) >> 18)

typedef enum { 
  SNA = 127
 } canutil_VCFRONT_pressureRefrigSuctionVit_vals;

#define CANUTIL_GET_VALUE_VCFRONT_tempSuperheatActFiltered(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_pressureRefrigDischargeV(d) ((*( (uint64_t *) d ) & 0x7f800) >> 11)

typedef enum { 
  SNA = 255
 } canutil_VCFRONT_pressureRefrigDischargeV_vals;

#define CANUTIL_GET_VALUE_VCFRONT_ccrExvFlow(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_VCFRONT_ccrExvFlowTarget(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_VCFRONT_exvFlowTarget(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_VCFRONT_coolantValveMode(d) ((*( (uint64_t *) d ) & 0x18) >> 3)

typedef enum { 
  SERIES = 0,
  PARALLEL = 1,
  BLEND = 2,
  AMBIENT_SOURCE = 3
 } canutil_VCFRONT_coolantValveMode_vals;

#define CANUTIL_ID3D8Elevation 0x3d8

#define CANUTIL_GET_VALUE_Elevation3D8(d) ((*( (uint64_t *) d ) & 0xfffc000) >> 14)
#define CANUTIL_ID261_12vBattStatus 0x261

#define CANUTIL_GET_VALUE_VCFRONT_12VBatteryStatusIndex(d) ((*( (uint64_t *) d ) & 0xc) >> 2)
#define CANUTIL_GET_VALUE_v12vBattAH261(d) ((*( (uint64_t *) d ) & 0x3fff000) >> 12)
#define CANUTIL_GET_VALUE_VCFRONT_voltageProfile(d) ((*( (uint64_t *) d ) & 0xc000000000000000) >> 62)

typedef enum { 
  CHARGE = 0,
  FLOAT = 1,
  REDUCED_FLOAT = 2,
  ALWAYS_CLOSED_CONTACTORS = 3
 } canutil_VCFRONT_voltageProfile_vals;

#define CANUTIL_GET_VALUE_VCFRONT_IBSFault(d) ((*( (uint64_t *) d ) & 0x4000000000000000) >> 62)
#define CANUTIL_GET_VALUE_VCFRONT_batterySupportRequest(d) ((*( (uint64_t *) d ) & 0x2000000000000000) >> 61)
#define CANUTIL_GET_VALUE_VCFRONT_batterySMState(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)

typedef enum { 
  INIT = 0,
  CHARGE = 1,
  DISCHARGE = 2,
  STANDBY = 3,
  RESISTANCE_ESTIMATION = 4,
  OTA_STANDBY = 5,
  DISCONNECTED_BATTERY_TEST = 6,
  SHORTED_CELL_TEST = 7,
  FAULT = 8,
  RECOVERY = 9
 } canutil_VCFRONT_batterySMState_vals;

#define CANUTIL_GET_VALUE_VCFRONT_12VOverchargeCounter(d) ((*( (uint64_t *) d ) & 0xf000000000000000) >> 60)
#define CANUTIL_GET_VALUE_VCFRONT_targetCurrent(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_voltageDropCounter(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_VCFRONT_isVehicleSupported(d) ((*( (uint64_t *) d ) & 0x10000000000000) >> 52)
#define CANUTIL_GET_VALUE_VCFRONT_shortedCellFaultCounter(d) ((*( (uint64_t *) d ) & 0x38000000000000) >> 51)
#define CANUTIL_GET_VALUE_v12vBattCurrent261(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_IBSCurrent(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_v12vBattTemp261(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VCFRONT_silentWakeIBSCurrent(d) ((*( (uint64_t *) d ) & 0xfff00000000) >> 32)
#define CANUTIL_GET_VALUE_v12vBattVoltage261(d) ((*( (uint64_t *) d ) & 0xfff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_12VBatteryTargetVoltage(d) ((*( (uint64_t *) d ) & 0x3ff00000000) >> 32)
#define CANUTIL_GET_VALUE_VCFRONT_firstChargeOTA(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_PCSMia(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_VCFRONT_firstChargePOR(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_VCFRONT_chargeNeeded(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_VCFRONT_good12VforUpdate(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_VCFRONT_LVLoadRequest(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_VCFRONT_voltageFloorReachedCount(d) ((*( (uint64_t *) d ) & 0xf0000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_reverseBatteryFault(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_VCFRONT_LVBatterySupported(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_VCFRONT_LVBatteryDisconnected(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_VCFRONT_12VBatteryStatusCounter(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_VCFRONT_12VBatteryStatusChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID129SteeringAngle 0x129

#define CANUTIL_GET_VALUE_SteeringAngle129(d) ((*( (uint64_t *) d ) & 0x3fff000000000000) >> 48)
#define CANUTIL_GET_VALUE_SteeringSpeed129(d) ((*( (uint64_t *) d ) & 0x3fff00000000) >> 32)
#define CANUTIL_GET_VALUE_SteeringSensorA129(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)
#define CANUTIL_GET_VALUE_SteeringSensorB129(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_SteeringSensorC129(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID264ChargeLineStatus 0x264

#define CANUTIL_GET_VALUE_ChargeLineVoltage264(d) ((*( (uint64_t *) d ) & 0xfffc000) >> 14)
#define CANUTIL_GET_VALUE_ChargeLineCurrent264(d) ((*( (uint64_t *) d ) & 0x7fc000000000000) >> 50)
#define CANUTIL_GET_VALUE_ChargeLinePower264(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_ChargeLineCurrentLimit264(d) ((*( (uint64_t *) d ) & 0x3ff00000000) >> 32)
#define CANUTIL_ID224PCSDCDCstatus 0x224

#define CANUTIL_GET_VALUE_DCDCPrechargeStatus224(d) ((*( (uint64_t *) d ) & 0xc) >> 2)
#define CANUTIL_GET_VALUE_DCDC12VSupportStatus224(d) ((*( (uint64_t *) d ) & 0xc000000000000000) >> 62)
#define CANUTIL_GET_VALUE_DCDCHvBusDischargeStatus224(d) ((*( (uint64_t *) d ) & 0x3000000000000000) >> 60)
#define CANUTIL_GET_VALUE_DCDCstate224(d) ((*( (uint64_t *) d ) & 0x3c00000000000000) >> 58)

typedef enum { 
  Idle = 0,
  12vChg = 1,
  PrechargeStart = 2,
  Precharge = 3,
  HVactive = 4,
  Shutdown = 5,
  Error = 6
 } canutil_DCDCstate224_vals;

#define CANUTIL_GET_VALUE_DCDCSubState224(d) ((*( (uint64_t *) d ) & 0x7c0000000000000) >> 54)

typedef enum { 
  PWR_UP_INIT = 0,
  STANDBY = 1,
  12V_SUPPORT_ACTIVE = 2,
  DIS_HVBUS = 3,
  PCHG_FAST_DIS_HVBUS = 4,
  PCHG_SLOW_DIS_HVBUS = 5,
  PCHG_DWELL_CHARGE = 6,
  PCHG_DWELL_WAIT = 7,
  PCHG_DI_RECOVERY_WAIT = 8,
  PCHG_ACTIVE = 9,
  PCHG_FLT_FAST_DIS_HVBUS = 10,
  SHUTDOWN = 11,
  12V_SUPPORT_FAULTED = 12,
  DIS_HVBUS_FAULTED = 13,
  PCHG_FAULTED = 14,
  CLEAR_FAULTS = 15,
  FAULTED = 16,
  NUM = 17
 } canutil_DCDCSubState224_vals;

#define CANUTIL_GET_VALUE_DCDCFaulted224(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)
#define CANUTIL_GET_VALUE_DCDCoutputCurrent224(d) ((*( (uint64_t *) d ) & 0xfff000000000000) >> 48)
#define CANUTIL_GET_VALUE_DCDCOutputIsLimited224(d) ((*( (uint64_t *) d ) & 0x1000000000) >> 36)
#define CANUTIL_GET_VALUE_DCDCoutputCurrentMax224(d) ((*( (uint64_t *) d ) & 0x7ff800000000) >> 35)
#define CANUTIL_GET_VALUE_DCDCPrechargeRtyCnt224(d) ((*( (uint64_t *) d ) & 0x3800000) >> 23)
#define CANUTIL_GET_VALUE_DCDC12VSupportRtyCnt224(d) ((*( (uint64_t *) d ) & 0xf00000) >> 20)
#define CANUTIL_GET_VALUE_DCDCDischargeRtyCnt224(d) ((*( (uint64_t *) d ) & 0xf0000) >> 16)
#define CANUTIL_GET_VALUE_DCDCPwmEnableLine224(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)
#define CANUTIL_GET_VALUE_DCDCSupportingFixedLvTarget224(d) ((*( (uint64_t *) d ) & 0x800) >> 11)
#define CANUTIL_GET_VALUE_PCS_ecuLogUploadRequest224(d) ((*( (uint64_t *) d ) & 0xc00) >> 10)
#define CANUTIL_GET_VALUE_DCDCPrechargeRestartCnt224(d) ((*( (uint64_t *) d ) & 0x700) >> 8)
#define CANUTIL_GET_VALUE_DCDCInitialPrechargeSubState224(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)
#define CANUTIL_ID227CMP_state 0x227

#define CANUTIL_GET_VALUE_CMP_speedRPM(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_CMP_speedDuty(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CMP_inverterTemperature(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_CMP_HVOverVoltage(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)
#define CANUTIL_GET_VALUE_CMP_HVUnderVoltage(d) ((*( (uint64_t *) d ) & 0x800000) >> 23)
#define CANUTIL_GET_VALUE_CMP_overTemperature(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_CMP_underTemperature(d) ((*( (uint64_t *) d ) & 0x200000) >> 21)
#define CANUTIL_GET_VALUE_CMP_VCFRONTCANTimeout(d) ((*( (uint64_t *) d ) & 0x100000) >> 20)
#define CANUTIL_GET_VALUE_CMP_overCurrent(d) ((*( (uint64_t *) d ) & 0x80000) >> 19)
#define CANUTIL_GET_VALUE_CMP_currentSensorCal(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_CMP_failedStart(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)
#define CANUTIL_GET_VALUE_CMP_motorVoltageSat(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)
#define CANUTIL_GET_VALUE_CMP_shortCircuit(d) ((*( (uint64_t *) d ) & 0x8000) >> 15)
#define CANUTIL_GET_VALUE_CMP_repeatOverCurrent(d) ((*( (uint64_t *) d ) & 0x4000) >> 14)
#define CANUTIL_GET_VALUE_CMP_state(d) ((*( (uint64_t *) d ) & 0xf00) >> 8)

typedef enum { 
  CMP_STATE_NONE = 0,
  CMP_STATE_NORMAL = 1,
  CMP_STATE_WAIT = 2,
  CMP_STATE_FAULT = 3,
  CMP_STATE_SOFT_START = 4,
  CMP_STATE_SOFT_SHUTDOWN = 5,
  CMP_STATE_SNA = 15
 } canutil_CMP_state_vals;

#define CANUTIL_GET_VALUE_CMP_ready(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID118DriveSystemStatus 0x118

#define CANUTIL_GET_VALUE_DI_systemStatusChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DI_systemStatusCounter(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DI_driveBlocked(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  DRIVE_BLOCKED_NONE = 0,
  DRIVE_BLOCKED_FRUNK = 1,
  DRIVE_BLOCKED_PROX = 2
 } canutil_DI_driveBlocked_vals;

#define CANUTIL_GET_VALUE_DI_systemState(d) ((*( (uint64_t *) d ) & 0x7000000000000) >> 48)

typedef enum { 
  DI_SYS_UNAVAILABLE = 0,
  DI_SYS_IDLE = 1,
  DI_SYS_STANDBY = 2,
  DI_SYS_FAULT = 3,
  DI_SYS_ABORT = 4,
  DI_SYS_ENABLE = 5
 } canutil_DI_systemState_vals;

#define CANUTIL_GET_VALUE_DI_brakePedalState(d) ((*( (uint64_t *) d ) & 0x600000000000) >> 45)

typedef enum { 
  OFF = 0,
  ON = 1,
  INVALID = 2
 } canutil_DI_brakePedalState_vals;

#define CANUTIL_GET_VALUE_DI_gear(d) ((*( (uint64_t *) d ) & 0x380000000000) >> 43)

typedef enum { 
  DI_GEAR_INVALID = 0,
  DI_GEAR_P = 1,
  DI_GEAR_R = 2,
  DI_GEAR_N = 3,
  DI_GEAR_D = 4,
  DI_GEAR_SNA = 7
 } canutil_DI_gear_vals;

#define CANUTIL_GET_VALUE_DI_regenLight(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)
#define CANUTIL_GET_VALUE_DI_immobilizerState(d) ((*( (uint64_t *) d ) & 0xe000000000) >> 37)

typedef enum { 
  DI_IMM_STATE_INIT_SNA = 0,
  DI_IMM_STATE_REQUEST = 1,
  DI_IMM_STATE_AUTHENTICATING = 2,
  DI_IMM_STATE_DISARMED = 3,
  DI_IMM_STATE_IDLE = 4,
  DI_IMM_STATE_RESET = 5,
  DI_IMM_STATE_FAULT = 6
 } canutil_DI_immobilizerState_vals;

#define CANUTIL_GET_VALUE_DI_accelPedalPos(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)

typedef enum { 
  SNA = 255
 } canutil_DI_accelPedalPos_vals;

#define CANUTIL_GET_VALUE_DI_tractionControlMode(d) ((*( (uint64_t *) d ) & 0x7000000) >> 24)

typedef enum { 
  Standard = 0,
  Slip Start = 1,
  Dev1 = 2,
  Dev2 = 3,
  Rolls Mode = 4,
  Dyno Mode = 5,
  Offroad Assist = 6
 } canutil_DI_tractionControlMode_vals;

#define CANUTIL_GET_VALUE_DI_epbRequest(d) ((*( (uint64_t *) d ) & 0x300000) >> 20)

typedef enum { 
  DI_EPBREQUEST_NO_REQUEST = 0,
  DI_EPBREQUEST_PARK = 1,
  DI_EPBREQUEST_UNPARK = 2
 } canutil_DI_epbRequest_vals;

#define CANUTIL_GET_VALUE_DI_proximity(d) ((*( (uint64_t *) d ) & 0x40000) >> 18)
#define CANUTIL_GET_VALUE_DI_keepDrivePowerStateRequest(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)

typedef enum { 
  NO_REQUEST = 0,
  KEEP_ALIVE = 1
 } canutil_DI_keepDrivePowerStateRequest_vals;

#define CANUTIL_GET_VALUE_DI_trackModeState(d) ((*( (uint64_t *) d ) & 0x30000) >> 16)

typedef enum { 
  TRACK_MODE_UNAVAILABLE = 0,
  TRACK_MODE_AVAILABLE = 1,
  TRACK_MODE_ON = 2
 } canutil_DI_trackModeState_vals;

#define CANUTIL_ID352BMS_energyStatus 0x352

#define CANUTIL_GET_VALUE_BMS_nominalFullPackEnergy(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)

typedef enum { 
  SNA = 2047
 } canutil_BMS_nominalFullPackEnergy_vals;

#define CANUTIL_GET_VALUE_BMS_nominalEnergyRemaining(d) ((*( (uint64_t *) d ) & 0xffe0000000000000) >> 53)

typedef enum { 
  SNA = 2047
 } canutil_BMS_nominalEnergyRemaining_vals;

#define CANUTIL_GET_VALUE_BMS_expectedEnergyRemaining(d) ((*( (uint64_t *) d ) & 0x1ffc0000000000) >> 42)

typedef enum { 
  SNA = 2047
 } canutil_BMS_expectedEnergyRemaining_vals;

#define CANUTIL_GET_VALUE_BMS_idealEnergyRemaining(d) ((*( (uint64_t *) d ) & 0x3ff80000000) >> 31)

typedef enum { 
  SNA = 2047
 } canutil_BMS_idealEnergyRemaining_vals;

#define CANUTIL_GET_VALUE_BMS_energyToChargeComplete(d) ((*( (uint64_t *) d ) & 0x7ff00000) >> 20)

typedef enum { 
  SNA = 2047
 } canutil_BMS_energyToChargeComplete_vals;

#define CANUTIL_GET_VALUE_BMS_energyBuffer(d) ((*( (uint64_t *) d ) & 0x1fe00) >> 9)

typedef enum { 
  SNA = 255
 } canutil_BMS_energyBuffer_vals;

#define CANUTIL_GET_VALUE_BMS_fullChargeComplete(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID37DCP_thermalStatus 0x37d

#define CANUTIL_GET_VALUE_CP_dcPinTemperature(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_CP_acPinTemperature(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_CP_dTdt_dcPinActual(d) ((*( (uint64_t *) d ) & 0xfff0000000000) >> 40)
#define CANUTIL_GET_VALUE_CP_dcPinTemperatureModeled(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_CP_dTdt_dcPinExpected(d) ((*( (uint64_t *) d ) & 0xfff0000) >> 16)
#define CANUTIL_ID392BMS_packConfig 0x392

#define CANUTIL_GET_VALUE_BMS_packConfigMultiplexer(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  Mux0 = 0,
  Mux1 = 1
 } canutil_BMS_packConfigMultiplexer_vals;

#define CANUTIL_GET_VALUE_BMS_moduleType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)

typedef enum { 
  UNKNOWN = 0,
  E3_NCT = 1,
  E1_NCT = 2,
  E3_CT = 3,
  E1_CT = 4,
  E1_CP = 5
 } canutil_BMS_moduleType_vals;

#define CANUTIL_GET_VALUE_BMS_reservedConfig_0(d) ((*( (uint64_t *) d ) & 0x1f00000000000000) >> 56)

typedef enum { 
  BMS_CONFIG_0 = 0,
  BMS_CONFIG_1 = 1,
  BMS_CONFIG_2 = 2,
  BMS_CONFIG_3 = 3,
  BMS_CONFIG_4 = 4,
  BMS_CONFIG_5 = 5,
  BMS_CONFIG_6 = 6,
  BMS_CONFIG_7 = 7,
  BMS_CONFIG_8 = 8,
  BMS_CONFIG_9 = 9,
  BMS_CONFIG_10 = 10,
  BMS_CONFIG_11 = 11,
  BMS_CONFIG_12 = 12,
  BMS_CONFIG_13 = 13,
  BMS_CONFIG_14 = 14,
  BMS_CONFIG_15 = 15,
  BMS_CONFIG_16 = 16,
  BMS_CONFIG_17 = 17,
  BMS_CONFIG_18 = 18,
  BMS_CONFIG_19 = 19,
  BMS_CONFIG_20 = 20,
  BMS_CONFIG_21 = 21,
  BMS_CONFIG_22 = 22,
  BMS_CONFIG_23 = 23,
  BMS_CONFIG_24 = 24,
  BMS_CONFIG_25 = 25,
  BMS_CONFIG_26 = 26,
  BMS_CONFIG_27 = 27,
  BMS_CONFIG_28 = 28,
  BMS_CONFIG_29 = 29,
  BMS_CONFIG_30 = 30,
  BMS_CONFIG_31 = 31
 } canutil_BMS_reservedConfig_0_vals;

#define CANUTIL_GET_VALUE_BMS_packMass(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_platformMaxBusVoltage(d) ((*( (uint64_t *) d ) & 0x3ff0000000000) >> 40)
#define CANUTIL_ID252BMS_powerAvailable 0x252

#define CANUTIL_GET_VALUE_BMS_maxRegenPower(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_BMS_maxDischargePower(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_maxStationaryHeatPower(d) ((*( (uint64_t *) d ) & 0x3ff00000000) >> 32)
#define CANUTIL_GET_VALUE_BMS_notEnoughPowerForHeatPump(d) ((*( (uint64_t *) d ) & 0x400000) >> 22)
#define CANUTIL_GET_VALUE_BMS_powerLimitsState(d) ((*( (uint64_t *) d ) & 0x10000) >> 16)

typedef enum { 
  POWER_NOT_CALCULATED_FOR_DRIVE = 0,
  POWER_CALCULATED_FOR_DRIVE = 1
 } canutil_BMS_powerLimitsState_vals;

#define CANUTIL_GET_VALUE_BMS_hvacPowerBudget(d) ((*( (uint64_t *) d ) & 0xffc000) >> 14)
#define CANUTIL_ID312BMSthermal 0x312

#define CANUTIL_GET_VALUE_BMSdissipation312(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_BMSflowRequest312(d) ((*( (uint64_t *) d ) & 0x1fc0000000000000) >> 54)
#define CANUTIL_GET_VALUE_BMSinletActiveCoolTarget312(d) ((*( (uint64_t *) d ) & 0xff800000000000) >> 47)
#define CANUTIL_GET_VALUE_BMSinletPassiveTarget312(d) ((*( (uint64_t *) d ) & 0x7fc000000000) >> 38)
#define CANUTIL_GET_VALUE_BMSinletActiveHeatTarget312(d) ((*( (uint64_t *) d ) & 0x3fe0000000) >> 29)
#define CANUTIL_GET_VALUE_BMSminPackTemperature(d) ((*( (uint64_t *) d ) & 0x1ff00000) >> 20)
#define CANUTIL_GET_VALUE_BMSmaxPackTemperature(d) ((*( (uint64_t *) d ) & 0xff800) >> 11)
#define CANUTIL_GET_VALUE_BMSpcsNoFlowRequest312(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_BMSnoFlowRequest312(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID292BMS_SOC 0x292

#define CANUTIL_GET_VALUE_SOCmin292(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_SOCUI292(d) ((*( (uint64_t *) d ) & 0xffc0000000000000) >> 54)
#define CANUTIL_GET_VALUE_SOCmax292(d) ((*( (uint64_t *) d ) & 0x3ff00000000000) >> 44)
#define CANUTIL_GET_VALUE_SOCave292(d) ((*( (uint64_t *) d ) & 0xffc00000000) >> 34)
#define CANUTIL_GET_VALUE_BattBeginningOfLifeEnergy292(d) ((*( (uint64_t *) d ) & 0x3ff000000) >> 24)

typedef enum { 
  SNA = 1023
 } canutil_BattBeginningOfLifeEnergy292_vals;

#define CANUTIL_GET_VALUE_BMS_battTempPct(d) ((*( (uint64_t *) d ) & 0x3fc000) >> 14)

typedef enum { 
  SNA = 255
 } canutil_BMS_battTempPct_vals;

#define CANUTIL_ID257DIspeed 0x257

#define CANUTIL_GET_VALUE_DI_speedChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DI_speedCounter(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DI_vehicleSpeed(d) ((*( (uint64_t *) d ) & 0xfff0000000000000) >> 52)

typedef enum { 
  SNA = 4095
 } canutil_DI_vehicleSpeed_vals;

#define CANUTIL_GET_VALUE_DI_uiSpeed(d) ((*( (uint64_t *) d ) & 0x1ff0000000000) >> 40)

typedef enum { 
  DI_UI_SPEED_SNA = 511
 } canutil_DI_uiSpeed_vals;

#define CANUTIL_GET_VALUE_DI_uiSpeedUnits(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)

typedef enum { 
  DI_SPEED_MPH = 0,
  DI_SPEED_KPH = 1
 } canutil_DI_uiSpeedUnits_vals;

#define CANUTIL_GET_VALUE_DI_uiSpeedHighSpeed(d) ((*( (uint64_t *) d ) & 0x7fc0000000) >> 30)

typedef enum { 
  DI_UI_HIGH_SPEED_SNA = 511
 } canutil_DI_uiSpeedHighSpeed_vals;

#define CANUTIL_ID2A8CMPD_state 0x2a8

#define CANUTIL_GET_VALUE_CMPD_speedRPM(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)
#define CANUTIL_GET_VALUE_CMPD_speedDuty(d) ((*( (uint64_t *) d ) & 0x7fe0000000000000) >> 53)
#define CANUTIL_GET_VALUE_CMPD_inputHVPower(d) ((*( (uint64_t *) d ) & 0x3ff80000000000) >> 43)
#define CANUTIL_GET_VALUE_CMPD_inputHVCurrent(d) ((*( (uint64_t *) d ) & 0x1ff00000000) >> 32)
#define CANUTIL_GET_VALUE_CMPD_inputHVVoltage(d) ((*( (uint64_t *) d ) & 0x3ff800000) >> 23)
#define CANUTIL_GET_VALUE_CMPD_powerLimitActive(d) ((*( (uint64_t *) d ) & 0x200) >> 9)
#define CANUTIL_GET_VALUE_CMPD_state(d) ((*( (uint64_t *) d ) & 0xf00) >> 8)

typedef enum { 
  CMPD_STATE_INIT = 0,
  CMPD_STATE_RUNNING = 1,
  CMPD_STATE_STANDBY = 2,
  CMPD_STATE_FAULT = 3,
  CMPD_STATE_IDLE = 4,
  CMPD_STATE_SNA = 15
 } canutil_CMPD_state_vals;

#define CANUTIL_GET_VALUE_CMPD_wasteHeatState(d) ((*( (uint64_t *) d ) & 0x30) >> 4)

typedef enum { 
  CMPD_WASTE_HEAT_STATE_OFF = 0,
  CMPD_WASTE_HEAT_STATE_ACTIVE = 1,
  CMPD_WASTE_HEAT_STATE_NOT_AVAILABLE = 2,
  CMPD_WASTE_HEAT_STATE_UNUSED = 3
 } canutil_CMPD_wasteHeatState_vals;

#define CANUTIL_GET_VALUE_CMPD_powerLimitTooLowToStart(d) ((*( (uint64_t *) d ) & 0x4) >> 2)
#define CANUTIL_GET_VALUE_CMPD_ready(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_ID405VIN 0x405

#define CANUTIL_GET_VALUE_mux405(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_VINB405(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VINC405(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_VINA405(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_ID51EFC_info 0x51e

#define CANUTIL_GET_VALUE_FC_infoIndex(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_FC_infoAppGitHashBytes(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_infoBootGitHashBytes(d) ((*( (uint64_t *) d ) & 0xffffffffffffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_infoBootSvnRev(d) ((*( (uint64_t *) d ) & 0xffffff0000) >> 16)
#define CANUTIL_GET_VALUE_FC_infoBootUdsProtoVersion(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_FC_infoBuildType(d) ((*( (uint64_t *) d ) & 0x700000000000000) >> 56)
#define CANUTIL_GET_VALUE_FC_infoPlatformType(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_FC_partNumChar01(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_FC_partNumChar08(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_FC_partNumChar15(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_FC_infoBuildConfigID(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_infoCPLDVersionMajor(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_infoMajorVersion(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_infoPcbaID(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_partNumChar02(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_partNumChar09(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_partNumChar16(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FC_infoAssemblyID(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FC_infoBranchOrigin(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FC_infoCPLDVersionMinor(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FC_partNumChar03(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FC_partNumChar10(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FC_partNumChar17(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FC_infoApplicationCRC(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_infoBootCRC(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_infoHardwareID(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_infoMaturity(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_infoUsageID(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_infoVariantCRC(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_partNumChar04(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_partNumChar11(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_partNumChar18(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_FC_infoHardwareRevision(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_FC_partNumChar05(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_FC_partNumChar12(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_FC_partNumChar19(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_FC_infoComponentID(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_FC_infoSubUsageID(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_FC_partNumChar06(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_FC_partNumChar13(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_FC_partNumChar20(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_FC_partNumChar07(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_FC_partNumChar14(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID376FrontInverterTemps 0x376

#define CANUTIL_GET_VALUE_TempInvPCB376(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_TempInverter376(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_TempStator376(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_TempInvCapbank376(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_TempInvHeatsink376(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_TempPctInverter376(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_TempPctStator376(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_inverterTQF(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  INVERTERT_INIT = 0,
  INVERTERT_IRRATIONAL = 1,
  INVERTERT_RATIONAL = 2,
  INVERTERT_UNKNOWN = 3
 } canutil_DIF_inverterTQF_vals;

#define CANUTIL_ID315RearInverterTemps 0x315

#define CANUTIL_GET_VALUE_RearTempInvPCB315(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_RearTempInverter315(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_RearTempStator315(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_RearTempInvCapbank315(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_RearTempInvHeatsink315(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_RearTempPctInverter315(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_RearTempPctStator315(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_inverterTQF(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  INVERTERT_INIT = 0,
  INVERTERT_IRRATIONAL = 1,
  INVERTERT_RATIONAL = 2,
  INVERTERT_UNKNOWN = 3
 } canutil_DIR_inverterTQF_vals;

#define CANUTIL_ID154RearTorqueOld 0x154

#define CANUTIL_GET_VALUE_RAWTorqueRear154(d) ((*( (uint64_t *) d ) & 0xfff000000) >> 24)
#define CANUTIL_ID3B6odometer 0x3b6

#define CANUTIL_GET_VALUE_Odometer3B6(d) ((*( (uint64_t *) d ) & 0xffffffff00000000) >> 32)

typedef enum { 
  SNA = 4294967
 } canutil_Odometer3B6_vals;

#define CANUTIL_ID266RearInverterPower 0x266

#define CANUTIL_GET_VALUE_RearPower266(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)
#define CANUTIL_GET_VALUE_RearHeatPowerOptimal266(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_RearHeatPowerMax266(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_RearHeatPower266(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_RearExcessHeatCmd(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_RearPowerLimit266(d) ((*( (uint64_t *) d ) & 0x1ff0000) >> 16)
#define CANUTIL_ID2E5FrontInverterPower 0x2e5

#define CANUTIL_GET_VALUE_FrontPower2E5(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)
#define CANUTIL_GET_VALUE_FrontHeatPowerOptimal2E5(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_FrontHeatPowerMax2E5(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_FrontHeatPower2E5(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_FrontExcessHeatCmd(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_FrontPowerLimit2E5(d) ((*( (uint64_t *) d ) & 0x1ff0000) >> 16)
#define CANUTIL_ID2E6PlaidFrontPower 0x2e6

#define CANUTIL_GET_VALUE_PFrontPower(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)
#define CANUTIL_GET_VALUE_PFrontHeatPowerOptimal(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_PFrontHeatPowerMax(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_PFrontHeatPower(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_PFrontExcessHeatCmd(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_PFrontPowerLimit(d) ((*( (uint64_t *) d ) & 0x1ff0000) >> 16)
#define CANUTIL_ID269LeftRearPower 0x269

#define CANUTIL_GET_VALUE_LeftRearPower(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)
#define CANUTIL_GET_VALUE_LeftRearHeatPowerOptimal(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_LeftRearPowerMax(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_LeftRearHeatPower(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_LeftRearExcessHeatCmd(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_LeftRearPowerLimit(d) ((*( (uint64_t *) d ) & 0x1ff0000) >> 16)
#define CANUTIL_ID27CRightRearPower 0x27c

#define CANUTIL_GET_VALUE_RightRearPower(d) ((*( (uint64_t *) d ) & 0x3ff800) >> 11)
#define CANUTIL_GET_VALUE_RightRearHeatPowerOptimal(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_RightRearHeatPowerMax(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_RightRearHeatPower(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_RightRearExcessHeatCmd(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_RightRearPowerLimit(d) ((*( (uint64_t *) d ) & 0x1ff0000) >> 16)
#define CANUTIL_ID108DIR_torque 0x108

#define CANUTIL_GET_VALUE_DIR_torqueChecksum(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_DIR_torqueCounter(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)
#define CANUTIL_GET_VALUE_DIR_torqueCommand(d) ((*( (uint64_t *) d ) & 0x3ffe) >> 1)

typedef enum { 
  SNA = 4096
 } canutil_DIR_torqueCommand_vals;

#define CANUTIL_GET_VALUE_DIR_axleSpeedQF(d) ((*( (uint64_t *) d ) & 0x8000000000) >> 39)
#define CANUTIL_GET_VALUE_DIR_torqueActual(d) ((*( (uint64_t *) d ) & 0x3ffe000000000) >> 37)

typedef enum { 
  SNA = 4096
 } canutil_DIR_torqueActual_vals;

#define CANUTIL_GET_VALUE_DIR_axleSpeed(d) ((*( (uint64_t *) d ) & 0xffff000000) >> 24)

typedef enum { 
  SNA = 32768
 } canutil_DIR_axleSpeed_vals;

#define CANUTIL_GET_VALUE_DIR_slavePedalPos(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)

typedef enum { 
  SNA = 255
 } canutil_DIR_slavePedalPos_vals;

#define CANUTIL_ID132HVBattAmpVolt 0x132

#define CANUTIL_GET_VALUE_BattVoltage132(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_SmoothBattCurrent132(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_RawBattCurrent132(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_ChargeHoursRemaining132(d) ((*( (uint64_t *) d ) & 0xfff0000) >> 16)
#define CANUTIL_ID126RearHVStatus 0x126

#define CANUTIL_GET_VALUE_RearHighVoltage126(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_DIR_vBatQF(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)

typedef enum { 
  NOT_QUALIFIED = 0,
  QUALIFIED = 1
 } canutil_DIR_vBatQF_vals;

#define CANUTIL_GET_VALUE_RearMotorCurrent126(d) ((*( (uint64_t *) d ) & 0xffe00000000000) >> 45)
#define CANUTIL_GET_VALUE_DIR_dcCableCurrentEst(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIR_switchingFrequency(d) ((*( (uint64_t *) d ) & 0x7ff0000) >> 16)
#define CANUTIL_GET_VALUE_DIR_targetFluxMode(d) ((*( (uint64_t *) d ) & 0x60) >> 5)
#define CANUTIL_ID1A5FrontHVStatus 0x1a5

#define CANUTIL_GET_VALUE_FrontHighVoltage1A5(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_DIF_vBatQF(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)

typedef enum { 
  NOT_QUALIFIED = 0,
  QUALIFIED = 1
 } canutil_DIF_vBatQF_vals;

#define CANUTIL_GET_VALUE_FrontMotorCurrent1A5(d) ((*( (uint64_t *) d ) & 0xffe00000000000) >> 45)
#define CANUTIL_GET_VALUE_DIF_dcCableCurrentEst(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_DIF_switchingFrequency(d) ((*( (uint64_t *) d ) & 0x7ff0000) >> 16)
#define CANUTIL_GET_VALUE_DIF_targetFluxMode(d) ((*( (uint64_t *) d ) & 0x60) >> 5)
#define CANUTIL_ID127LeftRearHVStatus 0x127

#define CANUTIL_GET_VALUE_LeftRear_vBat(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_LeftRear_vBatQF(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)
#define CANUTIL_GET_VALUE_LeftRear_motorCurrent(d) ((*( (uint64_t *) d ) & 0xffe00000000000) >> 45)
#define CANUTIL_GET_VALUE_LeftRear_dcCableCurrentEst(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_LeftRear_switchingFrequency(d) ((*( (uint64_t *) d ) & 0x7ff0000) >> 16)
#define CANUTIL_GET_VALUE_LeftRear_targetFluxMode(d) ((*( (uint64_t *) d ) & 0x60) >> 5)
#define CANUTIL_ID12ARightRearHVStatus 0x12a

#define CANUTIL_GET_VALUE_RightRear_vBat(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_RightRear_vBatQF(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)
#define CANUTIL_GET_VALUE_RightRear_motorCurrent(d) ((*( (uint64_t *) d ) & 0xffe00000000000) >> 45)
#define CANUTIL_GET_VALUE_RightRear_dcCableCurrentEst(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_RightRear_switchingFrequency(d) ((*( (uint64_t *) d ) & 0x7ff0000) >> 16)
#define CANUTIL_GET_VALUE_RightRear_targetFluxMode(d) ((*( (uint64_t *) d ) & 0x60) >> 5)
#define CANUTIL_ID31FTPMSsensors 0x31f

#define CANUTIL_GET_VALUE_TPMSFLpressure31F(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_TPMSFLtemp31F(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_TPMSFRpressure31F(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_TPMSFRtemp31F(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_TPMSRLpressure31F(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_TPMSRLtemp31F(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_TPMSRRpressure31F(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_TPMSRRtemp31F(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID3FEbrakeTemps 0x3fe

#define CANUTIL_GET_VALUE_BrakeTempFL3FE(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_GET_VALUE_BrakeTempFR3FE(d) ((*( (uint64_t *) d ) & 0xffc0000000) >> 30)
#define CANUTIL_GET_VALUE_BrakeTempRL3FE(d) ((*( (uint64_t *) d ) & 0x3ff00000) >> 20)
#define CANUTIL_GET_VALUE_BrakeTempRR3FE(d) ((*( (uint64_t *) d ) & 0xffc00) >> 10)
#define CANUTIL_ID228EPBrightStatus 0x228

#define CANUTIL_GET_VALUE_EPBRunitStatus228(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)

typedef enum { 
  DriveReleased = 1,
  ParkEngaged = 3,
  Engaging = 8,
  Disengaging = 10
 } canutil_EPBRunitStatus228_vals;

#define CANUTIL_GET_VALUE_EPBRunitFaultStatus228(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)
#define CANUTIL_GET_VALUE_EPBRsummonState228(d) ((*( (uint64_t *) d ) & 0xe00000000000000) >> 57)
#define CANUTIL_GET_VALUE_EPBRdisconnected228(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_EPBRlockoutUnlockCount228(d) ((*( (uint64_t *) d ) & 0xfe0000000000000) >> 53)
#define CANUTIL_GET_VALUE_EPBResmCaliperRequest228(d) ((*( (uint64_t *) d ) & 0x1c00000000000) >> 46)

typedef enum { 
  idle = 1,
  engaging = 2,
  disengaging = 3
 } canutil_EPBResmCaliperRequest228_vals;

#define CANUTIL_GET_VALUE_EPBRcsmFaultReason228(d) ((*( (uint64_t *) d ) & 0xf80000000000) >> 43)
#define CANUTIL_GET_VALUE_EPBResmOperationTrigger228(d) ((*( (uint64_t *) d ) & 0x7c000000000) >> 38)

typedef enum { 
  ParkEngaged = 1,
  Released = 6,
  SuperPark = 22
 } canutil_EPBResmOperationTrigger228_vals;

#define CANUTIL_GET_VALUE_EPBRsummonFaultReason228(d) ((*( (uint64_t *) d ) & 0x3e00000000) >> 33)
#define CANUTIL_GET_VALUE_EPBRlocalServiceModeActive228(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_EPBR12VFilt228(d) ((*( (uint64_t *) d ) & 0x7ff8000000) >> 27)
#define CANUTIL_GET_VALUE_EPBRCDPQualified228(d) ((*( (uint64_t *) d ) & 0x18000) >> 15)
#define CANUTIL_GET_VALUE_EPBRinternalCDPRequest228(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_EPBRinternalStatusCounter228(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_EPBRinternalStatusChecksum228(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID288EPBleftStatus 0x288

#define CANUTIL_GET_VALUE_EPBLunitStatus288(d) ((*( (uint64_t *) d ) & 0x3e0) >> 5)

typedef enum { 
  DriveReleased = 1,
  ParkEngaged = 3,
  Engaging = 8,
  Disengaging = 10
 } canutil_EPBLunitStatus288_vals;

#define CANUTIL_GET_VALUE_EPBLunitFaultStatus288(d) ((*( (uint64_t *) d ) & 0x1800000000000000) >> 59)
#define CANUTIL_GET_VALUE_EPBLsummonState288(d) ((*( (uint64_t *) d ) & 0xe00000000000000) >> 57)
#define CANUTIL_GET_VALUE_EPBLdisconnected288(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)
#define CANUTIL_GET_VALUE_EPBLlockoutUnlockCount288(d) ((*( (uint64_t *) d ) & 0xfe0000000000000) >> 53)
#define CANUTIL_GET_VALUE_EPBLesmCaliperRequest288(d) ((*( (uint64_t *) d ) & 0x1c00000000000) >> 46)

typedef enum { 
  idle = 1,
  engaging = 2,
  disengaging = 3
 } canutil_EPBLesmCaliperRequest288_vals;

#define CANUTIL_GET_VALUE_EPBLcsmFaultReason288(d) ((*( (uint64_t *) d ) & 0xf80000000000) >> 43)
#define CANUTIL_GET_VALUE_EPBLesmOperationTrigger288(d) ((*( (uint64_t *) d ) & 0x7c000000000) >> 38)

typedef enum { 
  ParkEngaged = 1,
  Released = 6,
  SuperPark = 22
 } canutil_EPBLesmOperationTrigger288_vals;

#define CANUTIL_GET_VALUE_EPBLsummonFaultReason288(d) ((*( (uint64_t *) d ) & 0x3e00000000) >> 33)
#define CANUTIL_GET_VALUE_EPBLlocalServiceModeActive288(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)
#define CANUTIL_GET_VALUE_EPBL12VFilt288(d) ((*( (uint64_t *) d ) & 0x7ff8000000) >> 27)
#define CANUTIL_GET_VALUE_EPBLCDPQualified288(d) ((*( (uint64_t *) d ) & 0x18000) >> 15)
#define CANUTIL_GET_VALUE_EPBLinternalCDPRequest288(d) ((*( (uint64_t *) d ) & 0x2000) >> 13)
#define CANUTIL_GET_VALUE_EPBLinternalStatusCounter288(d) ((*( (uint64_t *) d ) & 0xf000) >> 12)
#define CANUTIL_GET_VALUE_EPBLinternalStatusChecksum288(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID72ABMS_serialNumber 0x72a

#define CANUTIL_GET_VALUE_BMS_serialNumberMultiplexer(d) ((*( (uint64_t *) d ) & 0x2) >> 1)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte01(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte08(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte02(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte09(d) ((*( (uint64_t *) d ) & 0xff000000000000) >> 48)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte03(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte10(d) ((*( (uint64_t *) d ) & 0xff0000000000) >> 40)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte04(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte11(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte05(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte12(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte06(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte13(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte07(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_BMS_packSerialNumberByte14(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_ID7FFcarConfig 0x7ff

#define CANUTIL_GET_VALUE_GTW_carConfigMultiplexer(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_GTW_birthday(d) ((*( (uint64_t *) d ) & 0xffffffff000000) >> 24)
#define CANUTIL_GET_VALUE_GTW_deliveryStatus(d) ((*( (uint64_t *) d ) & 0x100000000000000) >> 56)

typedef enum { 
  NOT_DELIVERED = 0,
  DELIVERED = 1
 } canutil_GTW_deliveryStatus_vals;

#define CANUTIL_GET_VALUE_GTW_mapRegion(d) ((*( (uint64_t *) d ) & 0xf00000000000000) >> 56)

typedef enum { 
  US = 0,
  EU = 1,
  NONE = 2,
  CN = 3,
  AU = 4,
  JP = 5,
  TW = 6,
  KR = 7,
  ME = 8,
  HK = 9,
  MO = 10
 } canutil_GTW_mapRegion_vals;

#define CANUTIL_GET_VALUE_GTW_epasType(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)

typedef enum { 
  MANDO_VGR69_GEN3 = 0
 } canutil_GTW_epasType_vals;

#define CANUTIL_GET_VALUE_GTW_frontSeatHeaters(d) ((*( (uint64_t *) d ) & 0x80000000000000) >> 55)

typedef enum { 
  NONE = 0,
  KONGSBERG_LOW_POWER = 1
 } canutil_GTW_frontSeatHeaters_vals;

#define CANUTIL_GET_VALUE_GTW_drivetrainType(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)

typedef enum { 
  RWD = 0,
  AWD = 1
 } canutil_GTW_drivetrainType_vals;

#define CANUTIL_GET_VALUE_GTW_rearSeatHeaters(d) ((*( (uint64_t *) d ) & 0x40000000000000) >> 54)

typedef enum { 
  NONE = 0,
  KONGSBERG_LOW_POWER = 1
 } canutil_GTW_rearSeatHeaters_vals;

#define CANUTIL_GET_VALUE_GTW_rightHandDrive(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)

typedef enum { 
  LEFT = 0,
  RIGHT = 1
 } canutil_GTW_rightHandDrive_vals;

#define CANUTIL_GET_VALUE_GTW_tpmsType(d) ((*( (uint64_t *) d ) & 0x20000000000000) >> 53)

typedef enum { 
  CONTI_2 = 0,
  TESLA_BLE = 1
 } canutil_GTW_tpmsType_vals;

#define CANUTIL_GET_VALUE_GTW_performancePackage(d) ((*( (uint64_t *) d ) & 0x70000000000000) >> 52)

typedef enum { 
  BASE = 0,
  PERFORMANCE = 1,
  LUDICROUS = 2,
  BASE_PLUS = 3,
  BASE_PLUS_AWD = 4
 } canutil_GTW_performancePackage_vals;

#define CANUTIL_GET_VALUE_GTW_rearLightType(d) ((*( (uint64_t *) d ) & 0x30000000000000) >> 52)

typedef enum { 
  NA = 0,
  EU_CN = 1,
  GLOBAL = 2
 } canutil_GTW_rearLightType_vals;

#define CANUTIL_GET_VALUE_GTW_homelinkType(d) ((*( (uint64_t *) d ) & 0x8000000000000) >> 51)

typedef enum { 
  NONE = 0,
  HOMELINK_V_OPT_2 = 1
 } canutil_GTW_homelinkType_vals;

#define CANUTIL_GET_VALUE_GTW_headlamps(d) ((*( (uint64_t *) d ) & 0xc000000000000) >> 50)

typedef enum { 
  BASE = 0,
  PREMIUM = 1
 } canutil_GTW_headlamps_vals;

#define CANUTIL_GET_VALUE_GTW_vdcType(d) ((*( (uint64_t *) d ) & 0x4000000000000) >> 50)

typedef enum { 
  BOSCH_VDC = 0,
  TESLA_VDC = 1
 } canutil_GTW_vdcType_vals;

#define CANUTIL_GET_VALUE_GTW_towPackage(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)

typedef enum { 
  NONE = 0,
  TESLA_REV1 = 1
 } canutil_GTW_towPackage_vals;

#define CANUTIL_GET_VALUE_GTW_xcpIbst(d) ((*( (uint64_t *) d ) & 0x2000000000000) >> 49)

typedef enum { 
  FALSE = 0,
  TRUE = 1
 } canutil_GTW_xcpIbst_vals;

#define CANUTIL_GET_VALUE_GTW_country(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_GTW_xcpESP(d) ((*( (uint64_t *) d ) & 0x1000000000000) >> 48)

typedef enum { 
  FALSE = 0,
  TRUE = 1
 } canutil_GTW_xcpESP_vals;

#define CANUTIL_GET_VALUE_GTW_coolantPumpType(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)

typedef enum { 
  DUAL = 0,
  SINGLE_PUMP_BATT = 1
 } canutil_GTW_coolantPumpType_vals;

#define CANUTIL_GET_VALUE_GTW_memoryMirrors(d) ((*( (uint64_t *) d ) & 0x800000000000) >> 47)

typedef enum { 
  NOT_INSTALLED = 0,
  SMR = 1
 } canutil_GTW_memoryMirrors_vals;

#define CANUTIL_GET_VALUE_GTW_chassisType(d) ((*( (uint64_t *) d ) & 0x1c00000000000) >> 46)

typedef enum { 
  MODEL_S_CHASSIS = 0,
  MODEL_X_CHASSIS = 1,
  MODEL_3_CHASSIS = 2,
  MODEL_Y_CHASSIS = 3
 } canutil_GTW_chassisType_vals;

#define CANUTIL_GET_VALUE_GTW_powerSteeringColumn(d) ((*( (uint64_t *) d ) & 0x400000000000) >> 46)

typedef enum { 
  NOT_INSTALLED = 0,
  TK = 1
 } canutil_GTW_powerSteeringColumn_vals;

#define CANUTIL_GET_VALUE_GTW_frontFogLamps(d) ((*( (uint64_t *) d ) & 0x100000000000) >> 44)

typedef enum { 
  NOT_INSTALLED = 0,
  INSTALLED = 1
 } canutil_GTW_frontFogLamps_vals;

#define CANUTIL_GET_VALUE_GTW_airSuspension(d) ((*( (uint64_t *) d ) & 0xc0000000000) >> 42)

typedef enum { 
  NONE = 0,
  TESLA_STANDARD = 1,
  TESLA_ADAPTIVE = 2
 } canutil_GTW_airSuspension_vals;

#define CANUTIL_GET_VALUE_GTW_lumbarECUType(d) ((*( (uint64_t *) d ) & 0x20000000000) >> 41)

typedef enum { 
  NONE = 0,
  ALFMEIER = 1
 } canutil_GTW_lumbarECUType_vals;

#define CANUTIL_GET_VALUE_GTW_passengerOccupancySensorType(d) ((*( (uint64_t *) d ) & 0x10000000000) >> 40)

typedef enum { 
  OCS = 0,
  RESISTIVE_PAD = 1
 } canutil_GTW_passengerOccupancySensorType_vals;

#define CANUTIL_GET_VALUE_GTW_autopilotCameraType(d) ((*( (uint64_t *) d ) & 0x4000000000) >> 38)

typedef enum { 
  RCCB_CAMERAS = 0
 } canutil_GTW_autopilotCameraType_vals;

#define CANUTIL_GET_VALUE_GTW_auxParkLamps(d) ((*( (uint64_t *) d ) & 0xc000000000) >> 38)

typedef enum { 
  NA_BASE = 0,
  NA_PREMIUM = 1,
  EU = 2,
  NONE = 3
 } canutil_GTW_auxParkLamps_vals;

#define CANUTIL_GET_VALUE_GTW_connectivityPackage(d) ((*( (uint64_t *) d ) & 0x2000000000) >> 37)

typedef enum { 
  BASE = 0,
  PREMIUM = 1
 } canutil_GTW_connectivityPackage_vals;

#define CANUTIL_GET_VALUE_GTW_plcSupportType(d) ((*( (uint64_t *) d ) & 0x3000000000) >> 36)

typedef enum { 
  NONE = 0,
  ONBOARD_ADAPTER = 1,
  NATIVE_CHARGE_PORT = 2
 } canutil_GTW_plcSupportType_vals;

#define CANUTIL_GET_VALUE_GTW_hvacPanelVaneType(d) ((*( (uint64_t *) d ) & 0x800000000) >> 35)

typedef enum { 
  PARALLEL_V1 = 0,
  CONVERGENT_V1 = 1
 } canutil_GTW_hvacPanelVaneType_vals;

#define CANUTIL_GET_VALUE_GTW_audioType(d) ((*( (uint64_t *) d ) & 0xc00000000) >> 34)

typedef enum { 
  BASE = 0,
  PREMIUM = 1,
  BASE_WITH_PREMIUM200 = 2
 } canutil_GTW_audioType_vals;

#define CANUTIL_GET_VALUE_GTW_cabinPTCHeaterType(d) ((*( (uint64_t *) d ) & 0x200000000) >> 33)

typedef enum { 
  BORGWARNER = 0,
  NONE = 1
 } canutil_GTW_cabinPTCHeaterType_vals;

#define CANUTIL_GET_VALUE_GTW_eBuckConfig(d) ((*( (uint64_t *) d ) & 0x100000000) >> 32)

typedef enum { 
  NONE = 0,
  DEV_BUCK = 1
 } canutil_GTW_eBuckConfig_vals;

#define CANUTIL_GET_VALUE_GTW_packEnergy(d) ((*( (uint64_t *) d ) & 0x1f00000000) >> 32)

typedef enum { 
  PACK_50_KWH = 0,
  PACK_74_KWH = 1,
  PACK_62_KWH = 2,
  PACK_100_KWH = 3,
  PACK_75_KWH = 4
 } canutil_GTW_packEnergy_vals;

#define CANUTIL_GET_VALUE_GTW_tireType(d) ((*( (uint64_t *) d ) & 0x1f00000000) >> 32)

typedef enum { 
  UNKNOWN = 0,
  MICHELIN_ALL_SEASON_18 = 1,
  MICHELIN_SUMMER_18 = 2,
  HANKOOK_SUMMER_19 = 3,
  CONTI_ALL_SEASON_19 = 4,
  MICHELIN_SUMMER_20 = 5,
  GOODYEAR_ALL_SEASON_20 = 17,
  PIRELLI_SUMMER_21 = 18,
  MICHELIN_ALL_SEASON_21 = 19
 } canutil_GTW_tireType_vals;

#define CANUTIL_GET_VALUE_GTW_windshieldType(d) ((*( (uint64_t *) d ) & 0x80000000) >> 31)

typedef enum { 
  SEKISUI_ACOUSTIC = 0,
  EASTMAN_ACOUSTIC = 1
 } canutil_GTW_windshieldType_vals;

#define CANUTIL_GET_VALUE_GTW_activeHighBeam(d) ((*( (uint64_t *) d ) & 0x40000000) >> 30)

typedef enum { 
  NOT_ACTIVE = 0,
  ACTIVE = 1
 } canutil_GTW_activeHighBeam_vals;

#define CANUTIL_GET_VALUE_GTW_airbagCutoffSwitch(d) ((*( (uint64_t *) d ) & 0x20000000) >> 29)

typedef enum { 
  CUTOFF_SWITCH_DISABLED = 0,
  CUTOFF_SWITCH_ENABLED = 1
 } canutil_GTW_airbagCutoffSwitch_vals;

#define CANUTIL_GET_VALUE_GTW_intrusionSensorType(d) ((*( (uint64_t *) d ) & 0x10000000) >> 28)

typedef enum { 
  NOT_INSTALLED = 0,
  VODAFONE = 1
 } canutil_GTW_intrusionSensorType_vals;

#define CANUTIL_GET_VALUE_GTW_frontSeatReclinerHardware(d) ((*( (uint64_t *) d ) & 0x18000000) >> 27)

typedef enum { 
  STANDARD_RANGE = 0,
  RIGHT_SEAT_REDUCED_RANGE = 1,
  LEFT_SEAT_REDUCED_RANGE = 2,
  LEFT_RIGHT_SEAT_REDUCED_RANGE = 3
 } canutil_GTW_frontSeatReclinerHardware_vals;

#define CANUTIL_GET_VALUE_GTW_spoilerType(d) ((*( (uint64_t *) d ) & 0x8000000) >> 27)

typedef enum { 
  NOT_INSTALLED = 0,
  PASSIVE = 1
 } canutil_GTW_spoilerType_vals;

#define CANUTIL_GET_VALUE_GTW_rearGlassType(d) ((*( (uint64_t *) d ) & 0x4000000) >> 26)

typedef enum { 
  NX = 0,
  TSA5_NOPET = 1
 } canutil_GTW_rearGlassType_vals;

#define CANUTIL_GET_VALUE_GTW_brakeLineSwitchType(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)

typedef enum { 
  DI_VC_SHARED = 0,
  VC_ONLY = 1
 } canutil_GTW_brakeLineSwitchType_vals;

#define CANUTIL_GET_VALUE_GTW_rearFogLamps(d) ((*( (uint64_t *) d ) & 0x2000000) >> 25)

typedef enum { 
  NOT_INSTALLED = 0,
  INSTALLED = 1
 } canutil_GTW_rearFogLamps_vals;

#define CANUTIL_GET_VALUE_GTW_dasHw(d) ((*( (uint64_t *) d ) & 0x7000000) >> 24)

typedef enum { 
  PARKER_PASCAL_2_5 = 3,
  TESLA_AP3 = 4
 } canutil_GTW_dasHw_vals;

#define CANUTIL_GET_VALUE_GTW_eCallEnabled(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  DISABLED = 0,
  ENABLED_OHC_SOS = 1,
  ENABLED_UI_SOS = 2
 } canutil_GTW_eCallEnabled_vals;

#define CANUTIL_GET_VALUE_GTW_espValveType(d) ((*( (uint64_t *) d ) & 0x3000000) >> 24)

typedef enum { 
  UNKNOWN = 0,
  VALVE_TYPE_1 = 1,
  VALVE_TYPE_2 = 2
 } canutil_GTW_espValveType_vals;

#define CANUTIL_GET_VALUE_GTW_roofType(d) ((*( (uint64_t *) d ) & 0x1000000) >> 24)

typedef enum { 
  METAL = 0,
  FIXED_GLASS = 1,
  PANORAMIC = 2
 } canutil_GTW_roofType_vals;

#define CANUTIL_GET_VALUE_GTW_autopilot(d) ((*( (uint64_t *) d ) & 0x1c00000) >> 22)

typedef enum { 
  NONE = 0,
  HIGHWAY = 1,
  ENHANCED = 2,
  SELF_DRIVING = 3,
  BASIC = 4
 } canutil_GTW_autopilot_vals;

#define CANUTIL_GET_VALUE_GTW_softRange(d) ((*( (uint64_t *) d ) & 0x1c00000) >> 22)

typedef enum { 
  STANDARD = 0,
  RANGE_220_MILES = 1,
  RANGE_93_MILES = 2
 } canutil_GTW_softRange_vals;

#define CANUTIL_GET_VALUE_GTW_passengerAirbagType(d) ((*( (uint64_t *) d ) & 0x600000) >> 21)

typedef enum { 
  FULL_SUPPRESSION = 0,
  SAFETY_VENT = 1,
  EUROW = 2
 } canutil_GTW_passengerAirbagType_vals;

#define CANUTIL_GET_VALUE_GTW_refrigerantType(d) ((*( (uint64_t *) d ) & 0x180000) >> 19)

typedef enum { 
  Default = 0,
  R134A = 1,
  R1234YF = 2
 } canutil_GTW_refrigerantType_vals;

#define CANUTIL_GET_VALUE_GTW_superchargingAccess(d) ((*( (uint64_t *) d ) & 0x180000) >> 19)

typedef enum { 
  NOT_ALLOWED = 0,
  ALLOWED = 1,
  PAY_AS_YOU_GO = 2
 } canutil_GTW_superchargingAccess_vals;

#define CANUTIL_GET_VALUE_GTW_compressorType(d) ((*( (uint64_t *) d ) & 0xc0000) >> 18)

typedef enum { 
  HANON_33CC = 0,
  DENSO_41CC_8K = 1,
  DENSO_41CC_11K = 2
 } canutil_GTW_compressorType_vals;

#define CANUTIL_GET_VALUE_GTW_headlightLevelerType(d) ((*( (uint64_t *) d ) & 0x20000) >> 17)

typedef enum { 
  NONE = 0,
  GEN1 = 1
 } canutil_GTW_headlightLevelerType_vals;

#define CANUTIL_GET_VALUE_GTW_efficiencyPackage(d) ((*( (uint64_t *) d ) & 0x70000) >> 16)

typedef enum { 
  DEFAULT = 0,
  M3_SR_PLUS_2020 = 1,
  M3_LR_2020 = 2,
  M3_LR_PERFORMANCE_2020 = 3
 } canutil_GTW_efficiencyPackage_vals;

#define CANUTIL_GET_VALUE_GTW_exteriorColor(d) ((*( (uint64_t *) d ) & 0x70000) >> 16)

typedef enum { 
  RED_MULTICOAT = 0,
  SOLID_BLACK = 1,
  SILVER_METALLIC = 2,
  MIDNIGHT_SILVER = 3,
  DEEP_BLUE = 5,
  PEARL_WHITE = 6
 } canutil_GTW_exteriorColor_vals;

#define CANUTIL_GET_VALUE_GTW_restraintsHardwareType(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)

typedef enum { 
  NA_M3 = 21,
  EUROW_ECALL_M3 = 22,
  EUROW_NO_ECALL_M3 = 23,
  NA_MY_OLD = 31,
  NA_MY = 32,
  EUROW_ECALL_MY = 33,
  EUROW_NO_ECALL_MY = 34
 } canutil_GTW_restraintsHardwareType_vals;

#define CANUTIL_GET_VALUE_GTW_wheelType(d) ((*( (uint64_t *) d ) & 0x7f0000) >> 16)

typedef enum { 
  PINWHEEL_18 = 0,
  STILETTO_19 = 1,
  STILETTO_20 = 2,
  STILETTO_20_DARK_STAGGERED = 3,
  GEMINI_19_SQUARE = 4,
  GEMINI_19_STAGGERED = 5,
  STILETTO_20_DARK_SQUARE = 14,
  INDUCTION_20_BLACK = 15,
  UBERTURBINE_21_BLACK = 16,
  APOLLO_19_SILVER = 17,
  PINWHEEL_18_CAP_KIT = 18,
  ZEROG_20_GUNPOWDER = 19,
  APOLLO_19_SILVER_CAP_KIT = 20
 } canutil_GTW_wheelType_vals;

#define CANUTIL_GET_VALUE_GTW_numberHVILNodes(d) ((*( (uint64_t *) d ) & 0x6000) >> 13)

typedef enum { 
  HVIL_NODES_0 = 0,
  HVIL_NODES_1 = 1,
  HVIL_NODES_2 = 2,
  HVIL_NODES_3 = 3,
  HVIL_NODES_4 = 4,
  HVIL_NODES_5 = 5
 } canutil_GTW_numberHVILNodes_vals;

#define CANUTIL_GET_VALUE_GTW_steeringColumnMotorType(d) ((*( (uint64_t *) d ) & 0x1000) >> 12)

typedef enum { 
  BOSCH = 0,
  JE = 1
 } canutil_GTW_steeringColumnMotorType_vals;

#define CANUTIL_GET_VALUE_GTW_pedestrianWarningSound(d) ((*( (uint64_t *) d ) & 0x400) >> 10)

typedef enum { 
  NONE = 0,
  SPEAKER = 1
 } canutil_GTW_pedestrianWarningSound_vals;

#define CANUTIL_GET_VALUE_GTW_radarHeaterType(d) ((*( (uint64_t *) d ) & 0x200) >> 9)

typedef enum { 
  NONE = 0,
  BECKER_THIN_3M = 1
 } canutil_GTW_radarHeaterType_vals;

#define CANUTIL_GET_VALUE_GTW_steeringColumnUJointType(d) ((*( (uint64_t *) d ) & 0x200) >> 9)

typedef enum { 
  B_SAMPLE_PHASING = 0,
  C_SAMPLE_PHASING = 1
 } canutil_GTW_steeringColumnUJointType_vals;

#define CANUTIL_GET_VALUE_GTW_bPillarNFCParam(d) ((*( (uint64_t *) d ) & 0x100) >> 8)

typedef enum { 
  MODEL_3 = 0,
  MODEL_Y = 1
 } canutil_GTW_bPillarNFCParam_vals;

#define CANUTIL_GET_VALUE_GTW_immersiveAudio(d) ((*( (uint64_t *) d ) & 0x300) >> 8)

typedef enum { 
  DISABLED = 0,
  BASE = 1,
  PREMIUM = 2
 } canutil_GTW_immersiveAudio_vals;

#define CANUTIL_GET_VALUE_GTW_interiorLighting(d) ((*( (uint64_t *) d ) & 0x180) >> 7)

typedef enum { 
  BASE = 0,
  PREMIUM = 1,
  PREMIUM_NO_POCKET_LIGHT = 2
 } canutil_GTW_interiorLighting_vals;

#define CANUTIL_GET_VALUE_GTW_brakeHWType(d) ((*( (uint64_t *) d ) & 0x60) >> 5)

typedef enum { 
  BREMBO_P42_MANDO_43MOC = 0,
  BREMBO_LARGE_P42_BREMBO_44MOC = 1,
  BREMBO_LARGE_P42_MANDO_43MOC = 2,
  BREMBO_LARGE_P42_BREMBO_LARGE_44MOC = 3
 } canutil_GTW_brakeHWType_vals;

#define CANUTIL_GET_VALUE_GTW_frontSeatType(d) ((*( (uint64_t *) d ) & 0x70) >> 4)

typedef enum { 
  BASE_TESLA = 0,
  PREMIUM_TESLA = 1,
  PREMIUM_L_YANFENG_R_TESLA = 2,
  PREMIUM_L_TESLA_R_YANFENG = 3,
  PREMIUM_YANFENG = 4
 } canutil_GTW_frontSeatType_vals;

#define CANUTIL_GET_VALUE_GTW_roofGlassType(d) ((*( (uint64_t *) d ) & 0x8) >> 3)

typedef enum { 
  TSA3_PET = 0,
  TSA5_NOPET = 1
 } canutil_GTW_roofGlassType_vals;

#define CANUTIL_GET_VALUE_GTW_twelveVBatteryType(d) ((*( (uint64_t *) d ) & 0x2) >> 1)

typedef enum { 
  ATLASBX_B24_FLOODED = 0,
  CLARIOS_B24_FLOODED = 1
 } canutil_GTW_twelveVBatteryType_vals;

#define CANUTIL_ID332BattBrickMinMax 0x332

#define CANUTIL_GET_VALUE_BattBrickMultiplexer332(d) ((*( (uint64_t *) d ) & 0xc) >> 2)
#define CANUTIL_GET_VALUE_BattBrickempMaxNum332(d) ((*( (uint64_t *) d ) & 0x3c) >> 2)
#define CANUTIL_GET_VALUE_BattBrickVoltageMax332(d) ((*( (uint64_t *) d ) & 0x3ffc00) >> 10)
#define CANUTIL_GET_VALUE_BattBrickTempMinNum332(d) ((*( (uint64_t *) d ) & 0xf0000000000) >> 40)
#define CANUTIL_GET_VALUE_BattBrickTempMax332(d) ((*( (uint64_t *) d ) & 0xff00000000) >> 32)
#define CANUTIL_GET_VALUE_BattBrickVoltageMin332(d) ((*( (uint64_t *) d ) & 0xfff00000000) >> 32)
#define CANUTIL_GET_VALUE_BattBrickTempMin332(d) ((*( (uint64_t *) d ) & 0xff000000) >> 24)
#define CANUTIL_GET_VALUE_BattBrickModelTMax332(d) ((*( (uint64_t *) d ) & 0xff0000) >> 16)
#define CANUTIL_GET_VALUE_BattBrickVoltageMaxNum332(d) ((*( (uint64_t *) d ) & 0x7f0000) >> 16)
#define CANUTIL_GET_VALUE_BattBrickModelTMin332(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_BattBrickVoltageMinNum332(d) ((*( (uint64_t *) d ) & 0x7f00) >> 8)
#define CANUTIL_ID401BrickVoltages 0x401

#define CANUTIL_GET_VALUE_MultiplexSelector(d) ((*( (uint64_t *) d ) & 0xff00) >> 8)
#define CANUTIL_GET_VALUE_StatusFlags(d) ((*( (uint64_t *) d ) & 0xff00000000000000) >> 56)
#define CANUTIL_GET_VALUE_Brick0(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick3(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick6(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick9(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick12(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick15(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick18(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick21(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick24(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick27(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick30(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick34(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick36(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick39(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick42(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick45(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick48(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick51(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick54(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick57(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick60(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick63(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick66(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick69(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick72(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick75(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick78(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick81(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick84(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick87(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick90(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick93(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick96(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick99(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick102(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick105(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick108(d) ((*( (uint64_t *) d ) & 0xffff000000000000) >> 48)
#define CANUTIL_GET_VALUE_Brick1(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick4(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick7(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick10(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick13(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick16(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick19(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick22(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick25(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick28(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick31(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick33(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick37(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick40(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick43(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick46(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick49(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick52(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick55(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick58(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick61(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick64(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick67(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick70(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick73(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick76(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick79(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick82(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick85(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick88(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick91(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick94(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick97(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick100(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick103(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick106(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick109(d) ((*( (uint64_t *) d ) & 0xffff00000000) >> 32)
#define CANUTIL_GET_VALUE_Brick2(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick5(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick8(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick11(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick14(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick17(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick20(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick23(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick26(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick29(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick32(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick35(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick38(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick41(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick44(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick47(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick50(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick53(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick56(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick59(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick62(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick65(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick68(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick71(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick74(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick77(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick80(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick83(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick86(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick89(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick92(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick95(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick98(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick101(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick104(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick107(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
#define CANUTIL_GET_VALUE_Brick110(d) ((*( (uint64_t *) d ) & 0xffff0000) >> 16)
