/**
 * @file can_utils.h
 * @brief Header file for CAN message utilities.
 *
 * @details
 * This file provides macros and enumerations to assist in parsing and interpreting
 * CAN messages. It is auto-generated by dbc-to-c.py, and any modifications should
 * be made in the DBC file to ensure consistency.
 *
 * The following macros and enumerations are available:
 */

/**
 * @def CANUTILS_[message_name]
 * @brief Message Macros
 * 
 * Maps CAN message names to their corresponding frame IDs.
 *
 * Example usage:
 * @code
 * CANUTILS_Heartbeat --> 0x650
 * @endcode
 */

/**
 * @def CANUTIL_GET_VALUE_[signal_name]
 * @brief Signal Extraction Macros
 * 
 * Extracts the signal value from an 8-byte CAN message. Requires a pointer
 * to the data array for the message.
 * 
 * Example usage:
 * @code
 * uint8_t can_message_arr[8];
 * int boost_enable = CANUTIL_GET_VALUE_BoostEnable(*can_message_arr);
 * @endcode
 */

/**
 * @typedef canutil_[signal_name]_values
 * @brief Signal Value Enums
 * 
 * Defines enumerations that represent possible values for specific signals.
 *
 * Example:
 * @code
 * typedef enum {
 *     OFF = 0,
 *     ON = 1
 * } canutil_UI_Mode_vals
 *
 * canutil_UI_Mode_vals mode = OFF;
 * @endcode
 */

